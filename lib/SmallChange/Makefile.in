# Makefile.in generated by automake 1.8.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



SOURCES = $(SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_SOURCES) $(libSmallChange@SUFFIX@_la_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = lib/SmallChange
DIST_COMMON = $(am__libSmallChangeinc_HEADERS_DIST) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/basic.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/../simacros/bin/../cfg/m4/coin.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_debug.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_exceptions.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_profiling.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_rtti.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_symbols.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_warnings.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/configuration_summary.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/errors.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/exit.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/gendsp.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/inventor.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/mac.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/misc_compiler.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/mks.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/opengl.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/path_conversion.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/project.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/pthread.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/sim.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/sourcedir.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/uniqify_option_list.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/wrapmsvc.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/x11.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/cfg/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = basic.h
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libSmallChangeincdir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_AR = $(AR) \
	$(ARFLAGS)
SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_DEPENDENCIES =  \
	nodekits/nodekits.lst nodes/nodes.lst elements/elements.lst \
	engines/engines.lst actions/actions.lst misc/misc.lst \
	draggers/draggers.lst eventhandlers/eventhandlers.lst
am__SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_SOURCES_DIST =  \
	dummy.cpp actions/SoGenerateSceneGraphAction.cpp \
	actions/SoTweakAction.cpp actions/ToVertexArrayShapeAction.cpp \
	draggers/SmRangeTranslate1Dragger.cpp \
	draggers/SoAngle1Dragger.cpp draggers/SoAngle1Manip.cpp \
	elements/GLDepthBufferElement.cpp elements/UTMElement.cpp \
	engines/CubicSplineEngine.cpp engines/Rot2Heading.cpp \
	engines/SmInverseRotation.cpp eventhandlers/SmEventHandler.cpp \
	eventhandlers/SmExaminerEventHandler.cpp \
	eventhandlers/SmHelicopterEventHandler.cpp \
	eventhandlers/SmPanEventHandler.cpp \
	eventhandlers/SmSphereEventHandler.cpp misc/cameracontrol.cpp \
	misc/Envelope.cpp misc/Init.cpp misc/SbCubicSpline.cpp \
	misc/SceneManager.cpp nodekits/bitmapfont.cpp \
	nodekits/DynamicBaseKit.cpp nodekits/GeoMarkerKit.cpp \
	nodekits/LegendKit.cpp nodekits/NormalsKit.cpp \
	nodekits/PopupMenuKit.cpp nodekits/SmAnnotationAxis.cpp \
	nodekits/SmAnnotationWall.cpp nodekits/SmAxisDisplayKit.cpp \
	nodekits/SmAxisKit.cpp nodekits/SmCameraControlKit.cpp \
	nodekits/SmDynamicObjectKit.cpp nodekits/SmPieChart.cpp \
	nodekits/SmTooltipKit.cpp nodekits/SmTrackPointKit.cpp \
	nodekits/SmWellLogKit.cpp nodekits/SoCameraPathEditKit.cpp \
	nodekits/SoFEMKit.cpp nodes/AutoFile.cpp nodes/Coinboard.cpp \
	nodes/CoinEnvironment.cpp nodes/InterleavedArraysShape.cpp \
	nodes/PickCallback.cpp nodes/PickSwitch.cpp \
	nodes/ShapeScale.cpp nodes/SkyDome.cpp \
	nodes/SmBillboardClipPlane.cpp nodes/SmCoordinateSystem.cpp \
	nodes/SmDepthBuffer.cpp nodes/SmHeadlight.cpp \
	nodes/SmHQSphere.cpp nodes/SmLazyFile.cpp \
	nodes/SmMarkerSet.cpp nodes/SmShadowText2.cpp \
	nodes/SmTextureFont.cpp nodes/SmTextureText2.cpp \
	nodes/SmTextureText2Collector.cpp nodes/SmTooltip.cpp \
	nodes/SmTrack.cpp nodes/SoLODExtrusion.cpp \
	nodes/SoPointCloud.cpp nodes/SoTCBCurve.cpp \
	nodes/SoText2Set.cpp nodes/Switchboard.cpp \
	nodes/SwitchboardOperator.cpp nodes/UTMCamera.cpp \
	nodes/UTMCoordinate.cpp nodes/UTMPosition.cpp \
	nodes/VertexArrayShape.cpp nodes/ViewpointWrapper.cpp \
	nodes/ViewportRegion.cpp
@MAC_FRAMEWORK_FALSE@am__objects_1 = dummy.$(OBJEXT)
@MAC_FRAMEWORK_TRUE@am__objects_1 =  \
@MAC_FRAMEWORK_TRUE@	SoGenerateSceneGraphAction.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SoTweakAction.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	ToVertexArrayShapeAction.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmRangeTranslate1Dragger.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SoAngle1Dragger.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SoAngle1Manip.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	GLDepthBufferElement.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	UTMElement.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	CubicSplineEngine.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	Rot2Heading.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmInverseRotation.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmEventHandler.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmExaminerEventHandler.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmHelicopterEventHandler.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmPanEventHandler.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmSphereEventHandler.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	cameracontrol.$(OBJEXT) Envelope.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	Init.$(OBJEXT) SbCubicSpline.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SceneManager.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	bitmapfont.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	DynamicBaseKit.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	GeoMarkerKit.$(OBJEXT) LegendKit.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	NormalsKit.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	PopupMenuKit.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmAnnotationAxis.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmAnnotationWall.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmAxisDisplayKit.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmAxisKit.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmCameraControlKit.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmDynamicObjectKit.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmPieChart.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmTooltipKit.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmTrackPointKit.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmWellLogKit.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SoCameraPathEditKit.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SoFEMKit.$(OBJEXT) AutoFile.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	Coinboard.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	CoinEnvironment.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	InterleavedArraysShape.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	PickCallback.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	PickSwitch.$(OBJEXT) ShapeScale.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SkyDome.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmBillboardClipPlane.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmCoordinateSystem.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmDepthBuffer.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmHeadlight.$(OBJEXT) SmHQSphere.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmLazyFile.$(OBJEXT) SmMarkerSet.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmShadowText2.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmTextureFont.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmTextureText2.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmTextureText2Collector.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SmTooltip.$(OBJEXT) SmTrack.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SoLODExtrusion.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SoPointCloud.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SoTCBCurve.$(OBJEXT) SoText2Set.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	Switchboard.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	SwitchboardOperator.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	UTMCamera.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	UTMCoordinate.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	UTMPosition.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	VertexArrayShape.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	ViewpointWrapper.$(OBJEXT) \
@MAC_FRAMEWORK_TRUE@	ViewportRegion.$(OBJEXT)
am_SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_OBJECTS =  \
	$(am__objects_1)
SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_OBJECTS = $(am_SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_OBJECTS)
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
@MAC_FRAMEWORK_FALSE@libSmallChange@SUFFIX@_la_DEPENDENCIES =  \
@MAC_FRAMEWORK_FALSE@	nodekits/libnodekits.la nodes/libnodes.la \
@MAC_FRAMEWORK_FALSE@	elements/libelements.la \
@MAC_FRAMEWORK_FALSE@	engines/libengines.la \
@MAC_FRAMEWORK_FALSE@	actions/libactions.la misc/libmisc.la \
@MAC_FRAMEWORK_FALSE@	draggers/libdraggers.la \
@MAC_FRAMEWORK_FALSE@	eventhandlers/libeventhandlers.la
am__libSmallChange@SUFFIX@_la_SOURCES_DIST = dummy.cpp \
	actions/SoGenerateSceneGraphAction.cpp \
	actions/SoTweakAction.cpp actions/ToVertexArrayShapeAction.cpp \
	draggers/SmRangeTranslate1Dragger.cpp \
	draggers/SoAngle1Dragger.cpp draggers/SoAngle1Manip.cpp \
	elements/GLDepthBufferElement.cpp elements/UTMElement.cpp \
	engines/CubicSplineEngine.cpp engines/Rot2Heading.cpp \
	engines/SmInverseRotation.cpp eventhandlers/SmEventHandler.cpp \
	eventhandlers/SmExaminerEventHandler.cpp \
	eventhandlers/SmHelicopterEventHandler.cpp \
	eventhandlers/SmPanEventHandler.cpp \
	eventhandlers/SmSphereEventHandler.cpp misc/cameracontrol.cpp \
	misc/Envelope.cpp misc/Init.cpp misc/SbCubicSpline.cpp \
	misc/SceneManager.cpp nodekits/bitmapfont.cpp \
	nodekits/DynamicBaseKit.cpp nodekits/GeoMarkerKit.cpp \
	nodekits/LegendKit.cpp nodekits/NormalsKit.cpp \
	nodekits/PopupMenuKit.cpp nodekits/SmAnnotationAxis.cpp \
	nodekits/SmAnnotationWall.cpp nodekits/SmAxisDisplayKit.cpp \
	nodekits/SmAxisKit.cpp nodekits/SmCameraControlKit.cpp \
	nodekits/SmDynamicObjectKit.cpp nodekits/SmPieChart.cpp \
	nodekits/SmTooltipKit.cpp nodekits/SmTrackPointKit.cpp \
	nodekits/SmWellLogKit.cpp nodekits/SoCameraPathEditKit.cpp \
	nodekits/SoFEMKit.cpp nodes/AutoFile.cpp nodes/Coinboard.cpp \
	nodes/CoinEnvironment.cpp nodes/InterleavedArraysShape.cpp \
	nodes/PickCallback.cpp nodes/PickSwitch.cpp \
	nodes/ShapeScale.cpp nodes/SkyDome.cpp \
	nodes/SmBillboardClipPlane.cpp nodes/SmCoordinateSystem.cpp \
	nodes/SmDepthBuffer.cpp nodes/SmHeadlight.cpp \
	nodes/SmHQSphere.cpp nodes/SmLazyFile.cpp \
	nodes/SmMarkerSet.cpp nodes/SmShadowText2.cpp \
	nodes/SmTextureFont.cpp nodes/SmTextureText2.cpp \
	nodes/SmTextureText2Collector.cpp nodes/SmTooltip.cpp \
	nodes/SmTrack.cpp nodes/SoLODExtrusion.cpp \
	nodes/SoPointCloud.cpp nodes/SoTCBCurve.cpp \
	nodes/SoText2Set.cpp nodes/Switchboard.cpp \
	nodes/SwitchboardOperator.cpp nodes/UTMCamera.cpp \
	nodes/UTMCoordinate.cpp nodes/UTMPosition.cpp \
	nodes/VertexArrayShape.cpp nodes/ViewpointWrapper.cpp \
	nodes/ViewportRegion.cpp
@MAC_FRAMEWORK_FALSE@am__objects_2 = dummy.lo
@MAC_FRAMEWORK_TRUE@am__objects_2 = SoGenerateSceneGraphAction.lo \
@MAC_FRAMEWORK_TRUE@	SoTweakAction.lo \
@MAC_FRAMEWORK_TRUE@	ToVertexArrayShapeAction.lo \
@MAC_FRAMEWORK_TRUE@	SmRangeTranslate1Dragger.lo \
@MAC_FRAMEWORK_TRUE@	SoAngle1Dragger.lo SoAngle1Manip.lo \
@MAC_FRAMEWORK_TRUE@	GLDepthBufferElement.lo UTMElement.lo \
@MAC_FRAMEWORK_TRUE@	CubicSplineEngine.lo Rot2Heading.lo \
@MAC_FRAMEWORK_TRUE@	SmInverseRotation.lo SmEventHandler.lo \
@MAC_FRAMEWORK_TRUE@	SmExaminerEventHandler.lo \
@MAC_FRAMEWORK_TRUE@	SmHelicopterEventHandler.lo \
@MAC_FRAMEWORK_TRUE@	SmPanEventHandler.lo \
@MAC_FRAMEWORK_TRUE@	SmSphereEventHandler.lo cameracontrol.lo \
@MAC_FRAMEWORK_TRUE@	Envelope.lo Init.lo SbCubicSpline.lo \
@MAC_FRAMEWORK_TRUE@	SceneManager.lo bitmapfont.lo \
@MAC_FRAMEWORK_TRUE@	DynamicBaseKit.lo GeoMarkerKit.lo \
@MAC_FRAMEWORK_TRUE@	LegendKit.lo NormalsKit.lo PopupMenuKit.lo \
@MAC_FRAMEWORK_TRUE@	SmAnnotationAxis.lo SmAnnotationWall.lo \
@MAC_FRAMEWORK_TRUE@	SmAxisDisplayKit.lo SmAxisKit.lo \
@MAC_FRAMEWORK_TRUE@	SmCameraControlKit.lo \
@MAC_FRAMEWORK_TRUE@	SmDynamicObjectKit.lo SmPieChart.lo \
@MAC_FRAMEWORK_TRUE@	SmTooltipKit.lo SmTrackPointKit.lo \
@MAC_FRAMEWORK_TRUE@	SmWellLogKit.lo SoCameraPathEditKit.lo \
@MAC_FRAMEWORK_TRUE@	SoFEMKit.lo AutoFile.lo Coinboard.lo \
@MAC_FRAMEWORK_TRUE@	CoinEnvironment.lo \
@MAC_FRAMEWORK_TRUE@	InterleavedArraysShape.lo PickCallback.lo \
@MAC_FRAMEWORK_TRUE@	PickSwitch.lo ShapeScale.lo SkyDome.lo \
@MAC_FRAMEWORK_TRUE@	SmBillboardClipPlane.lo \
@MAC_FRAMEWORK_TRUE@	SmCoordinateSystem.lo SmDepthBuffer.lo \
@MAC_FRAMEWORK_TRUE@	SmHeadlight.lo SmHQSphere.lo SmLazyFile.lo \
@MAC_FRAMEWORK_TRUE@	SmMarkerSet.lo SmShadowText2.lo \
@MAC_FRAMEWORK_TRUE@	SmTextureFont.lo SmTextureText2.lo \
@MAC_FRAMEWORK_TRUE@	SmTextureText2Collector.lo SmTooltip.lo \
@MAC_FRAMEWORK_TRUE@	SmTrack.lo SoLODExtrusion.lo \
@MAC_FRAMEWORK_TRUE@	SoPointCloud.lo SoTCBCurve.lo \
@MAC_FRAMEWORK_TRUE@	SoText2Set.lo Switchboard.lo \
@MAC_FRAMEWORK_TRUE@	SwitchboardOperator.lo UTMCamera.lo \
@MAC_FRAMEWORK_TRUE@	UTMCoordinate.lo UTMPosition.lo \
@MAC_FRAMEWORK_TRUE@	VertexArrayShape.lo ViewpointWrapper.lo \
@MAC_FRAMEWORK_TRUE@	ViewportRegion.lo
am_libSmallChange@SUFFIX@_la_OBJECTS = $(am__objects_2)
libSmallChange@SUFFIX@_la_OBJECTS =  \
	$(am_libSmallChange@SUFFIX@_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/cfg/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/AutoFile.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/AutoFile.Po \
@AMDEP_TRUE@	./$(DEPDIR)/CoinEnvironment.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/CoinEnvironment.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Coinboard.Plo ./$(DEPDIR)/Coinboard.Po \
@AMDEP_TRUE@	./$(DEPDIR)/CubicSplineEngine.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/CubicSplineEngine.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DynamicBaseKit.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DynamicBaseKit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Envelope.Plo ./$(DEPDIR)/Envelope.Po \
@AMDEP_TRUE@	./$(DEPDIR)/GLDepthBufferElement.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/GLDepthBufferElement.Po \
@AMDEP_TRUE@	./$(DEPDIR)/GeoMarkerKit.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/GeoMarkerKit.Po ./$(DEPDIR)/Init.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Init.Po \
@AMDEP_TRUE@	./$(DEPDIR)/InterleavedArraysShape.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/InterleavedArraysShape.Po \
@AMDEP_TRUE@	./$(DEPDIR)/LegendKit.Plo ./$(DEPDIR)/LegendKit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/NormalsKit.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/NormalsKit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/PickCallback.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PickCallback.Po \
@AMDEP_TRUE@	./$(DEPDIR)/PickSwitch.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PickSwitch.Po \
@AMDEP_TRUE@	./$(DEPDIR)/PopupMenuKit.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PopupMenuKit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Rot2Heading.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Rot2Heading.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SbCubicSpline.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SbCubicSpline.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SceneManager.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SceneManager.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ShapeScale.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ShapeScale.Po ./$(DEPDIR)/SkyDome.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SkyDome.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmAnnotationAxis.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmAnnotationAxis.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmAnnotationWall.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmAnnotationWall.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmAxisDisplayKit.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmAxisDisplayKit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmAxisKit.Plo ./$(DEPDIR)/SmAxisKit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmBillboardClipPlane.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmBillboardClipPlane.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmCameraControlKit.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmCameraControlKit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmCoordinateSystem.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmCoordinateSystem.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmDepthBuffer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmDepthBuffer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmDynamicObjectKit.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmDynamicObjectKit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmEventHandler.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmEventHandler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmExaminerEventHandler.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmExaminerEventHandler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmHQSphere.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmHQSphere.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmHeadlight.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmHeadlight.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmHelicopterEventHandler.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmHelicopterEventHandler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmInverseRotation.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmInverseRotation.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmLazyFile.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmLazyFile.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmMarkerSet.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmMarkerSet.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmPanEventHandler.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmPanEventHandler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmPieChart.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmPieChart.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmRangeTranslate1Dragger.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmRangeTranslate1Dragger.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmShadowText2.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmShadowText2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmSphereEventHandler.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmSphereEventHandler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmTextureFont.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmTextureFont.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmTextureText2.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmTextureText2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmTextureText2Collector.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmTextureText2Collector.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmTooltip.Plo ./$(DEPDIR)/SmTooltip.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmTooltipKit.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmTooltipKit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmTrack.Plo ./$(DEPDIR)/SmTrack.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmTrackPointKit.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmTrackPointKit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SmWellLogKit.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SmWellLogKit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SoAngle1Dragger.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SoAngle1Dragger.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SoAngle1Manip.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SoAngle1Manip.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SoCameraPathEditKit.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SoCameraPathEditKit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SoFEMKit.Plo ./$(DEPDIR)/SoFEMKit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SoGenerateSceneGraphAction.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SoGenerateSceneGraphAction.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SoLODExtrusion.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SoLODExtrusion.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SoPointCloud.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SoPointCloud.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SoTCBCurve.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SoTCBCurve.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SoText2Set.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SoText2Set.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SoTweakAction.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SoTweakAction.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Switchboard.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Switchboard.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SwitchboardOperator.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SwitchboardOperator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ToVertexArrayShapeAction.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ToVertexArrayShapeAction.Po \
@AMDEP_TRUE@	./$(DEPDIR)/UTMCamera.Plo ./$(DEPDIR)/UTMCamera.Po \
@AMDEP_TRUE@	./$(DEPDIR)/UTMCoordinate.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/UTMCoordinate.Po \
@AMDEP_TRUE@	./$(DEPDIR)/UTMElement.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/UTMElement.Po \
@AMDEP_TRUE@	./$(DEPDIR)/UTMPosition.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/UTMPosition.Po \
@AMDEP_TRUE@	./$(DEPDIR)/VertexArrayShape.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/VertexArrayShape.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ViewpointWrapper.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ViewpointWrapper.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ViewportRegion.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ViewportRegion.Po \
@AMDEP_TRUE@	./$(DEPDIR)/bitmapfont.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/bitmapfont.Po \
@AMDEP_TRUE@	./$(DEPDIR)/cameracontrol.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/cameracontrol.Po ./$(DEPDIR)/dummy.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/dummy.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES =  \
	$(SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_SOURCES) \
	$(libSmallChange@SUFFIX@_la_SOURCES)
DIST_SOURCES = $(am__SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_SOURCES_DIST) \
	$(am__libSmallChange@SUFFIX@_la_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
am__libSmallChangeinc_HEADERS_DIST = basic.h SmallChange.h \
	actions/SmToVertexArrayShapeAction.h \
	actions/SoGenerateSceneGraphAction.h actions/SoTweakAction.h \
	draggers/SmRangeTranslate1Dragger.h draggers/SoAngle1Dragger.h \
	draggers/SoAngle1Manip.h elements/GLDepthBufferElement.h \
	elements/UTMElement.h engines/CubicSplineEngine.h \
	engines/Rot2Heading.h engines/SmInverseRotation.h \
	eventhandlers/SmEventHandler.h \
	eventhandlers/SmExaminerEventHandler.h \
	eventhandlers/SmHelicopterEventHandler.h \
	eventhandlers/SmPanEventHandler.h \
	eventhandlers/SmSphereEventHandler.h misc/cameracontrol.h \
	misc/Init.h misc/SbBox3.h misc/SbCubicSpline.h misc/SbHash.h \
	misc/SbList.h misc/SbPlane.h misc/SbVec3.h misc/SmEnvelope.h \
	misc/SmHash.h misc/SmSceneManager.h nodekits/DynamicBaseKit.h \
	nodekits/DynamicNodeKit.h nodekits/LegendKit.h \
	nodekits/SbList.h nodekits/SmAnnotationAxis.h \
	nodekits/SmAnnotationWall.h nodekits/SmAxisDisplayKit.h \
	nodekits/SmAxisKit.h nodekits/SmCameraControlKit.h \
	nodekits/SmDynamicObjectKit.h nodekits/SmGeoMarkerKit.h \
	nodekits/SmNormalsKit.h nodekits/SmPieChart.h \
	nodekits/SmPopupMenuKit.h nodekits/SmTooltipKit.h \
	nodekits/SmTrackPointKit.h nodekits/SmWellLogKit.h \
	nodekits/SoCameraPathEditKit.h nodekits/SoFEMKit.h \
	nodes/AutoFile.h nodes/Coinboard.h nodes/CoinEnvironment.h \
	nodes/InterleavedArraysShape.h nodes/PickCallback.h \
	nodes/PickSwitch.h nodes/ShapeScale.h nodes/SkyDome.h \
	nodes/SmBillboardClipPlane.h nodes/SmCoordinateSystem.h \
	nodes/SmDepthBuffer.h nodes/SmHeadlight.h nodes/SmHQSphere.h \
	nodes/SmLazyFile.h nodes/SmMarkerSet.h nodes/SmShadowText2.h \
	nodes/SmSwitchboard.h nodes/SmSwitchboardOperator.h \
	nodes/SmTextureFont.h nodes/SmTextureText2.h \
	nodes/SmTextureText2Collector.h nodes/SmTooltip.h \
	nodes/SmTrack.h nodes/SmVertexArrayShape.h \
	nodes/SmViewpointWrapper.h nodes/SoLODExtrusion.h \
	nodes/SoPointCloud.h nodes/SoTCBCurve.h nodes/SoText2Set.h \
	nodes/UTMCamera.h nodes/UTMCoordinate.h nodes/UTMPosition.h \
	nodes/ViewportRegion.h
libSmallChangeincHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libSmallChangeinc_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = nodekits nodes elements engines actions misc draggers \
	eventhandlers .
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_WITH_MSVC = @BUILD_WITH_MSVC@
BUILD_WITH_MSVC_FALSE = @BUILD_WITH_MSVC_FALSE@
BUILD_WITH_MSVC_TRUE = @BUILD_WITH_MSVC_TRUE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONFIG = @CONFIG@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSUFFIX = @DSUFFIX@
DSYMUTIL = @DSYMUTIL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBFLAGS = @LIBFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_REVISION = @LT_REVISION@
MAC_FRAMEWORK = @MAC_FRAMEWORK@
MAC_FRAMEWORK_FALSE = @MAC_FRAMEWORK_FALSE@
MAC_FRAMEWORK_NAME = @MAC_FRAMEWORK_NAME@
MAC_FRAMEWORK_PREFIX = @MAC_FRAMEWORK_PREFIX@
MAC_FRAMEWORK_TRUE = @MAC_FRAMEWORK_TRUE@
MAC_FRAMEWORK_VERSION = @MAC_FRAMEWORK_VERSION@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SMALLCHANGE_BETA_VERSION = @SMALLCHANGE_BETA_VERSION@
SMALLCHANGE_COMPILER = @SMALLCHANGE_COMPILER@
SMALLCHANGE_DSP_DEFS = @SMALLCHANGE_DSP_DEFS@
SMALLCHANGE_DSP_INCS = @SMALLCHANGE_DSP_INCS@
SMALLCHANGE_DSP_LIBS = @SMALLCHANGE_DSP_LIBS@
SMALLCHANGE_EXTRA_CFLAGS = @SMALLCHANGE_EXTRA_CFLAGS@
SMALLCHANGE_EXTRA_CPPFLAGS = @SMALLCHANGE_EXTRA_CPPFLAGS@
SMALLCHANGE_EXTRA_CXXFLAGS = @SMALLCHANGE_EXTRA_CXXFLAGS@
SMALLCHANGE_EXTRA_LDFLAGS = @SMALLCHANGE_EXTRA_LDFLAGS@
SMALLCHANGE_EXTRA_LIBS = @SMALLCHANGE_EXTRA_LIBS@
SMALLCHANGE_LIB_DSP_DEFS = @SMALLCHANGE_LIB_DSP_DEFS@
SMALLCHANGE_MAJOR_VERSION = @SMALLCHANGE_MAJOR_VERSION@
SMALLCHANGE_MICRO_VERSION = @SMALLCHANGE_MICRO_VERSION@
SMALLCHANGE_MINOR_VERSION = @SMALLCHANGE_MINOR_VERSION@
SMALLCHANGE_VERSION = @SMALLCHANGE_VERSION@
STRIP = @STRIP@
SUFFIX = @SUFFIX@
VERSION = @VERSION@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ac_compiler_gnu = @ac_compiler_gnu@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_unique_file = @ac_unique_file@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
frameworkdir = @frameworkdir@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
nop = @nop@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sim_ac_coin_configcmd = @sim_ac_coin_configcmd@
sim_ac_mks_make = @sim_ac_mks_make@
sim_ac_relative_src_dir = @sim_ac_relative_src_dir@
sim_ac_relative_src_dir_p = @sim_ac_relative_src_dir_p@
smallchange_build_dir = @smallchange_build_dir@
smallchange_src_dir = @smallchange_src_dir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
INCLUDES = -I$(top_srcdir)/lib
@MAC_FRAMEWORK_FALSE@SUBDIRS = nodekits nodes elements engines actions misc draggers eventhandlers .
@MAC_FRAMEWORK_TRUE@SUBDIRS = 
@BUILD_WITH_MSVC_TRUE@lib_LIBRARIES = SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@.lib
@BUILD_WITH_MSVC_FALSE@lib_LTLIBRARIES = libSmallChange@SUFFIX@.la

# hack to change libdir value when installing Mac OS X compiler framework
@MAC_FRAMEWORK_TRUE@lib@nop@dir = $(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/Libraries
# Adding in a dummy C++ source code file to "trick" Automake to set
# us up with C++ $CXXLD for linking (and not the default C $CCLD).
@MAC_FRAMEWORK_FALSE@Sources = dummy.cpp
@MAC_FRAMEWORK_TRUE@Sources = \
@MAC_FRAMEWORK_TRUE@  actions/SoGenerateSceneGraphAction.cpp \
@MAC_FRAMEWORK_TRUE@  actions/SoTweakAction.cpp \
@MAC_FRAMEWORK_TRUE@  actions/ToVertexArrayShapeAction.cpp \
@MAC_FRAMEWORK_TRUE@  draggers/SmRangeTranslate1Dragger.cpp \
@MAC_FRAMEWORK_TRUE@  draggers/SoAngle1Dragger.cpp \
@MAC_FRAMEWORK_TRUE@  draggers/SoAngle1Manip.cpp \
@MAC_FRAMEWORK_TRUE@  elements/GLDepthBufferElement.cpp \
@MAC_FRAMEWORK_TRUE@  elements/UTMElement.cpp \
@MAC_FRAMEWORK_TRUE@  engines/CubicSplineEngine.cpp \
@MAC_FRAMEWORK_TRUE@  engines/Rot2Heading.cpp \
@MAC_FRAMEWORK_TRUE@  engines/SmInverseRotation.cpp \
@MAC_FRAMEWORK_TRUE@  eventhandlers/SmEventHandler.cpp \
@MAC_FRAMEWORK_TRUE@  eventhandlers/SmExaminerEventHandler.cpp \
@MAC_FRAMEWORK_TRUE@  eventhandlers/SmHelicopterEventHandler.cpp \
@MAC_FRAMEWORK_TRUE@  eventhandlers/SmPanEventHandler.cpp \
@MAC_FRAMEWORK_TRUE@  eventhandlers/SmSphereEventHandler.cpp \
@MAC_FRAMEWORK_TRUE@  misc/cameracontrol.cpp \
@MAC_FRAMEWORK_TRUE@  misc/Envelope.cpp \
@MAC_FRAMEWORK_TRUE@  misc/Init.cpp  \
@MAC_FRAMEWORK_TRUE@  misc/SbCubicSpline.cpp \
@MAC_FRAMEWORK_TRUE@  misc/SceneManager.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/bitmapfont.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/DynamicBaseKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/GeoMarkerKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/LegendKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/NormalsKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/PopupMenuKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/SmAnnotationAxis.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/SmAnnotationWall.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/SmAxisDisplayKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/SmAxisKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/SmCameraControlKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/SmDynamicObjectKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/SmPieChart.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/SmTooltipKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/SmTrackPointKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/SmWellLogKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/SoCameraPathEditKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodekits/SoFEMKit.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/AutoFile.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/Coinboard.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/CoinEnvironment.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/InterleavedArraysShape.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/PickCallback.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/PickSwitch.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/ShapeScale.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SkyDome.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SmBillboardClipPlane.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SmCoordinateSystem.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SmDepthBuffer.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SmHeadlight.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SmHQSphere.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SmLazyFile.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SmMarkerSet.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SmShadowText2.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SmTextureFont.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SmTextureText2.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SmTextureText2Collector.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SmTooltip.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SmTrack.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SoLODExtrusion.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SoPointCloud.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SoTCBCurve.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SoText2Set.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/Switchboard.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/SwitchboardOperator.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/UTMCamera.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/UTMCoordinate.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/UTMPosition.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/VertexArrayShape.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/ViewpointWrapper.cpp \
@MAC_FRAMEWORK_TRUE@  nodes/ViewportRegion.cpp

libSmallChange@SUFFIX@_la_SOURCES = $(Sources)
@MAC_FRAMEWORK_FALSE@libSmallChange@SUFFIX@_la_LIBADD = \
@MAC_FRAMEWORK_FALSE@	nodekits/libnodekits.la nodes/libnodes.la elements/libelements.la \
@MAC_FRAMEWORK_FALSE@	engines/libengines.la actions/libactions.la misc/libmisc.la \
@MAC_FRAMEWORK_FALSE@	draggers/libdraggers.la eventhandlers/libeventhandlers.la

@MAC_FRAMEWORK_TRUE@libSmallChange@SUFFIX@_la_LIBADD = 
libSmallChange@SUFFIX@_la_LDFLAGS = \
	-no-undefined \
	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)

SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_SOURCES = $(Sources)
SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_LIBADD = \
	nodekits/nodekits.lst nodes/nodes.lst elements/elements.lst \
	engines/engines.lst actions/actions.lst misc/misc.lst \
	draggers/draggers.lst eventhandlers/eventhandlers.lst

@MAC_FRAMEWORK_FALSE@libSmallChangeincdir = $(includedir)/SmallChange

# **************************************************************************
@MAC_FRAMEWORK_TRUE@libSmallChangeincdir = $(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/Headers
@MAC_FRAMEWORK_FALSE@libSmallChangeinc_HEADERS = basic.h SmallChange.h
@MAC_FRAMEWORK_TRUE@libSmallChangeinc_HEADERS = \
@MAC_FRAMEWORK_TRUE@  basic.h \
@MAC_FRAMEWORK_TRUE@  SmallChange.h \
@MAC_FRAMEWORK_TRUE@  actions/SmToVertexArrayShapeAction.h \
@MAC_FRAMEWORK_TRUE@  actions/SoGenerateSceneGraphAction.h \
@MAC_FRAMEWORK_TRUE@  actions/SoTweakAction.h \
@MAC_FRAMEWORK_TRUE@  draggers/SmRangeTranslate1Dragger.h \
@MAC_FRAMEWORK_TRUE@  draggers/SoAngle1Dragger.h \
@MAC_FRAMEWORK_TRUE@  draggers/SoAngle1Manip.h \
@MAC_FRAMEWORK_TRUE@  elements/GLDepthBufferElement.h \
@MAC_FRAMEWORK_TRUE@  elements/UTMElement.h \
@MAC_FRAMEWORK_TRUE@  engines/CubicSplineEngine.h \
@MAC_FRAMEWORK_TRUE@  engines/Rot2Heading.h \
@MAC_FRAMEWORK_TRUE@  engines/SmInverseRotation.h \
@MAC_FRAMEWORK_TRUE@  eventhandlers/SmEventHandler.h \
@MAC_FRAMEWORK_TRUE@  eventhandlers/SmExaminerEventHandler.h \
@MAC_FRAMEWORK_TRUE@  eventhandlers/SmHelicopterEventHandler.h \
@MAC_FRAMEWORK_TRUE@  eventhandlers/SmPanEventHandler.h \
@MAC_FRAMEWORK_TRUE@  eventhandlers/SmSphereEventHandler.h \
@MAC_FRAMEWORK_TRUE@  misc/cameracontrol.h \
@MAC_FRAMEWORK_TRUE@  misc/Init.h \
@MAC_FRAMEWORK_TRUE@  misc/SbBox3.h \
@MAC_FRAMEWORK_TRUE@  misc/SbCubicSpline.h \
@MAC_FRAMEWORK_TRUE@  misc/SbHash.h \
@MAC_FRAMEWORK_TRUE@  misc/SbList.h \
@MAC_FRAMEWORK_TRUE@  misc/SbPlane.h \
@MAC_FRAMEWORK_TRUE@  misc/SbVec3.h \
@MAC_FRAMEWORK_TRUE@  misc/SmEnvelope.h \
@MAC_FRAMEWORK_TRUE@  misc/SmHash.h \
@MAC_FRAMEWORK_TRUE@  misc/SmSceneManager.h \
@MAC_FRAMEWORK_TRUE@  nodekits/DynamicBaseKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/DynamicNodeKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/LegendKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SbList.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SmAnnotationAxis.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SmAnnotationWall.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SmAxisDisplayKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SmAxisKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SmCameraControlKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SmDynamicObjectKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SmGeoMarkerKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SmNormalsKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SmPieChart.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SmPopupMenuKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SmTooltipKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SmTrackPointKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SmWellLogKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SoCameraPathEditKit.h \
@MAC_FRAMEWORK_TRUE@  nodekits/SoFEMKit.h \
@MAC_FRAMEWORK_TRUE@  nodes/AutoFile.h \
@MAC_FRAMEWORK_TRUE@  nodes/Coinboard.h \
@MAC_FRAMEWORK_TRUE@  nodes/CoinEnvironment.h \
@MAC_FRAMEWORK_TRUE@  nodes/InterleavedArraysShape.h \
@MAC_FRAMEWORK_TRUE@  nodes/PickCallback.h \
@MAC_FRAMEWORK_TRUE@  nodes/PickSwitch.h \
@MAC_FRAMEWORK_TRUE@  nodes/ShapeScale.h \
@MAC_FRAMEWORK_TRUE@  nodes/SkyDome.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmBillboardClipPlane.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmCoordinateSystem.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmDepthBuffer.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmHeadlight.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmHQSphere.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmLazyFile.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmMarkerSet.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmShadowText2.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmSwitchboard.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmSwitchboardOperator.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmTextureFont.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmTextureText2.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmTextureText2Collector.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmTooltip.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmTrack.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmVertexArrayShape.h \
@MAC_FRAMEWORK_TRUE@  nodes/SmViewpointWrapper.h \
@MAC_FRAMEWORK_TRUE@  nodes/SoLODExtrusion.h \
@MAC_FRAMEWORK_TRUE@  nodes/SoPointCloud.h \
@MAC_FRAMEWORK_TRUE@  nodes/SoTCBCurve.h \
@MAC_FRAMEWORK_TRUE@  nodes/SoText2Set.h \
@MAC_FRAMEWORK_TRUE@  nodes/UTMCamera.h \
@MAC_FRAMEWORK_TRUE@  nodes/UTMCoordinate.h \
@MAC_FRAMEWORK_TRUE@  nodes/UTMPosition.h \
@MAC_FRAMEWORK_TRUE@  nodes/ViewportRegion.h

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  lib/SmallChange/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  lib/SmallChange/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
basic.h: $(top_builddir)/config.status $(srcdir)/basic.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libSmallChange@SUFFIX@.la: $(libSmallChange@SUFFIX@_la_OBJECTS) $(libSmallChange@SUFFIX@_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libSmallChange@SUFFIX@_la_LDFLAGS) $(libSmallChange@SUFFIX@_la_OBJECTS) $(libSmallChange@SUFFIX@_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AutoFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AutoFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinEnvironment.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinEnvironment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Coinboard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Coinboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CubicSplineEngine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CubicSplineEngine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DynamicBaseKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DynamicBaseKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Envelope.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Envelope.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GLDepthBufferElement.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GLDepthBufferElement.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GeoMarkerKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GeoMarkerKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Init.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InterleavedArraysShape.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InterleavedArraysShape.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LegendKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LegendKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NormalsKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NormalsKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PickCallback.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PickCallback.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PickSwitch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PickSwitch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PopupMenuKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PopupMenuKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rot2Heading.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rot2Heading.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbCubicSpline.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SbCubicSpline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SceneManager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SceneManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ShapeScale.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ShapeScale.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SkyDome.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SkyDome.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmAnnotationAxis.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmAnnotationAxis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmAnnotationWall.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmAnnotationWall.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmAxisDisplayKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmAxisDisplayKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmAxisKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmAxisKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmBillboardClipPlane.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmBillboardClipPlane.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmCameraControlKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmCameraControlKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmCoordinateSystem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmCoordinateSystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmDepthBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmDepthBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmDynamicObjectKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmDynamicObjectKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmEventHandler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmEventHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmExaminerEventHandler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmExaminerEventHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmHQSphere.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmHQSphere.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmHeadlight.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmHeadlight.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmHelicopterEventHandler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmHelicopterEventHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmInverseRotation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmInverseRotation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmLazyFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmLazyFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmMarkerSet.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmMarkerSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmPanEventHandler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmPanEventHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmPieChart.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmPieChart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmRangeTranslate1Dragger.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmRangeTranslate1Dragger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmShadowText2.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmShadowText2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmSphereEventHandler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmSphereEventHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTextureFont.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTextureFont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTextureText2.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTextureText2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTextureText2Collector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTextureText2Collector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTooltip.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTooltip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTooltipKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTooltipKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTrack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTrack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTrackPointKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmTrackPointKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmWellLogKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SmWellLogKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoAngle1Dragger.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoAngle1Dragger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoAngle1Manip.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoAngle1Manip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoCameraPathEditKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoCameraPathEditKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoFEMKit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoFEMKit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoGenerateSceneGraphAction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoGenerateSceneGraphAction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoLODExtrusion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoLODExtrusion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoPointCloud.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoPointCloud.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoTCBCurve.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoTCBCurve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoText2Set.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoText2Set.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoTweakAction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoTweakAction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Switchboard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Switchboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SwitchboardOperator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SwitchboardOperator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ToVertexArrayShapeAction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ToVertexArrayShapeAction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UTMCamera.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UTMCamera.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UTMCoordinate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UTMCoordinate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UTMElement.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UTMElement.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UTMPosition.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UTMPosition.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VertexArrayShape.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VertexArrayShape.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ViewpointWrapper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ViewpointWrapper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ViewportRegion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ViewportRegion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bitmapfont.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bitmapfont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cameracontrol.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cameracontrol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dummy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dummy.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

SoGenerateSceneGraphAction.o: actions/SoGenerateSceneGraphAction.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoGenerateSceneGraphAction.o -MD -MP -MF "$(DEPDIR)/SoGenerateSceneGraphAction.Tpo" -c -o SoGenerateSceneGraphAction.o `test -f 'actions/SoGenerateSceneGraphAction.cpp' || echo '$(srcdir)/'`actions/SoGenerateSceneGraphAction.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoGenerateSceneGraphAction.Tpo" "$(DEPDIR)/SoGenerateSceneGraphAction.Po"; else rm -f "$(DEPDIR)/SoGenerateSceneGraphAction.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='actions/SoGenerateSceneGraphAction.cpp' object='SoGenerateSceneGraphAction.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoGenerateSceneGraphAction.Po' tmpdepfile='$(DEPDIR)/SoGenerateSceneGraphAction.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoGenerateSceneGraphAction.o `test -f 'actions/SoGenerateSceneGraphAction.cpp' || echo '$(srcdir)/'`actions/SoGenerateSceneGraphAction.cpp

SoGenerateSceneGraphAction.obj: actions/SoGenerateSceneGraphAction.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoGenerateSceneGraphAction.obj -MD -MP -MF "$(DEPDIR)/SoGenerateSceneGraphAction.Tpo" -c -o SoGenerateSceneGraphAction.obj `if test -f 'actions/SoGenerateSceneGraphAction.cpp'; then $(CYGPATH_W) 'actions/SoGenerateSceneGraphAction.cpp'; else $(CYGPATH_W) '$(srcdir)/actions/SoGenerateSceneGraphAction.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoGenerateSceneGraphAction.Tpo" "$(DEPDIR)/SoGenerateSceneGraphAction.Po"; else rm -f "$(DEPDIR)/SoGenerateSceneGraphAction.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='actions/SoGenerateSceneGraphAction.cpp' object='SoGenerateSceneGraphAction.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoGenerateSceneGraphAction.Po' tmpdepfile='$(DEPDIR)/SoGenerateSceneGraphAction.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoGenerateSceneGraphAction.obj `if test -f 'actions/SoGenerateSceneGraphAction.cpp'; then $(CYGPATH_W) 'actions/SoGenerateSceneGraphAction.cpp'; else $(CYGPATH_W) '$(srcdir)/actions/SoGenerateSceneGraphAction.cpp'; fi`

SoGenerateSceneGraphAction.lo: actions/SoGenerateSceneGraphAction.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoGenerateSceneGraphAction.lo -MD -MP -MF "$(DEPDIR)/SoGenerateSceneGraphAction.Tpo" -c -o SoGenerateSceneGraphAction.lo `test -f 'actions/SoGenerateSceneGraphAction.cpp' || echo '$(srcdir)/'`actions/SoGenerateSceneGraphAction.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoGenerateSceneGraphAction.Tpo" "$(DEPDIR)/SoGenerateSceneGraphAction.Plo"; else rm -f "$(DEPDIR)/SoGenerateSceneGraphAction.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='actions/SoGenerateSceneGraphAction.cpp' object='SoGenerateSceneGraphAction.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoGenerateSceneGraphAction.Plo' tmpdepfile='$(DEPDIR)/SoGenerateSceneGraphAction.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoGenerateSceneGraphAction.lo `test -f 'actions/SoGenerateSceneGraphAction.cpp' || echo '$(srcdir)/'`actions/SoGenerateSceneGraphAction.cpp

SoTweakAction.o: actions/SoTweakAction.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoTweakAction.o -MD -MP -MF "$(DEPDIR)/SoTweakAction.Tpo" -c -o SoTweakAction.o `test -f 'actions/SoTweakAction.cpp' || echo '$(srcdir)/'`actions/SoTweakAction.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoTweakAction.Tpo" "$(DEPDIR)/SoTweakAction.Po"; else rm -f "$(DEPDIR)/SoTweakAction.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='actions/SoTweakAction.cpp' object='SoTweakAction.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoTweakAction.Po' tmpdepfile='$(DEPDIR)/SoTweakAction.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoTweakAction.o `test -f 'actions/SoTweakAction.cpp' || echo '$(srcdir)/'`actions/SoTweakAction.cpp

SoTweakAction.obj: actions/SoTweakAction.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoTweakAction.obj -MD -MP -MF "$(DEPDIR)/SoTweakAction.Tpo" -c -o SoTweakAction.obj `if test -f 'actions/SoTweakAction.cpp'; then $(CYGPATH_W) 'actions/SoTweakAction.cpp'; else $(CYGPATH_W) '$(srcdir)/actions/SoTweakAction.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoTweakAction.Tpo" "$(DEPDIR)/SoTweakAction.Po"; else rm -f "$(DEPDIR)/SoTweakAction.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='actions/SoTweakAction.cpp' object='SoTweakAction.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoTweakAction.Po' tmpdepfile='$(DEPDIR)/SoTweakAction.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoTweakAction.obj `if test -f 'actions/SoTweakAction.cpp'; then $(CYGPATH_W) 'actions/SoTweakAction.cpp'; else $(CYGPATH_W) '$(srcdir)/actions/SoTweakAction.cpp'; fi`

SoTweakAction.lo: actions/SoTweakAction.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoTweakAction.lo -MD -MP -MF "$(DEPDIR)/SoTweakAction.Tpo" -c -o SoTweakAction.lo `test -f 'actions/SoTweakAction.cpp' || echo '$(srcdir)/'`actions/SoTweakAction.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoTweakAction.Tpo" "$(DEPDIR)/SoTweakAction.Plo"; else rm -f "$(DEPDIR)/SoTweakAction.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='actions/SoTweakAction.cpp' object='SoTweakAction.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoTweakAction.Plo' tmpdepfile='$(DEPDIR)/SoTweakAction.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoTweakAction.lo `test -f 'actions/SoTweakAction.cpp' || echo '$(srcdir)/'`actions/SoTweakAction.cpp

ToVertexArrayShapeAction.o: actions/ToVertexArrayShapeAction.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ToVertexArrayShapeAction.o -MD -MP -MF "$(DEPDIR)/ToVertexArrayShapeAction.Tpo" -c -o ToVertexArrayShapeAction.o `test -f 'actions/ToVertexArrayShapeAction.cpp' || echo '$(srcdir)/'`actions/ToVertexArrayShapeAction.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ToVertexArrayShapeAction.Tpo" "$(DEPDIR)/ToVertexArrayShapeAction.Po"; else rm -f "$(DEPDIR)/ToVertexArrayShapeAction.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='actions/ToVertexArrayShapeAction.cpp' object='ToVertexArrayShapeAction.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ToVertexArrayShapeAction.Po' tmpdepfile='$(DEPDIR)/ToVertexArrayShapeAction.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ToVertexArrayShapeAction.o `test -f 'actions/ToVertexArrayShapeAction.cpp' || echo '$(srcdir)/'`actions/ToVertexArrayShapeAction.cpp

ToVertexArrayShapeAction.obj: actions/ToVertexArrayShapeAction.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ToVertexArrayShapeAction.obj -MD -MP -MF "$(DEPDIR)/ToVertexArrayShapeAction.Tpo" -c -o ToVertexArrayShapeAction.obj `if test -f 'actions/ToVertexArrayShapeAction.cpp'; then $(CYGPATH_W) 'actions/ToVertexArrayShapeAction.cpp'; else $(CYGPATH_W) '$(srcdir)/actions/ToVertexArrayShapeAction.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ToVertexArrayShapeAction.Tpo" "$(DEPDIR)/ToVertexArrayShapeAction.Po"; else rm -f "$(DEPDIR)/ToVertexArrayShapeAction.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='actions/ToVertexArrayShapeAction.cpp' object='ToVertexArrayShapeAction.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ToVertexArrayShapeAction.Po' tmpdepfile='$(DEPDIR)/ToVertexArrayShapeAction.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ToVertexArrayShapeAction.obj `if test -f 'actions/ToVertexArrayShapeAction.cpp'; then $(CYGPATH_W) 'actions/ToVertexArrayShapeAction.cpp'; else $(CYGPATH_W) '$(srcdir)/actions/ToVertexArrayShapeAction.cpp'; fi`

ToVertexArrayShapeAction.lo: actions/ToVertexArrayShapeAction.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ToVertexArrayShapeAction.lo -MD -MP -MF "$(DEPDIR)/ToVertexArrayShapeAction.Tpo" -c -o ToVertexArrayShapeAction.lo `test -f 'actions/ToVertexArrayShapeAction.cpp' || echo '$(srcdir)/'`actions/ToVertexArrayShapeAction.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ToVertexArrayShapeAction.Tpo" "$(DEPDIR)/ToVertexArrayShapeAction.Plo"; else rm -f "$(DEPDIR)/ToVertexArrayShapeAction.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='actions/ToVertexArrayShapeAction.cpp' object='ToVertexArrayShapeAction.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ToVertexArrayShapeAction.Plo' tmpdepfile='$(DEPDIR)/ToVertexArrayShapeAction.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ToVertexArrayShapeAction.lo `test -f 'actions/ToVertexArrayShapeAction.cpp' || echo '$(srcdir)/'`actions/ToVertexArrayShapeAction.cpp

SmRangeTranslate1Dragger.o: draggers/SmRangeTranslate1Dragger.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmRangeTranslate1Dragger.o -MD -MP -MF "$(DEPDIR)/SmRangeTranslate1Dragger.Tpo" -c -o SmRangeTranslate1Dragger.o `test -f 'draggers/SmRangeTranslate1Dragger.cpp' || echo '$(srcdir)/'`draggers/SmRangeTranslate1Dragger.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmRangeTranslate1Dragger.Tpo" "$(DEPDIR)/SmRangeTranslate1Dragger.Po"; else rm -f "$(DEPDIR)/SmRangeTranslate1Dragger.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='draggers/SmRangeTranslate1Dragger.cpp' object='SmRangeTranslate1Dragger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmRangeTranslate1Dragger.Po' tmpdepfile='$(DEPDIR)/SmRangeTranslate1Dragger.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmRangeTranslate1Dragger.o `test -f 'draggers/SmRangeTranslate1Dragger.cpp' || echo '$(srcdir)/'`draggers/SmRangeTranslate1Dragger.cpp

SmRangeTranslate1Dragger.obj: draggers/SmRangeTranslate1Dragger.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmRangeTranslate1Dragger.obj -MD -MP -MF "$(DEPDIR)/SmRangeTranslate1Dragger.Tpo" -c -o SmRangeTranslate1Dragger.obj `if test -f 'draggers/SmRangeTranslate1Dragger.cpp'; then $(CYGPATH_W) 'draggers/SmRangeTranslate1Dragger.cpp'; else $(CYGPATH_W) '$(srcdir)/draggers/SmRangeTranslate1Dragger.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmRangeTranslate1Dragger.Tpo" "$(DEPDIR)/SmRangeTranslate1Dragger.Po"; else rm -f "$(DEPDIR)/SmRangeTranslate1Dragger.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='draggers/SmRangeTranslate1Dragger.cpp' object='SmRangeTranslate1Dragger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmRangeTranslate1Dragger.Po' tmpdepfile='$(DEPDIR)/SmRangeTranslate1Dragger.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmRangeTranslate1Dragger.obj `if test -f 'draggers/SmRangeTranslate1Dragger.cpp'; then $(CYGPATH_W) 'draggers/SmRangeTranslate1Dragger.cpp'; else $(CYGPATH_W) '$(srcdir)/draggers/SmRangeTranslate1Dragger.cpp'; fi`

SmRangeTranslate1Dragger.lo: draggers/SmRangeTranslate1Dragger.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmRangeTranslate1Dragger.lo -MD -MP -MF "$(DEPDIR)/SmRangeTranslate1Dragger.Tpo" -c -o SmRangeTranslate1Dragger.lo `test -f 'draggers/SmRangeTranslate1Dragger.cpp' || echo '$(srcdir)/'`draggers/SmRangeTranslate1Dragger.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmRangeTranslate1Dragger.Tpo" "$(DEPDIR)/SmRangeTranslate1Dragger.Plo"; else rm -f "$(DEPDIR)/SmRangeTranslate1Dragger.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='draggers/SmRangeTranslate1Dragger.cpp' object='SmRangeTranslate1Dragger.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmRangeTranslate1Dragger.Plo' tmpdepfile='$(DEPDIR)/SmRangeTranslate1Dragger.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmRangeTranslate1Dragger.lo `test -f 'draggers/SmRangeTranslate1Dragger.cpp' || echo '$(srcdir)/'`draggers/SmRangeTranslate1Dragger.cpp

SoAngle1Dragger.o: draggers/SoAngle1Dragger.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoAngle1Dragger.o -MD -MP -MF "$(DEPDIR)/SoAngle1Dragger.Tpo" -c -o SoAngle1Dragger.o `test -f 'draggers/SoAngle1Dragger.cpp' || echo '$(srcdir)/'`draggers/SoAngle1Dragger.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoAngle1Dragger.Tpo" "$(DEPDIR)/SoAngle1Dragger.Po"; else rm -f "$(DEPDIR)/SoAngle1Dragger.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='draggers/SoAngle1Dragger.cpp' object='SoAngle1Dragger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoAngle1Dragger.Po' tmpdepfile='$(DEPDIR)/SoAngle1Dragger.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoAngle1Dragger.o `test -f 'draggers/SoAngle1Dragger.cpp' || echo '$(srcdir)/'`draggers/SoAngle1Dragger.cpp

SoAngle1Dragger.obj: draggers/SoAngle1Dragger.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoAngle1Dragger.obj -MD -MP -MF "$(DEPDIR)/SoAngle1Dragger.Tpo" -c -o SoAngle1Dragger.obj `if test -f 'draggers/SoAngle1Dragger.cpp'; then $(CYGPATH_W) 'draggers/SoAngle1Dragger.cpp'; else $(CYGPATH_W) '$(srcdir)/draggers/SoAngle1Dragger.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoAngle1Dragger.Tpo" "$(DEPDIR)/SoAngle1Dragger.Po"; else rm -f "$(DEPDIR)/SoAngle1Dragger.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='draggers/SoAngle1Dragger.cpp' object='SoAngle1Dragger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoAngle1Dragger.Po' tmpdepfile='$(DEPDIR)/SoAngle1Dragger.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoAngle1Dragger.obj `if test -f 'draggers/SoAngle1Dragger.cpp'; then $(CYGPATH_W) 'draggers/SoAngle1Dragger.cpp'; else $(CYGPATH_W) '$(srcdir)/draggers/SoAngle1Dragger.cpp'; fi`

SoAngle1Dragger.lo: draggers/SoAngle1Dragger.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoAngle1Dragger.lo -MD -MP -MF "$(DEPDIR)/SoAngle1Dragger.Tpo" -c -o SoAngle1Dragger.lo `test -f 'draggers/SoAngle1Dragger.cpp' || echo '$(srcdir)/'`draggers/SoAngle1Dragger.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoAngle1Dragger.Tpo" "$(DEPDIR)/SoAngle1Dragger.Plo"; else rm -f "$(DEPDIR)/SoAngle1Dragger.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='draggers/SoAngle1Dragger.cpp' object='SoAngle1Dragger.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoAngle1Dragger.Plo' tmpdepfile='$(DEPDIR)/SoAngle1Dragger.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoAngle1Dragger.lo `test -f 'draggers/SoAngle1Dragger.cpp' || echo '$(srcdir)/'`draggers/SoAngle1Dragger.cpp

SoAngle1Manip.o: draggers/SoAngle1Manip.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoAngle1Manip.o -MD -MP -MF "$(DEPDIR)/SoAngle1Manip.Tpo" -c -o SoAngle1Manip.o `test -f 'draggers/SoAngle1Manip.cpp' || echo '$(srcdir)/'`draggers/SoAngle1Manip.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoAngle1Manip.Tpo" "$(DEPDIR)/SoAngle1Manip.Po"; else rm -f "$(DEPDIR)/SoAngle1Manip.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='draggers/SoAngle1Manip.cpp' object='SoAngle1Manip.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoAngle1Manip.Po' tmpdepfile='$(DEPDIR)/SoAngle1Manip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoAngle1Manip.o `test -f 'draggers/SoAngle1Manip.cpp' || echo '$(srcdir)/'`draggers/SoAngle1Manip.cpp

SoAngle1Manip.obj: draggers/SoAngle1Manip.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoAngle1Manip.obj -MD -MP -MF "$(DEPDIR)/SoAngle1Manip.Tpo" -c -o SoAngle1Manip.obj `if test -f 'draggers/SoAngle1Manip.cpp'; then $(CYGPATH_W) 'draggers/SoAngle1Manip.cpp'; else $(CYGPATH_W) '$(srcdir)/draggers/SoAngle1Manip.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoAngle1Manip.Tpo" "$(DEPDIR)/SoAngle1Manip.Po"; else rm -f "$(DEPDIR)/SoAngle1Manip.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='draggers/SoAngle1Manip.cpp' object='SoAngle1Manip.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoAngle1Manip.Po' tmpdepfile='$(DEPDIR)/SoAngle1Manip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoAngle1Manip.obj `if test -f 'draggers/SoAngle1Manip.cpp'; then $(CYGPATH_W) 'draggers/SoAngle1Manip.cpp'; else $(CYGPATH_W) '$(srcdir)/draggers/SoAngle1Manip.cpp'; fi`

SoAngle1Manip.lo: draggers/SoAngle1Manip.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoAngle1Manip.lo -MD -MP -MF "$(DEPDIR)/SoAngle1Manip.Tpo" -c -o SoAngle1Manip.lo `test -f 'draggers/SoAngle1Manip.cpp' || echo '$(srcdir)/'`draggers/SoAngle1Manip.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoAngle1Manip.Tpo" "$(DEPDIR)/SoAngle1Manip.Plo"; else rm -f "$(DEPDIR)/SoAngle1Manip.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='draggers/SoAngle1Manip.cpp' object='SoAngle1Manip.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoAngle1Manip.Plo' tmpdepfile='$(DEPDIR)/SoAngle1Manip.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoAngle1Manip.lo `test -f 'draggers/SoAngle1Manip.cpp' || echo '$(srcdir)/'`draggers/SoAngle1Manip.cpp

GLDepthBufferElement.o: elements/GLDepthBufferElement.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GLDepthBufferElement.o -MD -MP -MF "$(DEPDIR)/GLDepthBufferElement.Tpo" -c -o GLDepthBufferElement.o `test -f 'elements/GLDepthBufferElement.cpp' || echo '$(srcdir)/'`elements/GLDepthBufferElement.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/GLDepthBufferElement.Tpo" "$(DEPDIR)/GLDepthBufferElement.Po"; else rm -f "$(DEPDIR)/GLDepthBufferElement.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='elements/GLDepthBufferElement.cpp' object='GLDepthBufferElement.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/GLDepthBufferElement.Po' tmpdepfile='$(DEPDIR)/GLDepthBufferElement.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GLDepthBufferElement.o `test -f 'elements/GLDepthBufferElement.cpp' || echo '$(srcdir)/'`elements/GLDepthBufferElement.cpp

GLDepthBufferElement.obj: elements/GLDepthBufferElement.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GLDepthBufferElement.obj -MD -MP -MF "$(DEPDIR)/GLDepthBufferElement.Tpo" -c -o GLDepthBufferElement.obj `if test -f 'elements/GLDepthBufferElement.cpp'; then $(CYGPATH_W) 'elements/GLDepthBufferElement.cpp'; else $(CYGPATH_W) '$(srcdir)/elements/GLDepthBufferElement.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/GLDepthBufferElement.Tpo" "$(DEPDIR)/GLDepthBufferElement.Po"; else rm -f "$(DEPDIR)/GLDepthBufferElement.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='elements/GLDepthBufferElement.cpp' object='GLDepthBufferElement.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/GLDepthBufferElement.Po' tmpdepfile='$(DEPDIR)/GLDepthBufferElement.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GLDepthBufferElement.obj `if test -f 'elements/GLDepthBufferElement.cpp'; then $(CYGPATH_W) 'elements/GLDepthBufferElement.cpp'; else $(CYGPATH_W) '$(srcdir)/elements/GLDepthBufferElement.cpp'; fi`

GLDepthBufferElement.lo: elements/GLDepthBufferElement.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GLDepthBufferElement.lo -MD -MP -MF "$(DEPDIR)/GLDepthBufferElement.Tpo" -c -o GLDepthBufferElement.lo `test -f 'elements/GLDepthBufferElement.cpp' || echo '$(srcdir)/'`elements/GLDepthBufferElement.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/GLDepthBufferElement.Tpo" "$(DEPDIR)/GLDepthBufferElement.Plo"; else rm -f "$(DEPDIR)/GLDepthBufferElement.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='elements/GLDepthBufferElement.cpp' object='GLDepthBufferElement.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/GLDepthBufferElement.Plo' tmpdepfile='$(DEPDIR)/GLDepthBufferElement.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GLDepthBufferElement.lo `test -f 'elements/GLDepthBufferElement.cpp' || echo '$(srcdir)/'`elements/GLDepthBufferElement.cpp

UTMElement.o: elements/UTMElement.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UTMElement.o -MD -MP -MF "$(DEPDIR)/UTMElement.Tpo" -c -o UTMElement.o `test -f 'elements/UTMElement.cpp' || echo '$(srcdir)/'`elements/UTMElement.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/UTMElement.Tpo" "$(DEPDIR)/UTMElement.Po"; else rm -f "$(DEPDIR)/UTMElement.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='elements/UTMElement.cpp' object='UTMElement.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UTMElement.Po' tmpdepfile='$(DEPDIR)/UTMElement.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UTMElement.o `test -f 'elements/UTMElement.cpp' || echo '$(srcdir)/'`elements/UTMElement.cpp

UTMElement.obj: elements/UTMElement.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UTMElement.obj -MD -MP -MF "$(DEPDIR)/UTMElement.Tpo" -c -o UTMElement.obj `if test -f 'elements/UTMElement.cpp'; then $(CYGPATH_W) 'elements/UTMElement.cpp'; else $(CYGPATH_W) '$(srcdir)/elements/UTMElement.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/UTMElement.Tpo" "$(DEPDIR)/UTMElement.Po"; else rm -f "$(DEPDIR)/UTMElement.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='elements/UTMElement.cpp' object='UTMElement.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UTMElement.Po' tmpdepfile='$(DEPDIR)/UTMElement.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UTMElement.obj `if test -f 'elements/UTMElement.cpp'; then $(CYGPATH_W) 'elements/UTMElement.cpp'; else $(CYGPATH_W) '$(srcdir)/elements/UTMElement.cpp'; fi`

UTMElement.lo: elements/UTMElement.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UTMElement.lo -MD -MP -MF "$(DEPDIR)/UTMElement.Tpo" -c -o UTMElement.lo `test -f 'elements/UTMElement.cpp' || echo '$(srcdir)/'`elements/UTMElement.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/UTMElement.Tpo" "$(DEPDIR)/UTMElement.Plo"; else rm -f "$(DEPDIR)/UTMElement.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='elements/UTMElement.cpp' object='UTMElement.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UTMElement.Plo' tmpdepfile='$(DEPDIR)/UTMElement.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UTMElement.lo `test -f 'elements/UTMElement.cpp' || echo '$(srcdir)/'`elements/UTMElement.cpp

CubicSplineEngine.o: engines/CubicSplineEngine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CubicSplineEngine.o -MD -MP -MF "$(DEPDIR)/CubicSplineEngine.Tpo" -c -o CubicSplineEngine.o `test -f 'engines/CubicSplineEngine.cpp' || echo '$(srcdir)/'`engines/CubicSplineEngine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/CubicSplineEngine.Tpo" "$(DEPDIR)/CubicSplineEngine.Po"; else rm -f "$(DEPDIR)/CubicSplineEngine.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='engines/CubicSplineEngine.cpp' object='CubicSplineEngine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/CubicSplineEngine.Po' tmpdepfile='$(DEPDIR)/CubicSplineEngine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CubicSplineEngine.o `test -f 'engines/CubicSplineEngine.cpp' || echo '$(srcdir)/'`engines/CubicSplineEngine.cpp

CubicSplineEngine.obj: engines/CubicSplineEngine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CubicSplineEngine.obj -MD -MP -MF "$(DEPDIR)/CubicSplineEngine.Tpo" -c -o CubicSplineEngine.obj `if test -f 'engines/CubicSplineEngine.cpp'; then $(CYGPATH_W) 'engines/CubicSplineEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/engines/CubicSplineEngine.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/CubicSplineEngine.Tpo" "$(DEPDIR)/CubicSplineEngine.Po"; else rm -f "$(DEPDIR)/CubicSplineEngine.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='engines/CubicSplineEngine.cpp' object='CubicSplineEngine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/CubicSplineEngine.Po' tmpdepfile='$(DEPDIR)/CubicSplineEngine.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CubicSplineEngine.obj `if test -f 'engines/CubicSplineEngine.cpp'; then $(CYGPATH_W) 'engines/CubicSplineEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/engines/CubicSplineEngine.cpp'; fi`

CubicSplineEngine.lo: engines/CubicSplineEngine.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CubicSplineEngine.lo -MD -MP -MF "$(DEPDIR)/CubicSplineEngine.Tpo" -c -o CubicSplineEngine.lo `test -f 'engines/CubicSplineEngine.cpp' || echo '$(srcdir)/'`engines/CubicSplineEngine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/CubicSplineEngine.Tpo" "$(DEPDIR)/CubicSplineEngine.Plo"; else rm -f "$(DEPDIR)/CubicSplineEngine.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='engines/CubicSplineEngine.cpp' object='CubicSplineEngine.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/CubicSplineEngine.Plo' tmpdepfile='$(DEPDIR)/CubicSplineEngine.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CubicSplineEngine.lo `test -f 'engines/CubicSplineEngine.cpp' || echo '$(srcdir)/'`engines/CubicSplineEngine.cpp

Rot2Heading.o: engines/Rot2Heading.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rot2Heading.o -MD -MP -MF "$(DEPDIR)/Rot2Heading.Tpo" -c -o Rot2Heading.o `test -f 'engines/Rot2Heading.cpp' || echo '$(srcdir)/'`engines/Rot2Heading.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Rot2Heading.Tpo" "$(DEPDIR)/Rot2Heading.Po"; else rm -f "$(DEPDIR)/Rot2Heading.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='engines/Rot2Heading.cpp' object='Rot2Heading.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Rot2Heading.Po' tmpdepfile='$(DEPDIR)/Rot2Heading.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rot2Heading.o `test -f 'engines/Rot2Heading.cpp' || echo '$(srcdir)/'`engines/Rot2Heading.cpp

Rot2Heading.obj: engines/Rot2Heading.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rot2Heading.obj -MD -MP -MF "$(DEPDIR)/Rot2Heading.Tpo" -c -o Rot2Heading.obj `if test -f 'engines/Rot2Heading.cpp'; then $(CYGPATH_W) 'engines/Rot2Heading.cpp'; else $(CYGPATH_W) '$(srcdir)/engines/Rot2Heading.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Rot2Heading.Tpo" "$(DEPDIR)/Rot2Heading.Po"; else rm -f "$(DEPDIR)/Rot2Heading.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='engines/Rot2Heading.cpp' object='Rot2Heading.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Rot2Heading.Po' tmpdepfile='$(DEPDIR)/Rot2Heading.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rot2Heading.obj `if test -f 'engines/Rot2Heading.cpp'; then $(CYGPATH_W) 'engines/Rot2Heading.cpp'; else $(CYGPATH_W) '$(srcdir)/engines/Rot2Heading.cpp'; fi`

Rot2Heading.lo: engines/Rot2Heading.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rot2Heading.lo -MD -MP -MF "$(DEPDIR)/Rot2Heading.Tpo" -c -o Rot2Heading.lo `test -f 'engines/Rot2Heading.cpp' || echo '$(srcdir)/'`engines/Rot2Heading.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Rot2Heading.Tpo" "$(DEPDIR)/Rot2Heading.Plo"; else rm -f "$(DEPDIR)/Rot2Heading.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='engines/Rot2Heading.cpp' object='Rot2Heading.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Rot2Heading.Plo' tmpdepfile='$(DEPDIR)/Rot2Heading.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rot2Heading.lo `test -f 'engines/Rot2Heading.cpp' || echo '$(srcdir)/'`engines/Rot2Heading.cpp

SmInverseRotation.o: engines/SmInverseRotation.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmInverseRotation.o -MD -MP -MF "$(DEPDIR)/SmInverseRotation.Tpo" -c -o SmInverseRotation.o `test -f 'engines/SmInverseRotation.cpp' || echo '$(srcdir)/'`engines/SmInverseRotation.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmInverseRotation.Tpo" "$(DEPDIR)/SmInverseRotation.Po"; else rm -f "$(DEPDIR)/SmInverseRotation.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='engines/SmInverseRotation.cpp' object='SmInverseRotation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmInverseRotation.Po' tmpdepfile='$(DEPDIR)/SmInverseRotation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmInverseRotation.o `test -f 'engines/SmInverseRotation.cpp' || echo '$(srcdir)/'`engines/SmInverseRotation.cpp

SmInverseRotation.obj: engines/SmInverseRotation.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmInverseRotation.obj -MD -MP -MF "$(DEPDIR)/SmInverseRotation.Tpo" -c -o SmInverseRotation.obj `if test -f 'engines/SmInverseRotation.cpp'; then $(CYGPATH_W) 'engines/SmInverseRotation.cpp'; else $(CYGPATH_W) '$(srcdir)/engines/SmInverseRotation.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmInverseRotation.Tpo" "$(DEPDIR)/SmInverseRotation.Po"; else rm -f "$(DEPDIR)/SmInverseRotation.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='engines/SmInverseRotation.cpp' object='SmInverseRotation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmInverseRotation.Po' tmpdepfile='$(DEPDIR)/SmInverseRotation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmInverseRotation.obj `if test -f 'engines/SmInverseRotation.cpp'; then $(CYGPATH_W) 'engines/SmInverseRotation.cpp'; else $(CYGPATH_W) '$(srcdir)/engines/SmInverseRotation.cpp'; fi`

SmInverseRotation.lo: engines/SmInverseRotation.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmInverseRotation.lo -MD -MP -MF "$(DEPDIR)/SmInverseRotation.Tpo" -c -o SmInverseRotation.lo `test -f 'engines/SmInverseRotation.cpp' || echo '$(srcdir)/'`engines/SmInverseRotation.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmInverseRotation.Tpo" "$(DEPDIR)/SmInverseRotation.Plo"; else rm -f "$(DEPDIR)/SmInverseRotation.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='engines/SmInverseRotation.cpp' object='SmInverseRotation.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmInverseRotation.Plo' tmpdepfile='$(DEPDIR)/SmInverseRotation.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmInverseRotation.lo `test -f 'engines/SmInverseRotation.cpp' || echo '$(srcdir)/'`engines/SmInverseRotation.cpp

SmEventHandler.o: eventhandlers/SmEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmEventHandler.o -MD -MP -MF "$(DEPDIR)/SmEventHandler.Tpo" -c -o SmEventHandler.o `test -f 'eventhandlers/SmEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmEventHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmEventHandler.Tpo" "$(DEPDIR)/SmEventHandler.Po"; else rm -f "$(DEPDIR)/SmEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmEventHandler.cpp' object='SmEventHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmEventHandler.Po' tmpdepfile='$(DEPDIR)/SmEventHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmEventHandler.o `test -f 'eventhandlers/SmEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmEventHandler.cpp

SmEventHandler.obj: eventhandlers/SmEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmEventHandler.obj -MD -MP -MF "$(DEPDIR)/SmEventHandler.Tpo" -c -o SmEventHandler.obj `if test -f 'eventhandlers/SmEventHandler.cpp'; then $(CYGPATH_W) 'eventhandlers/SmEventHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/eventhandlers/SmEventHandler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmEventHandler.Tpo" "$(DEPDIR)/SmEventHandler.Po"; else rm -f "$(DEPDIR)/SmEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmEventHandler.cpp' object='SmEventHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmEventHandler.Po' tmpdepfile='$(DEPDIR)/SmEventHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmEventHandler.obj `if test -f 'eventhandlers/SmEventHandler.cpp'; then $(CYGPATH_W) 'eventhandlers/SmEventHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/eventhandlers/SmEventHandler.cpp'; fi`

SmEventHandler.lo: eventhandlers/SmEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmEventHandler.lo -MD -MP -MF "$(DEPDIR)/SmEventHandler.Tpo" -c -o SmEventHandler.lo `test -f 'eventhandlers/SmEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmEventHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmEventHandler.Tpo" "$(DEPDIR)/SmEventHandler.Plo"; else rm -f "$(DEPDIR)/SmEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmEventHandler.cpp' object='SmEventHandler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmEventHandler.Plo' tmpdepfile='$(DEPDIR)/SmEventHandler.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmEventHandler.lo `test -f 'eventhandlers/SmEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmEventHandler.cpp

SmExaminerEventHandler.o: eventhandlers/SmExaminerEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmExaminerEventHandler.o -MD -MP -MF "$(DEPDIR)/SmExaminerEventHandler.Tpo" -c -o SmExaminerEventHandler.o `test -f 'eventhandlers/SmExaminerEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmExaminerEventHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmExaminerEventHandler.Tpo" "$(DEPDIR)/SmExaminerEventHandler.Po"; else rm -f "$(DEPDIR)/SmExaminerEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmExaminerEventHandler.cpp' object='SmExaminerEventHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmExaminerEventHandler.Po' tmpdepfile='$(DEPDIR)/SmExaminerEventHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmExaminerEventHandler.o `test -f 'eventhandlers/SmExaminerEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmExaminerEventHandler.cpp

SmExaminerEventHandler.obj: eventhandlers/SmExaminerEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmExaminerEventHandler.obj -MD -MP -MF "$(DEPDIR)/SmExaminerEventHandler.Tpo" -c -o SmExaminerEventHandler.obj `if test -f 'eventhandlers/SmExaminerEventHandler.cpp'; then $(CYGPATH_W) 'eventhandlers/SmExaminerEventHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/eventhandlers/SmExaminerEventHandler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmExaminerEventHandler.Tpo" "$(DEPDIR)/SmExaminerEventHandler.Po"; else rm -f "$(DEPDIR)/SmExaminerEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmExaminerEventHandler.cpp' object='SmExaminerEventHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmExaminerEventHandler.Po' tmpdepfile='$(DEPDIR)/SmExaminerEventHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmExaminerEventHandler.obj `if test -f 'eventhandlers/SmExaminerEventHandler.cpp'; then $(CYGPATH_W) 'eventhandlers/SmExaminerEventHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/eventhandlers/SmExaminerEventHandler.cpp'; fi`

SmExaminerEventHandler.lo: eventhandlers/SmExaminerEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmExaminerEventHandler.lo -MD -MP -MF "$(DEPDIR)/SmExaminerEventHandler.Tpo" -c -o SmExaminerEventHandler.lo `test -f 'eventhandlers/SmExaminerEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmExaminerEventHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmExaminerEventHandler.Tpo" "$(DEPDIR)/SmExaminerEventHandler.Plo"; else rm -f "$(DEPDIR)/SmExaminerEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmExaminerEventHandler.cpp' object='SmExaminerEventHandler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmExaminerEventHandler.Plo' tmpdepfile='$(DEPDIR)/SmExaminerEventHandler.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmExaminerEventHandler.lo `test -f 'eventhandlers/SmExaminerEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmExaminerEventHandler.cpp

SmHelicopterEventHandler.o: eventhandlers/SmHelicopterEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmHelicopterEventHandler.o -MD -MP -MF "$(DEPDIR)/SmHelicopterEventHandler.Tpo" -c -o SmHelicopterEventHandler.o `test -f 'eventhandlers/SmHelicopterEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmHelicopterEventHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmHelicopterEventHandler.Tpo" "$(DEPDIR)/SmHelicopterEventHandler.Po"; else rm -f "$(DEPDIR)/SmHelicopterEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmHelicopterEventHandler.cpp' object='SmHelicopterEventHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmHelicopterEventHandler.Po' tmpdepfile='$(DEPDIR)/SmHelicopterEventHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmHelicopterEventHandler.o `test -f 'eventhandlers/SmHelicopterEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmHelicopterEventHandler.cpp

SmHelicopterEventHandler.obj: eventhandlers/SmHelicopterEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmHelicopterEventHandler.obj -MD -MP -MF "$(DEPDIR)/SmHelicopterEventHandler.Tpo" -c -o SmHelicopterEventHandler.obj `if test -f 'eventhandlers/SmHelicopterEventHandler.cpp'; then $(CYGPATH_W) 'eventhandlers/SmHelicopterEventHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/eventhandlers/SmHelicopterEventHandler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmHelicopterEventHandler.Tpo" "$(DEPDIR)/SmHelicopterEventHandler.Po"; else rm -f "$(DEPDIR)/SmHelicopterEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmHelicopterEventHandler.cpp' object='SmHelicopterEventHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmHelicopterEventHandler.Po' tmpdepfile='$(DEPDIR)/SmHelicopterEventHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmHelicopterEventHandler.obj `if test -f 'eventhandlers/SmHelicopterEventHandler.cpp'; then $(CYGPATH_W) 'eventhandlers/SmHelicopterEventHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/eventhandlers/SmHelicopterEventHandler.cpp'; fi`

SmHelicopterEventHandler.lo: eventhandlers/SmHelicopterEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmHelicopterEventHandler.lo -MD -MP -MF "$(DEPDIR)/SmHelicopterEventHandler.Tpo" -c -o SmHelicopterEventHandler.lo `test -f 'eventhandlers/SmHelicopterEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmHelicopterEventHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmHelicopterEventHandler.Tpo" "$(DEPDIR)/SmHelicopterEventHandler.Plo"; else rm -f "$(DEPDIR)/SmHelicopterEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmHelicopterEventHandler.cpp' object='SmHelicopterEventHandler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmHelicopterEventHandler.Plo' tmpdepfile='$(DEPDIR)/SmHelicopterEventHandler.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmHelicopterEventHandler.lo `test -f 'eventhandlers/SmHelicopterEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmHelicopterEventHandler.cpp

SmPanEventHandler.o: eventhandlers/SmPanEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmPanEventHandler.o -MD -MP -MF "$(DEPDIR)/SmPanEventHandler.Tpo" -c -o SmPanEventHandler.o `test -f 'eventhandlers/SmPanEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmPanEventHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmPanEventHandler.Tpo" "$(DEPDIR)/SmPanEventHandler.Po"; else rm -f "$(DEPDIR)/SmPanEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmPanEventHandler.cpp' object='SmPanEventHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmPanEventHandler.Po' tmpdepfile='$(DEPDIR)/SmPanEventHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmPanEventHandler.o `test -f 'eventhandlers/SmPanEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmPanEventHandler.cpp

SmPanEventHandler.obj: eventhandlers/SmPanEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmPanEventHandler.obj -MD -MP -MF "$(DEPDIR)/SmPanEventHandler.Tpo" -c -o SmPanEventHandler.obj `if test -f 'eventhandlers/SmPanEventHandler.cpp'; then $(CYGPATH_W) 'eventhandlers/SmPanEventHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/eventhandlers/SmPanEventHandler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmPanEventHandler.Tpo" "$(DEPDIR)/SmPanEventHandler.Po"; else rm -f "$(DEPDIR)/SmPanEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmPanEventHandler.cpp' object='SmPanEventHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmPanEventHandler.Po' tmpdepfile='$(DEPDIR)/SmPanEventHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmPanEventHandler.obj `if test -f 'eventhandlers/SmPanEventHandler.cpp'; then $(CYGPATH_W) 'eventhandlers/SmPanEventHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/eventhandlers/SmPanEventHandler.cpp'; fi`

SmPanEventHandler.lo: eventhandlers/SmPanEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmPanEventHandler.lo -MD -MP -MF "$(DEPDIR)/SmPanEventHandler.Tpo" -c -o SmPanEventHandler.lo `test -f 'eventhandlers/SmPanEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmPanEventHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmPanEventHandler.Tpo" "$(DEPDIR)/SmPanEventHandler.Plo"; else rm -f "$(DEPDIR)/SmPanEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmPanEventHandler.cpp' object='SmPanEventHandler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmPanEventHandler.Plo' tmpdepfile='$(DEPDIR)/SmPanEventHandler.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmPanEventHandler.lo `test -f 'eventhandlers/SmPanEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmPanEventHandler.cpp

SmSphereEventHandler.o: eventhandlers/SmSphereEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmSphereEventHandler.o -MD -MP -MF "$(DEPDIR)/SmSphereEventHandler.Tpo" -c -o SmSphereEventHandler.o `test -f 'eventhandlers/SmSphereEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmSphereEventHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmSphereEventHandler.Tpo" "$(DEPDIR)/SmSphereEventHandler.Po"; else rm -f "$(DEPDIR)/SmSphereEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmSphereEventHandler.cpp' object='SmSphereEventHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmSphereEventHandler.Po' tmpdepfile='$(DEPDIR)/SmSphereEventHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmSphereEventHandler.o `test -f 'eventhandlers/SmSphereEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmSphereEventHandler.cpp

SmSphereEventHandler.obj: eventhandlers/SmSphereEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmSphereEventHandler.obj -MD -MP -MF "$(DEPDIR)/SmSphereEventHandler.Tpo" -c -o SmSphereEventHandler.obj `if test -f 'eventhandlers/SmSphereEventHandler.cpp'; then $(CYGPATH_W) 'eventhandlers/SmSphereEventHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/eventhandlers/SmSphereEventHandler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmSphereEventHandler.Tpo" "$(DEPDIR)/SmSphereEventHandler.Po"; else rm -f "$(DEPDIR)/SmSphereEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmSphereEventHandler.cpp' object='SmSphereEventHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmSphereEventHandler.Po' tmpdepfile='$(DEPDIR)/SmSphereEventHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmSphereEventHandler.obj `if test -f 'eventhandlers/SmSphereEventHandler.cpp'; then $(CYGPATH_W) 'eventhandlers/SmSphereEventHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/eventhandlers/SmSphereEventHandler.cpp'; fi`

SmSphereEventHandler.lo: eventhandlers/SmSphereEventHandler.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmSphereEventHandler.lo -MD -MP -MF "$(DEPDIR)/SmSphereEventHandler.Tpo" -c -o SmSphereEventHandler.lo `test -f 'eventhandlers/SmSphereEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmSphereEventHandler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmSphereEventHandler.Tpo" "$(DEPDIR)/SmSphereEventHandler.Plo"; else rm -f "$(DEPDIR)/SmSphereEventHandler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='eventhandlers/SmSphereEventHandler.cpp' object='SmSphereEventHandler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmSphereEventHandler.Plo' tmpdepfile='$(DEPDIR)/SmSphereEventHandler.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmSphereEventHandler.lo `test -f 'eventhandlers/SmSphereEventHandler.cpp' || echo '$(srcdir)/'`eventhandlers/SmSphereEventHandler.cpp

cameracontrol.o: misc/cameracontrol.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cameracontrol.o -MD -MP -MF "$(DEPDIR)/cameracontrol.Tpo" -c -o cameracontrol.o `test -f 'misc/cameracontrol.cpp' || echo '$(srcdir)/'`misc/cameracontrol.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cameracontrol.Tpo" "$(DEPDIR)/cameracontrol.Po"; else rm -f "$(DEPDIR)/cameracontrol.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/cameracontrol.cpp' object='cameracontrol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cameracontrol.Po' tmpdepfile='$(DEPDIR)/cameracontrol.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cameracontrol.o `test -f 'misc/cameracontrol.cpp' || echo '$(srcdir)/'`misc/cameracontrol.cpp

cameracontrol.obj: misc/cameracontrol.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cameracontrol.obj -MD -MP -MF "$(DEPDIR)/cameracontrol.Tpo" -c -o cameracontrol.obj `if test -f 'misc/cameracontrol.cpp'; then $(CYGPATH_W) 'misc/cameracontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/misc/cameracontrol.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cameracontrol.Tpo" "$(DEPDIR)/cameracontrol.Po"; else rm -f "$(DEPDIR)/cameracontrol.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/cameracontrol.cpp' object='cameracontrol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cameracontrol.Po' tmpdepfile='$(DEPDIR)/cameracontrol.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cameracontrol.obj `if test -f 'misc/cameracontrol.cpp'; then $(CYGPATH_W) 'misc/cameracontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/misc/cameracontrol.cpp'; fi`

cameracontrol.lo: misc/cameracontrol.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cameracontrol.lo -MD -MP -MF "$(DEPDIR)/cameracontrol.Tpo" -c -o cameracontrol.lo `test -f 'misc/cameracontrol.cpp' || echo '$(srcdir)/'`misc/cameracontrol.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cameracontrol.Tpo" "$(DEPDIR)/cameracontrol.Plo"; else rm -f "$(DEPDIR)/cameracontrol.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/cameracontrol.cpp' object='cameracontrol.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/cameracontrol.Plo' tmpdepfile='$(DEPDIR)/cameracontrol.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cameracontrol.lo `test -f 'misc/cameracontrol.cpp' || echo '$(srcdir)/'`misc/cameracontrol.cpp

Envelope.o: misc/Envelope.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Envelope.o -MD -MP -MF "$(DEPDIR)/Envelope.Tpo" -c -o Envelope.o `test -f 'misc/Envelope.cpp' || echo '$(srcdir)/'`misc/Envelope.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Envelope.Tpo" "$(DEPDIR)/Envelope.Po"; else rm -f "$(DEPDIR)/Envelope.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/Envelope.cpp' object='Envelope.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Envelope.Po' tmpdepfile='$(DEPDIR)/Envelope.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Envelope.o `test -f 'misc/Envelope.cpp' || echo '$(srcdir)/'`misc/Envelope.cpp

Envelope.obj: misc/Envelope.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Envelope.obj -MD -MP -MF "$(DEPDIR)/Envelope.Tpo" -c -o Envelope.obj `if test -f 'misc/Envelope.cpp'; then $(CYGPATH_W) 'misc/Envelope.cpp'; else $(CYGPATH_W) '$(srcdir)/misc/Envelope.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Envelope.Tpo" "$(DEPDIR)/Envelope.Po"; else rm -f "$(DEPDIR)/Envelope.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/Envelope.cpp' object='Envelope.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Envelope.Po' tmpdepfile='$(DEPDIR)/Envelope.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Envelope.obj `if test -f 'misc/Envelope.cpp'; then $(CYGPATH_W) 'misc/Envelope.cpp'; else $(CYGPATH_W) '$(srcdir)/misc/Envelope.cpp'; fi`

Envelope.lo: misc/Envelope.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Envelope.lo -MD -MP -MF "$(DEPDIR)/Envelope.Tpo" -c -o Envelope.lo `test -f 'misc/Envelope.cpp' || echo '$(srcdir)/'`misc/Envelope.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Envelope.Tpo" "$(DEPDIR)/Envelope.Plo"; else rm -f "$(DEPDIR)/Envelope.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/Envelope.cpp' object='Envelope.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Envelope.Plo' tmpdepfile='$(DEPDIR)/Envelope.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Envelope.lo `test -f 'misc/Envelope.cpp' || echo '$(srcdir)/'`misc/Envelope.cpp

Init.o: misc/Init.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Init.o -MD -MP -MF "$(DEPDIR)/Init.Tpo" -c -o Init.o `test -f 'misc/Init.cpp' || echo '$(srcdir)/'`misc/Init.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Init.Tpo" "$(DEPDIR)/Init.Po"; else rm -f "$(DEPDIR)/Init.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/Init.cpp' object='Init.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Init.Po' tmpdepfile='$(DEPDIR)/Init.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Init.o `test -f 'misc/Init.cpp' || echo '$(srcdir)/'`misc/Init.cpp

Init.obj: misc/Init.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Init.obj -MD -MP -MF "$(DEPDIR)/Init.Tpo" -c -o Init.obj `if test -f 'misc/Init.cpp'; then $(CYGPATH_W) 'misc/Init.cpp'; else $(CYGPATH_W) '$(srcdir)/misc/Init.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Init.Tpo" "$(DEPDIR)/Init.Po"; else rm -f "$(DEPDIR)/Init.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/Init.cpp' object='Init.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Init.Po' tmpdepfile='$(DEPDIR)/Init.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Init.obj `if test -f 'misc/Init.cpp'; then $(CYGPATH_W) 'misc/Init.cpp'; else $(CYGPATH_W) '$(srcdir)/misc/Init.cpp'; fi`

Init.lo: misc/Init.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Init.lo -MD -MP -MF "$(DEPDIR)/Init.Tpo" -c -o Init.lo `test -f 'misc/Init.cpp' || echo '$(srcdir)/'`misc/Init.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Init.Tpo" "$(DEPDIR)/Init.Plo"; else rm -f "$(DEPDIR)/Init.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/Init.cpp' object='Init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Init.Plo' tmpdepfile='$(DEPDIR)/Init.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Init.lo `test -f 'misc/Init.cpp' || echo '$(srcdir)/'`misc/Init.cpp

SbCubicSpline.o: misc/SbCubicSpline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SbCubicSpline.o -MD -MP -MF "$(DEPDIR)/SbCubicSpline.Tpo" -c -o SbCubicSpline.o `test -f 'misc/SbCubicSpline.cpp' || echo '$(srcdir)/'`misc/SbCubicSpline.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SbCubicSpline.Tpo" "$(DEPDIR)/SbCubicSpline.Po"; else rm -f "$(DEPDIR)/SbCubicSpline.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/SbCubicSpline.cpp' object='SbCubicSpline.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SbCubicSpline.Po' tmpdepfile='$(DEPDIR)/SbCubicSpline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SbCubicSpline.o `test -f 'misc/SbCubicSpline.cpp' || echo '$(srcdir)/'`misc/SbCubicSpline.cpp

SbCubicSpline.obj: misc/SbCubicSpline.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SbCubicSpline.obj -MD -MP -MF "$(DEPDIR)/SbCubicSpline.Tpo" -c -o SbCubicSpline.obj `if test -f 'misc/SbCubicSpline.cpp'; then $(CYGPATH_W) 'misc/SbCubicSpline.cpp'; else $(CYGPATH_W) '$(srcdir)/misc/SbCubicSpline.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SbCubicSpline.Tpo" "$(DEPDIR)/SbCubicSpline.Po"; else rm -f "$(DEPDIR)/SbCubicSpline.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/SbCubicSpline.cpp' object='SbCubicSpline.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SbCubicSpline.Po' tmpdepfile='$(DEPDIR)/SbCubicSpline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SbCubicSpline.obj `if test -f 'misc/SbCubicSpline.cpp'; then $(CYGPATH_W) 'misc/SbCubicSpline.cpp'; else $(CYGPATH_W) '$(srcdir)/misc/SbCubicSpline.cpp'; fi`

SbCubicSpline.lo: misc/SbCubicSpline.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SbCubicSpline.lo -MD -MP -MF "$(DEPDIR)/SbCubicSpline.Tpo" -c -o SbCubicSpline.lo `test -f 'misc/SbCubicSpline.cpp' || echo '$(srcdir)/'`misc/SbCubicSpline.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SbCubicSpline.Tpo" "$(DEPDIR)/SbCubicSpline.Plo"; else rm -f "$(DEPDIR)/SbCubicSpline.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/SbCubicSpline.cpp' object='SbCubicSpline.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SbCubicSpline.Plo' tmpdepfile='$(DEPDIR)/SbCubicSpline.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SbCubicSpline.lo `test -f 'misc/SbCubicSpline.cpp' || echo '$(srcdir)/'`misc/SbCubicSpline.cpp

SceneManager.o: misc/SceneManager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SceneManager.o -MD -MP -MF "$(DEPDIR)/SceneManager.Tpo" -c -o SceneManager.o `test -f 'misc/SceneManager.cpp' || echo '$(srcdir)/'`misc/SceneManager.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SceneManager.Tpo" "$(DEPDIR)/SceneManager.Po"; else rm -f "$(DEPDIR)/SceneManager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/SceneManager.cpp' object='SceneManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SceneManager.Po' tmpdepfile='$(DEPDIR)/SceneManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SceneManager.o `test -f 'misc/SceneManager.cpp' || echo '$(srcdir)/'`misc/SceneManager.cpp

SceneManager.obj: misc/SceneManager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SceneManager.obj -MD -MP -MF "$(DEPDIR)/SceneManager.Tpo" -c -o SceneManager.obj `if test -f 'misc/SceneManager.cpp'; then $(CYGPATH_W) 'misc/SceneManager.cpp'; else $(CYGPATH_W) '$(srcdir)/misc/SceneManager.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SceneManager.Tpo" "$(DEPDIR)/SceneManager.Po"; else rm -f "$(DEPDIR)/SceneManager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/SceneManager.cpp' object='SceneManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SceneManager.Po' tmpdepfile='$(DEPDIR)/SceneManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SceneManager.obj `if test -f 'misc/SceneManager.cpp'; then $(CYGPATH_W) 'misc/SceneManager.cpp'; else $(CYGPATH_W) '$(srcdir)/misc/SceneManager.cpp'; fi`

SceneManager.lo: misc/SceneManager.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SceneManager.lo -MD -MP -MF "$(DEPDIR)/SceneManager.Tpo" -c -o SceneManager.lo `test -f 'misc/SceneManager.cpp' || echo '$(srcdir)/'`misc/SceneManager.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SceneManager.Tpo" "$(DEPDIR)/SceneManager.Plo"; else rm -f "$(DEPDIR)/SceneManager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc/SceneManager.cpp' object='SceneManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SceneManager.Plo' tmpdepfile='$(DEPDIR)/SceneManager.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SceneManager.lo `test -f 'misc/SceneManager.cpp' || echo '$(srcdir)/'`misc/SceneManager.cpp

bitmapfont.o: nodekits/bitmapfont.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bitmapfont.o -MD -MP -MF "$(DEPDIR)/bitmapfont.Tpo" -c -o bitmapfont.o `test -f 'nodekits/bitmapfont.cpp' || echo '$(srcdir)/'`nodekits/bitmapfont.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/bitmapfont.Tpo" "$(DEPDIR)/bitmapfont.Po"; else rm -f "$(DEPDIR)/bitmapfont.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/bitmapfont.cpp' object='bitmapfont.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/bitmapfont.Po' tmpdepfile='$(DEPDIR)/bitmapfont.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bitmapfont.o `test -f 'nodekits/bitmapfont.cpp' || echo '$(srcdir)/'`nodekits/bitmapfont.cpp

bitmapfont.obj: nodekits/bitmapfont.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bitmapfont.obj -MD -MP -MF "$(DEPDIR)/bitmapfont.Tpo" -c -o bitmapfont.obj `if test -f 'nodekits/bitmapfont.cpp'; then $(CYGPATH_W) 'nodekits/bitmapfont.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/bitmapfont.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/bitmapfont.Tpo" "$(DEPDIR)/bitmapfont.Po"; else rm -f "$(DEPDIR)/bitmapfont.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/bitmapfont.cpp' object='bitmapfont.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/bitmapfont.Po' tmpdepfile='$(DEPDIR)/bitmapfont.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bitmapfont.obj `if test -f 'nodekits/bitmapfont.cpp'; then $(CYGPATH_W) 'nodekits/bitmapfont.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/bitmapfont.cpp'; fi`

bitmapfont.lo: nodekits/bitmapfont.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bitmapfont.lo -MD -MP -MF "$(DEPDIR)/bitmapfont.Tpo" -c -o bitmapfont.lo `test -f 'nodekits/bitmapfont.cpp' || echo '$(srcdir)/'`nodekits/bitmapfont.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/bitmapfont.Tpo" "$(DEPDIR)/bitmapfont.Plo"; else rm -f "$(DEPDIR)/bitmapfont.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/bitmapfont.cpp' object='bitmapfont.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/bitmapfont.Plo' tmpdepfile='$(DEPDIR)/bitmapfont.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bitmapfont.lo `test -f 'nodekits/bitmapfont.cpp' || echo '$(srcdir)/'`nodekits/bitmapfont.cpp

DynamicBaseKit.o: nodekits/DynamicBaseKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DynamicBaseKit.o -MD -MP -MF "$(DEPDIR)/DynamicBaseKit.Tpo" -c -o DynamicBaseKit.o `test -f 'nodekits/DynamicBaseKit.cpp' || echo '$(srcdir)/'`nodekits/DynamicBaseKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/DynamicBaseKit.Tpo" "$(DEPDIR)/DynamicBaseKit.Po"; else rm -f "$(DEPDIR)/DynamicBaseKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/DynamicBaseKit.cpp' object='DynamicBaseKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/DynamicBaseKit.Po' tmpdepfile='$(DEPDIR)/DynamicBaseKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DynamicBaseKit.o `test -f 'nodekits/DynamicBaseKit.cpp' || echo '$(srcdir)/'`nodekits/DynamicBaseKit.cpp

DynamicBaseKit.obj: nodekits/DynamicBaseKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DynamicBaseKit.obj -MD -MP -MF "$(DEPDIR)/DynamicBaseKit.Tpo" -c -o DynamicBaseKit.obj `if test -f 'nodekits/DynamicBaseKit.cpp'; then $(CYGPATH_W) 'nodekits/DynamicBaseKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/DynamicBaseKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/DynamicBaseKit.Tpo" "$(DEPDIR)/DynamicBaseKit.Po"; else rm -f "$(DEPDIR)/DynamicBaseKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/DynamicBaseKit.cpp' object='DynamicBaseKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/DynamicBaseKit.Po' tmpdepfile='$(DEPDIR)/DynamicBaseKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DynamicBaseKit.obj `if test -f 'nodekits/DynamicBaseKit.cpp'; then $(CYGPATH_W) 'nodekits/DynamicBaseKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/DynamicBaseKit.cpp'; fi`

DynamicBaseKit.lo: nodekits/DynamicBaseKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DynamicBaseKit.lo -MD -MP -MF "$(DEPDIR)/DynamicBaseKit.Tpo" -c -o DynamicBaseKit.lo `test -f 'nodekits/DynamicBaseKit.cpp' || echo '$(srcdir)/'`nodekits/DynamicBaseKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/DynamicBaseKit.Tpo" "$(DEPDIR)/DynamicBaseKit.Plo"; else rm -f "$(DEPDIR)/DynamicBaseKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/DynamicBaseKit.cpp' object='DynamicBaseKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/DynamicBaseKit.Plo' tmpdepfile='$(DEPDIR)/DynamicBaseKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DynamicBaseKit.lo `test -f 'nodekits/DynamicBaseKit.cpp' || echo '$(srcdir)/'`nodekits/DynamicBaseKit.cpp

GeoMarkerKit.o: nodekits/GeoMarkerKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GeoMarkerKit.o -MD -MP -MF "$(DEPDIR)/GeoMarkerKit.Tpo" -c -o GeoMarkerKit.o `test -f 'nodekits/GeoMarkerKit.cpp' || echo '$(srcdir)/'`nodekits/GeoMarkerKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/GeoMarkerKit.Tpo" "$(DEPDIR)/GeoMarkerKit.Po"; else rm -f "$(DEPDIR)/GeoMarkerKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/GeoMarkerKit.cpp' object='GeoMarkerKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/GeoMarkerKit.Po' tmpdepfile='$(DEPDIR)/GeoMarkerKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GeoMarkerKit.o `test -f 'nodekits/GeoMarkerKit.cpp' || echo '$(srcdir)/'`nodekits/GeoMarkerKit.cpp

GeoMarkerKit.obj: nodekits/GeoMarkerKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GeoMarkerKit.obj -MD -MP -MF "$(DEPDIR)/GeoMarkerKit.Tpo" -c -o GeoMarkerKit.obj `if test -f 'nodekits/GeoMarkerKit.cpp'; then $(CYGPATH_W) 'nodekits/GeoMarkerKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/GeoMarkerKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/GeoMarkerKit.Tpo" "$(DEPDIR)/GeoMarkerKit.Po"; else rm -f "$(DEPDIR)/GeoMarkerKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/GeoMarkerKit.cpp' object='GeoMarkerKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/GeoMarkerKit.Po' tmpdepfile='$(DEPDIR)/GeoMarkerKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GeoMarkerKit.obj `if test -f 'nodekits/GeoMarkerKit.cpp'; then $(CYGPATH_W) 'nodekits/GeoMarkerKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/GeoMarkerKit.cpp'; fi`

GeoMarkerKit.lo: nodekits/GeoMarkerKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GeoMarkerKit.lo -MD -MP -MF "$(DEPDIR)/GeoMarkerKit.Tpo" -c -o GeoMarkerKit.lo `test -f 'nodekits/GeoMarkerKit.cpp' || echo '$(srcdir)/'`nodekits/GeoMarkerKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/GeoMarkerKit.Tpo" "$(DEPDIR)/GeoMarkerKit.Plo"; else rm -f "$(DEPDIR)/GeoMarkerKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/GeoMarkerKit.cpp' object='GeoMarkerKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/GeoMarkerKit.Plo' tmpdepfile='$(DEPDIR)/GeoMarkerKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GeoMarkerKit.lo `test -f 'nodekits/GeoMarkerKit.cpp' || echo '$(srcdir)/'`nodekits/GeoMarkerKit.cpp

LegendKit.o: nodekits/LegendKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LegendKit.o -MD -MP -MF "$(DEPDIR)/LegendKit.Tpo" -c -o LegendKit.o `test -f 'nodekits/LegendKit.cpp' || echo '$(srcdir)/'`nodekits/LegendKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LegendKit.Tpo" "$(DEPDIR)/LegendKit.Po"; else rm -f "$(DEPDIR)/LegendKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/LegendKit.cpp' object='LegendKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LegendKit.Po' tmpdepfile='$(DEPDIR)/LegendKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LegendKit.o `test -f 'nodekits/LegendKit.cpp' || echo '$(srcdir)/'`nodekits/LegendKit.cpp

LegendKit.obj: nodekits/LegendKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LegendKit.obj -MD -MP -MF "$(DEPDIR)/LegendKit.Tpo" -c -o LegendKit.obj `if test -f 'nodekits/LegendKit.cpp'; then $(CYGPATH_W) 'nodekits/LegendKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/LegendKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LegendKit.Tpo" "$(DEPDIR)/LegendKit.Po"; else rm -f "$(DEPDIR)/LegendKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/LegendKit.cpp' object='LegendKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LegendKit.Po' tmpdepfile='$(DEPDIR)/LegendKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LegendKit.obj `if test -f 'nodekits/LegendKit.cpp'; then $(CYGPATH_W) 'nodekits/LegendKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/LegendKit.cpp'; fi`

LegendKit.lo: nodekits/LegendKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LegendKit.lo -MD -MP -MF "$(DEPDIR)/LegendKit.Tpo" -c -o LegendKit.lo `test -f 'nodekits/LegendKit.cpp' || echo '$(srcdir)/'`nodekits/LegendKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LegendKit.Tpo" "$(DEPDIR)/LegendKit.Plo"; else rm -f "$(DEPDIR)/LegendKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/LegendKit.cpp' object='LegendKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LegendKit.Plo' tmpdepfile='$(DEPDIR)/LegendKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LegendKit.lo `test -f 'nodekits/LegendKit.cpp' || echo '$(srcdir)/'`nodekits/LegendKit.cpp

NormalsKit.o: nodekits/NormalsKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NormalsKit.o -MD -MP -MF "$(DEPDIR)/NormalsKit.Tpo" -c -o NormalsKit.o `test -f 'nodekits/NormalsKit.cpp' || echo '$(srcdir)/'`nodekits/NormalsKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/NormalsKit.Tpo" "$(DEPDIR)/NormalsKit.Po"; else rm -f "$(DEPDIR)/NormalsKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/NormalsKit.cpp' object='NormalsKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/NormalsKit.Po' tmpdepfile='$(DEPDIR)/NormalsKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NormalsKit.o `test -f 'nodekits/NormalsKit.cpp' || echo '$(srcdir)/'`nodekits/NormalsKit.cpp

NormalsKit.obj: nodekits/NormalsKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NormalsKit.obj -MD -MP -MF "$(DEPDIR)/NormalsKit.Tpo" -c -o NormalsKit.obj `if test -f 'nodekits/NormalsKit.cpp'; then $(CYGPATH_W) 'nodekits/NormalsKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/NormalsKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/NormalsKit.Tpo" "$(DEPDIR)/NormalsKit.Po"; else rm -f "$(DEPDIR)/NormalsKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/NormalsKit.cpp' object='NormalsKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/NormalsKit.Po' tmpdepfile='$(DEPDIR)/NormalsKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NormalsKit.obj `if test -f 'nodekits/NormalsKit.cpp'; then $(CYGPATH_W) 'nodekits/NormalsKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/NormalsKit.cpp'; fi`

NormalsKit.lo: nodekits/NormalsKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NormalsKit.lo -MD -MP -MF "$(DEPDIR)/NormalsKit.Tpo" -c -o NormalsKit.lo `test -f 'nodekits/NormalsKit.cpp' || echo '$(srcdir)/'`nodekits/NormalsKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/NormalsKit.Tpo" "$(DEPDIR)/NormalsKit.Plo"; else rm -f "$(DEPDIR)/NormalsKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/NormalsKit.cpp' object='NormalsKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/NormalsKit.Plo' tmpdepfile='$(DEPDIR)/NormalsKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NormalsKit.lo `test -f 'nodekits/NormalsKit.cpp' || echo '$(srcdir)/'`nodekits/NormalsKit.cpp

PopupMenuKit.o: nodekits/PopupMenuKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PopupMenuKit.o -MD -MP -MF "$(DEPDIR)/PopupMenuKit.Tpo" -c -o PopupMenuKit.o `test -f 'nodekits/PopupMenuKit.cpp' || echo '$(srcdir)/'`nodekits/PopupMenuKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/PopupMenuKit.Tpo" "$(DEPDIR)/PopupMenuKit.Po"; else rm -f "$(DEPDIR)/PopupMenuKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/PopupMenuKit.cpp' object='PopupMenuKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/PopupMenuKit.Po' tmpdepfile='$(DEPDIR)/PopupMenuKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PopupMenuKit.o `test -f 'nodekits/PopupMenuKit.cpp' || echo '$(srcdir)/'`nodekits/PopupMenuKit.cpp

PopupMenuKit.obj: nodekits/PopupMenuKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PopupMenuKit.obj -MD -MP -MF "$(DEPDIR)/PopupMenuKit.Tpo" -c -o PopupMenuKit.obj `if test -f 'nodekits/PopupMenuKit.cpp'; then $(CYGPATH_W) 'nodekits/PopupMenuKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/PopupMenuKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/PopupMenuKit.Tpo" "$(DEPDIR)/PopupMenuKit.Po"; else rm -f "$(DEPDIR)/PopupMenuKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/PopupMenuKit.cpp' object='PopupMenuKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/PopupMenuKit.Po' tmpdepfile='$(DEPDIR)/PopupMenuKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PopupMenuKit.obj `if test -f 'nodekits/PopupMenuKit.cpp'; then $(CYGPATH_W) 'nodekits/PopupMenuKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/PopupMenuKit.cpp'; fi`

PopupMenuKit.lo: nodekits/PopupMenuKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PopupMenuKit.lo -MD -MP -MF "$(DEPDIR)/PopupMenuKit.Tpo" -c -o PopupMenuKit.lo `test -f 'nodekits/PopupMenuKit.cpp' || echo '$(srcdir)/'`nodekits/PopupMenuKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/PopupMenuKit.Tpo" "$(DEPDIR)/PopupMenuKit.Plo"; else rm -f "$(DEPDIR)/PopupMenuKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/PopupMenuKit.cpp' object='PopupMenuKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/PopupMenuKit.Plo' tmpdepfile='$(DEPDIR)/PopupMenuKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PopupMenuKit.lo `test -f 'nodekits/PopupMenuKit.cpp' || echo '$(srcdir)/'`nodekits/PopupMenuKit.cpp

SmAnnotationAxis.o: nodekits/SmAnnotationAxis.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmAnnotationAxis.o -MD -MP -MF "$(DEPDIR)/SmAnnotationAxis.Tpo" -c -o SmAnnotationAxis.o `test -f 'nodekits/SmAnnotationAxis.cpp' || echo '$(srcdir)/'`nodekits/SmAnnotationAxis.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmAnnotationAxis.Tpo" "$(DEPDIR)/SmAnnotationAxis.Po"; else rm -f "$(DEPDIR)/SmAnnotationAxis.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmAnnotationAxis.cpp' object='SmAnnotationAxis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmAnnotationAxis.Po' tmpdepfile='$(DEPDIR)/SmAnnotationAxis.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmAnnotationAxis.o `test -f 'nodekits/SmAnnotationAxis.cpp' || echo '$(srcdir)/'`nodekits/SmAnnotationAxis.cpp

SmAnnotationAxis.obj: nodekits/SmAnnotationAxis.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmAnnotationAxis.obj -MD -MP -MF "$(DEPDIR)/SmAnnotationAxis.Tpo" -c -o SmAnnotationAxis.obj `if test -f 'nodekits/SmAnnotationAxis.cpp'; then $(CYGPATH_W) 'nodekits/SmAnnotationAxis.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmAnnotationAxis.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmAnnotationAxis.Tpo" "$(DEPDIR)/SmAnnotationAxis.Po"; else rm -f "$(DEPDIR)/SmAnnotationAxis.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmAnnotationAxis.cpp' object='SmAnnotationAxis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmAnnotationAxis.Po' tmpdepfile='$(DEPDIR)/SmAnnotationAxis.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmAnnotationAxis.obj `if test -f 'nodekits/SmAnnotationAxis.cpp'; then $(CYGPATH_W) 'nodekits/SmAnnotationAxis.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmAnnotationAxis.cpp'; fi`

SmAnnotationAxis.lo: nodekits/SmAnnotationAxis.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmAnnotationAxis.lo -MD -MP -MF "$(DEPDIR)/SmAnnotationAxis.Tpo" -c -o SmAnnotationAxis.lo `test -f 'nodekits/SmAnnotationAxis.cpp' || echo '$(srcdir)/'`nodekits/SmAnnotationAxis.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmAnnotationAxis.Tpo" "$(DEPDIR)/SmAnnotationAxis.Plo"; else rm -f "$(DEPDIR)/SmAnnotationAxis.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmAnnotationAxis.cpp' object='SmAnnotationAxis.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmAnnotationAxis.Plo' tmpdepfile='$(DEPDIR)/SmAnnotationAxis.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmAnnotationAxis.lo `test -f 'nodekits/SmAnnotationAxis.cpp' || echo '$(srcdir)/'`nodekits/SmAnnotationAxis.cpp

SmAnnotationWall.o: nodekits/SmAnnotationWall.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmAnnotationWall.o -MD -MP -MF "$(DEPDIR)/SmAnnotationWall.Tpo" -c -o SmAnnotationWall.o `test -f 'nodekits/SmAnnotationWall.cpp' || echo '$(srcdir)/'`nodekits/SmAnnotationWall.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmAnnotationWall.Tpo" "$(DEPDIR)/SmAnnotationWall.Po"; else rm -f "$(DEPDIR)/SmAnnotationWall.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmAnnotationWall.cpp' object='SmAnnotationWall.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmAnnotationWall.Po' tmpdepfile='$(DEPDIR)/SmAnnotationWall.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmAnnotationWall.o `test -f 'nodekits/SmAnnotationWall.cpp' || echo '$(srcdir)/'`nodekits/SmAnnotationWall.cpp

SmAnnotationWall.obj: nodekits/SmAnnotationWall.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmAnnotationWall.obj -MD -MP -MF "$(DEPDIR)/SmAnnotationWall.Tpo" -c -o SmAnnotationWall.obj `if test -f 'nodekits/SmAnnotationWall.cpp'; then $(CYGPATH_W) 'nodekits/SmAnnotationWall.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmAnnotationWall.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmAnnotationWall.Tpo" "$(DEPDIR)/SmAnnotationWall.Po"; else rm -f "$(DEPDIR)/SmAnnotationWall.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmAnnotationWall.cpp' object='SmAnnotationWall.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmAnnotationWall.Po' tmpdepfile='$(DEPDIR)/SmAnnotationWall.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmAnnotationWall.obj `if test -f 'nodekits/SmAnnotationWall.cpp'; then $(CYGPATH_W) 'nodekits/SmAnnotationWall.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmAnnotationWall.cpp'; fi`

SmAnnotationWall.lo: nodekits/SmAnnotationWall.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmAnnotationWall.lo -MD -MP -MF "$(DEPDIR)/SmAnnotationWall.Tpo" -c -o SmAnnotationWall.lo `test -f 'nodekits/SmAnnotationWall.cpp' || echo '$(srcdir)/'`nodekits/SmAnnotationWall.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmAnnotationWall.Tpo" "$(DEPDIR)/SmAnnotationWall.Plo"; else rm -f "$(DEPDIR)/SmAnnotationWall.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmAnnotationWall.cpp' object='SmAnnotationWall.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmAnnotationWall.Plo' tmpdepfile='$(DEPDIR)/SmAnnotationWall.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmAnnotationWall.lo `test -f 'nodekits/SmAnnotationWall.cpp' || echo '$(srcdir)/'`nodekits/SmAnnotationWall.cpp

SmAxisDisplayKit.o: nodekits/SmAxisDisplayKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmAxisDisplayKit.o -MD -MP -MF "$(DEPDIR)/SmAxisDisplayKit.Tpo" -c -o SmAxisDisplayKit.o `test -f 'nodekits/SmAxisDisplayKit.cpp' || echo '$(srcdir)/'`nodekits/SmAxisDisplayKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmAxisDisplayKit.Tpo" "$(DEPDIR)/SmAxisDisplayKit.Po"; else rm -f "$(DEPDIR)/SmAxisDisplayKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmAxisDisplayKit.cpp' object='SmAxisDisplayKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmAxisDisplayKit.Po' tmpdepfile='$(DEPDIR)/SmAxisDisplayKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmAxisDisplayKit.o `test -f 'nodekits/SmAxisDisplayKit.cpp' || echo '$(srcdir)/'`nodekits/SmAxisDisplayKit.cpp

SmAxisDisplayKit.obj: nodekits/SmAxisDisplayKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmAxisDisplayKit.obj -MD -MP -MF "$(DEPDIR)/SmAxisDisplayKit.Tpo" -c -o SmAxisDisplayKit.obj `if test -f 'nodekits/SmAxisDisplayKit.cpp'; then $(CYGPATH_W) 'nodekits/SmAxisDisplayKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmAxisDisplayKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmAxisDisplayKit.Tpo" "$(DEPDIR)/SmAxisDisplayKit.Po"; else rm -f "$(DEPDIR)/SmAxisDisplayKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmAxisDisplayKit.cpp' object='SmAxisDisplayKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmAxisDisplayKit.Po' tmpdepfile='$(DEPDIR)/SmAxisDisplayKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmAxisDisplayKit.obj `if test -f 'nodekits/SmAxisDisplayKit.cpp'; then $(CYGPATH_W) 'nodekits/SmAxisDisplayKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmAxisDisplayKit.cpp'; fi`

SmAxisDisplayKit.lo: nodekits/SmAxisDisplayKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmAxisDisplayKit.lo -MD -MP -MF "$(DEPDIR)/SmAxisDisplayKit.Tpo" -c -o SmAxisDisplayKit.lo `test -f 'nodekits/SmAxisDisplayKit.cpp' || echo '$(srcdir)/'`nodekits/SmAxisDisplayKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmAxisDisplayKit.Tpo" "$(DEPDIR)/SmAxisDisplayKit.Plo"; else rm -f "$(DEPDIR)/SmAxisDisplayKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmAxisDisplayKit.cpp' object='SmAxisDisplayKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmAxisDisplayKit.Plo' tmpdepfile='$(DEPDIR)/SmAxisDisplayKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmAxisDisplayKit.lo `test -f 'nodekits/SmAxisDisplayKit.cpp' || echo '$(srcdir)/'`nodekits/SmAxisDisplayKit.cpp

SmAxisKit.o: nodekits/SmAxisKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmAxisKit.o -MD -MP -MF "$(DEPDIR)/SmAxisKit.Tpo" -c -o SmAxisKit.o `test -f 'nodekits/SmAxisKit.cpp' || echo '$(srcdir)/'`nodekits/SmAxisKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmAxisKit.Tpo" "$(DEPDIR)/SmAxisKit.Po"; else rm -f "$(DEPDIR)/SmAxisKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmAxisKit.cpp' object='SmAxisKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmAxisKit.Po' tmpdepfile='$(DEPDIR)/SmAxisKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmAxisKit.o `test -f 'nodekits/SmAxisKit.cpp' || echo '$(srcdir)/'`nodekits/SmAxisKit.cpp

SmAxisKit.obj: nodekits/SmAxisKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmAxisKit.obj -MD -MP -MF "$(DEPDIR)/SmAxisKit.Tpo" -c -o SmAxisKit.obj `if test -f 'nodekits/SmAxisKit.cpp'; then $(CYGPATH_W) 'nodekits/SmAxisKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmAxisKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmAxisKit.Tpo" "$(DEPDIR)/SmAxisKit.Po"; else rm -f "$(DEPDIR)/SmAxisKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmAxisKit.cpp' object='SmAxisKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmAxisKit.Po' tmpdepfile='$(DEPDIR)/SmAxisKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmAxisKit.obj `if test -f 'nodekits/SmAxisKit.cpp'; then $(CYGPATH_W) 'nodekits/SmAxisKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmAxisKit.cpp'; fi`

SmAxisKit.lo: nodekits/SmAxisKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmAxisKit.lo -MD -MP -MF "$(DEPDIR)/SmAxisKit.Tpo" -c -o SmAxisKit.lo `test -f 'nodekits/SmAxisKit.cpp' || echo '$(srcdir)/'`nodekits/SmAxisKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmAxisKit.Tpo" "$(DEPDIR)/SmAxisKit.Plo"; else rm -f "$(DEPDIR)/SmAxisKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmAxisKit.cpp' object='SmAxisKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmAxisKit.Plo' tmpdepfile='$(DEPDIR)/SmAxisKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmAxisKit.lo `test -f 'nodekits/SmAxisKit.cpp' || echo '$(srcdir)/'`nodekits/SmAxisKit.cpp

SmCameraControlKit.o: nodekits/SmCameraControlKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmCameraControlKit.o -MD -MP -MF "$(DEPDIR)/SmCameraControlKit.Tpo" -c -o SmCameraControlKit.o `test -f 'nodekits/SmCameraControlKit.cpp' || echo '$(srcdir)/'`nodekits/SmCameraControlKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmCameraControlKit.Tpo" "$(DEPDIR)/SmCameraControlKit.Po"; else rm -f "$(DEPDIR)/SmCameraControlKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmCameraControlKit.cpp' object='SmCameraControlKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmCameraControlKit.Po' tmpdepfile='$(DEPDIR)/SmCameraControlKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmCameraControlKit.o `test -f 'nodekits/SmCameraControlKit.cpp' || echo '$(srcdir)/'`nodekits/SmCameraControlKit.cpp

SmCameraControlKit.obj: nodekits/SmCameraControlKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmCameraControlKit.obj -MD -MP -MF "$(DEPDIR)/SmCameraControlKit.Tpo" -c -o SmCameraControlKit.obj `if test -f 'nodekits/SmCameraControlKit.cpp'; then $(CYGPATH_W) 'nodekits/SmCameraControlKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmCameraControlKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmCameraControlKit.Tpo" "$(DEPDIR)/SmCameraControlKit.Po"; else rm -f "$(DEPDIR)/SmCameraControlKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmCameraControlKit.cpp' object='SmCameraControlKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmCameraControlKit.Po' tmpdepfile='$(DEPDIR)/SmCameraControlKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmCameraControlKit.obj `if test -f 'nodekits/SmCameraControlKit.cpp'; then $(CYGPATH_W) 'nodekits/SmCameraControlKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmCameraControlKit.cpp'; fi`

SmCameraControlKit.lo: nodekits/SmCameraControlKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmCameraControlKit.lo -MD -MP -MF "$(DEPDIR)/SmCameraControlKit.Tpo" -c -o SmCameraControlKit.lo `test -f 'nodekits/SmCameraControlKit.cpp' || echo '$(srcdir)/'`nodekits/SmCameraControlKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmCameraControlKit.Tpo" "$(DEPDIR)/SmCameraControlKit.Plo"; else rm -f "$(DEPDIR)/SmCameraControlKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmCameraControlKit.cpp' object='SmCameraControlKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmCameraControlKit.Plo' tmpdepfile='$(DEPDIR)/SmCameraControlKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmCameraControlKit.lo `test -f 'nodekits/SmCameraControlKit.cpp' || echo '$(srcdir)/'`nodekits/SmCameraControlKit.cpp

SmDynamicObjectKit.o: nodekits/SmDynamicObjectKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmDynamicObjectKit.o -MD -MP -MF "$(DEPDIR)/SmDynamicObjectKit.Tpo" -c -o SmDynamicObjectKit.o `test -f 'nodekits/SmDynamicObjectKit.cpp' || echo '$(srcdir)/'`nodekits/SmDynamicObjectKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmDynamicObjectKit.Tpo" "$(DEPDIR)/SmDynamicObjectKit.Po"; else rm -f "$(DEPDIR)/SmDynamicObjectKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmDynamicObjectKit.cpp' object='SmDynamicObjectKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmDynamicObjectKit.Po' tmpdepfile='$(DEPDIR)/SmDynamicObjectKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmDynamicObjectKit.o `test -f 'nodekits/SmDynamicObjectKit.cpp' || echo '$(srcdir)/'`nodekits/SmDynamicObjectKit.cpp

SmDynamicObjectKit.obj: nodekits/SmDynamicObjectKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmDynamicObjectKit.obj -MD -MP -MF "$(DEPDIR)/SmDynamicObjectKit.Tpo" -c -o SmDynamicObjectKit.obj `if test -f 'nodekits/SmDynamicObjectKit.cpp'; then $(CYGPATH_W) 'nodekits/SmDynamicObjectKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmDynamicObjectKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmDynamicObjectKit.Tpo" "$(DEPDIR)/SmDynamicObjectKit.Po"; else rm -f "$(DEPDIR)/SmDynamicObjectKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmDynamicObjectKit.cpp' object='SmDynamicObjectKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmDynamicObjectKit.Po' tmpdepfile='$(DEPDIR)/SmDynamicObjectKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmDynamicObjectKit.obj `if test -f 'nodekits/SmDynamicObjectKit.cpp'; then $(CYGPATH_W) 'nodekits/SmDynamicObjectKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmDynamicObjectKit.cpp'; fi`

SmDynamicObjectKit.lo: nodekits/SmDynamicObjectKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmDynamicObjectKit.lo -MD -MP -MF "$(DEPDIR)/SmDynamicObjectKit.Tpo" -c -o SmDynamicObjectKit.lo `test -f 'nodekits/SmDynamicObjectKit.cpp' || echo '$(srcdir)/'`nodekits/SmDynamicObjectKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmDynamicObjectKit.Tpo" "$(DEPDIR)/SmDynamicObjectKit.Plo"; else rm -f "$(DEPDIR)/SmDynamicObjectKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmDynamicObjectKit.cpp' object='SmDynamicObjectKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmDynamicObjectKit.Plo' tmpdepfile='$(DEPDIR)/SmDynamicObjectKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmDynamicObjectKit.lo `test -f 'nodekits/SmDynamicObjectKit.cpp' || echo '$(srcdir)/'`nodekits/SmDynamicObjectKit.cpp

SmPieChart.o: nodekits/SmPieChart.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmPieChart.o -MD -MP -MF "$(DEPDIR)/SmPieChart.Tpo" -c -o SmPieChart.o `test -f 'nodekits/SmPieChart.cpp' || echo '$(srcdir)/'`nodekits/SmPieChart.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmPieChart.Tpo" "$(DEPDIR)/SmPieChart.Po"; else rm -f "$(DEPDIR)/SmPieChart.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmPieChart.cpp' object='SmPieChart.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmPieChart.Po' tmpdepfile='$(DEPDIR)/SmPieChart.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmPieChart.o `test -f 'nodekits/SmPieChart.cpp' || echo '$(srcdir)/'`nodekits/SmPieChart.cpp

SmPieChart.obj: nodekits/SmPieChart.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmPieChart.obj -MD -MP -MF "$(DEPDIR)/SmPieChart.Tpo" -c -o SmPieChart.obj `if test -f 'nodekits/SmPieChart.cpp'; then $(CYGPATH_W) 'nodekits/SmPieChart.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmPieChart.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmPieChart.Tpo" "$(DEPDIR)/SmPieChart.Po"; else rm -f "$(DEPDIR)/SmPieChart.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmPieChart.cpp' object='SmPieChart.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmPieChart.Po' tmpdepfile='$(DEPDIR)/SmPieChart.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmPieChart.obj `if test -f 'nodekits/SmPieChart.cpp'; then $(CYGPATH_W) 'nodekits/SmPieChart.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmPieChart.cpp'; fi`

SmPieChart.lo: nodekits/SmPieChart.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmPieChart.lo -MD -MP -MF "$(DEPDIR)/SmPieChart.Tpo" -c -o SmPieChart.lo `test -f 'nodekits/SmPieChart.cpp' || echo '$(srcdir)/'`nodekits/SmPieChart.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmPieChart.Tpo" "$(DEPDIR)/SmPieChart.Plo"; else rm -f "$(DEPDIR)/SmPieChart.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmPieChart.cpp' object='SmPieChart.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmPieChart.Plo' tmpdepfile='$(DEPDIR)/SmPieChart.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmPieChart.lo `test -f 'nodekits/SmPieChart.cpp' || echo '$(srcdir)/'`nodekits/SmPieChart.cpp

SmTooltipKit.o: nodekits/SmTooltipKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTooltipKit.o -MD -MP -MF "$(DEPDIR)/SmTooltipKit.Tpo" -c -o SmTooltipKit.o `test -f 'nodekits/SmTooltipKit.cpp' || echo '$(srcdir)/'`nodekits/SmTooltipKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTooltipKit.Tpo" "$(DEPDIR)/SmTooltipKit.Po"; else rm -f "$(DEPDIR)/SmTooltipKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmTooltipKit.cpp' object='SmTooltipKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTooltipKit.Po' tmpdepfile='$(DEPDIR)/SmTooltipKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTooltipKit.o `test -f 'nodekits/SmTooltipKit.cpp' || echo '$(srcdir)/'`nodekits/SmTooltipKit.cpp

SmTooltipKit.obj: nodekits/SmTooltipKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTooltipKit.obj -MD -MP -MF "$(DEPDIR)/SmTooltipKit.Tpo" -c -o SmTooltipKit.obj `if test -f 'nodekits/SmTooltipKit.cpp'; then $(CYGPATH_W) 'nodekits/SmTooltipKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmTooltipKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTooltipKit.Tpo" "$(DEPDIR)/SmTooltipKit.Po"; else rm -f "$(DEPDIR)/SmTooltipKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmTooltipKit.cpp' object='SmTooltipKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTooltipKit.Po' tmpdepfile='$(DEPDIR)/SmTooltipKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTooltipKit.obj `if test -f 'nodekits/SmTooltipKit.cpp'; then $(CYGPATH_W) 'nodekits/SmTooltipKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmTooltipKit.cpp'; fi`

SmTooltipKit.lo: nodekits/SmTooltipKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTooltipKit.lo -MD -MP -MF "$(DEPDIR)/SmTooltipKit.Tpo" -c -o SmTooltipKit.lo `test -f 'nodekits/SmTooltipKit.cpp' || echo '$(srcdir)/'`nodekits/SmTooltipKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTooltipKit.Tpo" "$(DEPDIR)/SmTooltipKit.Plo"; else rm -f "$(DEPDIR)/SmTooltipKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmTooltipKit.cpp' object='SmTooltipKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTooltipKit.Plo' tmpdepfile='$(DEPDIR)/SmTooltipKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTooltipKit.lo `test -f 'nodekits/SmTooltipKit.cpp' || echo '$(srcdir)/'`nodekits/SmTooltipKit.cpp

SmTrackPointKit.o: nodekits/SmTrackPointKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTrackPointKit.o -MD -MP -MF "$(DEPDIR)/SmTrackPointKit.Tpo" -c -o SmTrackPointKit.o `test -f 'nodekits/SmTrackPointKit.cpp' || echo '$(srcdir)/'`nodekits/SmTrackPointKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTrackPointKit.Tpo" "$(DEPDIR)/SmTrackPointKit.Po"; else rm -f "$(DEPDIR)/SmTrackPointKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmTrackPointKit.cpp' object='SmTrackPointKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTrackPointKit.Po' tmpdepfile='$(DEPDIR)/SmTrackPointKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTrackPointKit.o `test -f 'nodekits/SmTrackPointKit.cpp' || echo '$(srcdir)/'`nodekits/SmTrackPointKit.cpp

SmTrackPointKit.obj: nodekits/SmTrackPointKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTrackPointKit.obj -MD -MP -MF "$(DEPDIR)/SmTrackPointKit.Tpo" -c -o SmTrackPointKit.obj `if test -f 'nodekits/SmTrackPointKit.cpp'; then $(CYGPATH_W) 'nodekits/SmTrackPointKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmTrackPointKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTrackPointKit.Tpo" "$(DEPDIR)/SmTrackPointKit.Po"; else rm -f "$(DEPDIR)/SmTrackPointKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmTrackPointKit.cpp' object='SmTrackPointKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTrackPointKit.Po' tmpdepfile='$(DEPDIR)/SmTrackPointKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTrackPointKit.obj `if test -f 'nodekits/SmTrackPointKit.cpp'; then $(CYGPATH_W) 'nodekits/SmTrackPointKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmTrackPointKit.cpp'; fi`

SmTrackPointKit.lo: nodekits/SmTrackPointKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTrackPointKit.lo -MD -MP -MF "$(DEPDIR)/SmTrackPointKit.Tpo" -c -o SmTrackPointKit.lo `test -f 'nodekits/SmTrackPointKit.cpp' || echo '$(srcdir)/'`nodekits/SmTrackPointKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTrackPointKit.Tpo" "$(DEPDIR)/SmTrackPointKit.Plo"; else rm -f "$(DEPDIR)/SmTrackPointKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmTrackPointKit.cpp' object='SmTrackPointKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTrackPointKit.Plo' tmpdepfile='$(DEPDIR)/SmTrackPointKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTrackPointKit.lo `test -f 'nodekits/SmTrackPointKit.cpp' || echo '$(srcdir)/'`nodekits/SmTrackPointKit.cpp

SmWellLogKit.o: nodekits/SmWellLogKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmWellLogKit.o -MD -MP -MF "$(DEPDIR)/SmWellLogKit.Tpo" -c -o SmWellLogKit.o `test -f 'nodekits/SmWellLogKit.cpp' || echo '$(srcdir)/'`nodekits/SmWellLogKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmWellLogKit.Tpo" "$(DEPDIR)/SmWellLogKit.Po"; else rm -f "$(DEPDIR)/SmWellLogKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmWellLogKit.cpp' object='SmWellLogKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmWellLogKit.Po' tmpdepfile='$(DEPDIR)/SmWellLogKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmWellLogKit.o `test -f 'nodekits/SmWellLogKit.cpp' || echo '$(srcdir)/'`nodekits/SmWellLogKit.cpp

SmWellLogKit.obj: nodekits/SmWellLogKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmWellLogKit.obj -MD -MP -MF "$(DEPDIR)/SmWellLogKit.Tpo" -c -o SmWellLogKit.obj `if test -f 'nodekits/SmWellLogKit.cpp'; then $(CYGPATH_W) 'nodekits/SmWellLogKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmWellLogKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmWellLogKit.Tpo" "$(DEPDIR)/SmWellLogKit.Po"; else rm -f "$(DEPDIR)/SmWellLogKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmWellLogKit.cpp' object='SmWellLogKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmWellLogKit.Po' tmpdepfile='$(DEPDIR)/SmWellLogKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmWellLogKit.obj `if test -f 'nodekits/SmWellLogKit.cpp'; then $(CYGPATH_W) 'nodekits/SmWellLogKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SmWellLogKit.cpp'; fi`

SmWellLogKit.lo: nodekits/SmWellLogKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmWellLogKit.lo -MD -MP -MF "$(DEPDIR)/SmWellLogKit.Tpo" -c -o SmWellLogKit.lo `test -f 'nodekits/SmWellLogKit.cpp' || echo '$(srcdir)/'`nodekits/SmWellLogKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmWellLogKit.Tpo" "$(DEPDIR)/SmWellLogKit.Plo"; else rm -f "$(DEPDIR)/SmWellLogKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SmWellLogKit.cpp' object='SmWellLogKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmWellLogKit.Plo' tmpdepfile='$(DEPDIR)/SmWellLogKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmWellLogKit.lo `test -f 'nodekits/SmWellLogKit.cpp' || echo '$(srcdir)/'`nodekits/SmWellLogKit.cpp

SoCameraPathEditKit.o: nodekits/SoCameraPathEditKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoCameraPathEditKit.o -MD -MP -MF "$(DEPDIR)/SoCameraPathEditKit.Tpo" -c -o SoCameraPathEditKit.o `test -f 'nodekits/SoCameraPathEditKit.cpp' || echo '$(srcdir)/'`nodekits/SoCameraPathEditKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoCameraPathEditKit.Tpo" "$(DEPDIR)/SoCameraPathEditKit.Po"; else rm -f "$(DEPDIR)/SoCameraPathEditKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SoCameraPathEditKit.cpp' object='SoCameraPathEditKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoCameraPathEditKit.Po' tmpdepfile='$(DEPDIR)/SoCameraPathEditKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoCameraPathEditKit.o `test -f 'nodekits/SoCameraPathEditKit.cpp' || echo '$(srcdir)/'`nodekits/SoCameraPathEditKit.cpp

SoCameraPathEditKit.obj: nodekits/SoCameraPathEditKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoCameraPathEditKit.obj -MD -MP -MF "$(DEPDIR)/SoCameraPathEditKit.Tpo" -c -o SoCameraPathEditKit.obj `if test -f 'nodekits/SoCameraPathEditKit.cpp'; then $(CYGPATH_W) 'nodekits/SoCameraPathEditKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SoCameraPathEditKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoCameraPathEditKit.Tpo" "$(DEPDIR)/SoCameraPathEditKit.Po"; else rm -f "$(DEPDIR)/SoCameraPathEditKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SoCameraPathEditKit.cpp' object='SoCameraPathEditKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoCameraPathEditKit.Po' tmpdepfile='$(DEPDIR)/SoCameraPathEditKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoCameraPathEditKit.obj `if test -f 'nodekits/SoCameraPathEditKit.cpp'; then $(CYGPATH_W) 'nodekits/SoCameraPathEditKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SoCameraPathEditKit.cpp'; fi`

SoCameraPathEditKit.lo: nodekits/SoCameraPathEditKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoCameraPathEditKit.lo -MD -MP -MF "$(DEPDIR)/SoCameraPathEditKit.Tpo" -c -o SoCameraPathEditKit.lo `test -f 'nodekits/SoCameraPathEditKit.cpp' || echo '$(srcdir)/'`nodekits/SoCameraPathEditKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoCameraPathEditKit.Tpo" "$(DEPDIR)/SoCameraPathEditKit.Plo"; else rm -f "$(DEPDIR)/SoCameraPathEditKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SoCameraPathEditKit.cpp' object='SoCameraPathEditKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoCameraPathEditKit.Plo' tmpdepfile='$(DEPDIR)/SoCameraPathEditKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoCameraPathEditKit.lo `test -f 'nodekits/SoCameraPathEditKit.cpp' || echo '$(srcdir)/'`nodekits/SoCameraPathEditKit.cpp

SoFEMKit.o: nodekits/SoFEMKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoFEMKit.o -MD -MP -MF "$(DEPDIR)/SoFEMKit.Tpo" -c -o SoFEMKit.o `test -f 'nodekits/SoFEMKit.cpp' || echo '$(srcdir)/'`nodekits/SoFEMKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoFEMKit.Tpo" "$(DEPDIR)/SoFEMKit.Po"; else rm -f "$(DEPDIR)/SoFEMKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SoFEMKit.cpp' object='SoFEMKit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoFEMKit.Po' tmpdepfile='$(DEPDIR)/SoFEMKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoFEMKit.o `test -f 'nodekits/SoFEMKit.cpp' || echo '$(srcdir)/'`nodekits/SoFEMKit.cpp

SoFEMKit.obj: nodekits/SoFEMKit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoFEMKit.obj -MD -MP -MF "$(DEPDIR)/SoFEMKit.Tpo" -c -o SoFEMKit.obj `if test -f 'nodekits/SoFEMKit.cpp'; then $(CYGPATH_W) 'nodekits/SoFEMKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SoFEMKit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoFEMKit.Tpo" "$(DEPDIR)/SoFEMKit.Po"; else rm -f "$(DEPDIR)/SoFEMKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SoFEMKit.cpp' object='SoFEMKit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoFEMKit.Po' tmpdepfile='$(DEPDIR)/SoFEMKit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoFEMKit.obj `if test -f 'nodekits/SoFEMKit.cpp'; then $(CYGPATH_W) 'nodekits/SoFEMKit.cpp'; else $(CYGPATH_W) '$(srcdir)/nodekits/SoFEMKit.cpp'; fi`

SoFEMKit.lo: nodekits/SoFEMKit.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoFEMKit.lo -MD -MP -MF "$(DEPDIR)/SoFEMKit.Tpo" -c -o SoFEMKit.lo `test -f 'nodekits/SoFEMKit.cpp' || echo '$(srcdir)/'`nodekits/SoFEMKit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoFEMKit.Tpo" "$(DEPDIR)/SoFEMKit.Plo"; else rm -f "$(DEPDIR)/SoFEMKit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodekits/SoFEMKit.cpp' object='SoFEMKit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoFEMKit.Plo' tmpdepfile='$(DEPDIR)/SoFEMKit.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoFEMKit.lo `test -f 'nodekits/SoFEMKit.cpp' || echo '$(srcdir)/'`nodekits/SoFEMKit.cpp

AutoFile.o: nodes/AutoFile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AutoFile.o -MD -MP -MF "$(DEPDIR)/AutoFile.Tpo" -c -o AutoFile.o `test -f 'nodes/AutoFile.cpp' || echo '$(srcdir)/'`nodes/AutoFile.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/AutoFile.Tpo" "$(DEPDIR)/AutoFile.Po"; else rm -f "$(DEPDIR)/AutoFile.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/AutoFile.cpp' object='AutoFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/AutoFile.Po' tmpdepfile='$(DEPDIR)/AutoFile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AutoFile.o `test -f 'nodes/AutoFile.cpp' || echo '$(srcdir)/'`nodes/AutoFile.cpp

AutoFile.obj: nodes/AutoFile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AutoFile.obj -MD -MP -MF "$(DEPDIR)/AutoFile.Tpo" -c -o AutoFile.obj `if test -f 'nodes/AutoFile.cpp'; then $(CYGPATH_W) 'nodes/AutoFile.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/AutoFile.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/AutoFile.Tpo" "$(DEPDIR)/AutoFile.Po"; else rm -f "$(DEPDIR)/AutoFile.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/AutoFile.cpp' object='AutoFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/AutoFile.Po' tmpdepfile='$(DEPDIR)/AutoFile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AutoFile.obj `if test -f 'nodes/AutoFile.cpp'; then $(CYGPATH_W) 'nodes/AutoFile.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/AutoFile.cpp'; fi`

AutoFile.lo: nodes/AutoFile.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AutoFile.lo -MD -MP -MF "$(DEPDIR)/AutoFile.Tpo" -c -o AutoFile.lo `test -f 'nodes/AutoFile.cpp' || echo '$(srcdir)/'`nodes/AutoFile.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/AutoFile.Tpo" "$(DEPDIR)/AutoFile.Plo"; else rm -f "$(DEPDIR)/AutoFile.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/AutoFile.cpp' object='AutoFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/AutoFile.Plo' tmpdepfile='$(DEPDIR)/AutoFile.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AutoFile.lo `test -f 'nodes/AutoFile.cpp' || echo '$(srcdir)/'`nodes/AutoFile.cpp

Coinboard.o: nodes/Coinboard.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Coinboard.o -MD -MP -MF "$(DEPDIR)/Coinboard.Tpo" -c -o Coinboard.o `test -f 'nodes/Coinboard.cpp' || echo '$(srcdir)/'`nodes/Coinboard.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Coinboard.Tpo" "$(DEPDIR)/Coinboard.Po"; else rm -f "$(DEPDIR)/Coinboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/Coinboard.cpp' object='Coinboard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Coinboard.Po' tmpdepfile='$(DEPDIR)/Coinboard.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Coinboard.o `test -f 'nodes/Coinboard.cpp' || echo '$(srcdir)/'`nodes/Coinboard.cpp

Coinboard.obj: nodes/Coinboard.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Coinboard.obj -MD -MP -MF "$(DEPDIR)/Coinboard.Tpo" -c -o Coinboard.obj `if test -f 'nodes/Coinboard.cpp'; then $(CYGPATH_W) 'nodes/Coinboard.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/Coinboard.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Coinboard.Tpo" "$(DEPDIR)/Coinboard.Po"; else rm -f "$(DEPDIR)/Coinboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/Coinboard.cpp' object='Coinboard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Coinboard.Po' tmpdepfile='$(DEPDIR)/Coinboard.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Coinboard.obj `if test -f 'nodes/Coinboard.cpp'; then $(CYGPATH_W) 'nodes/Coinboard.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/Coinboard.cpp'; fi`

Coinboard.lo: nodes/Coinboard.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Coinboard.lo -MD -MP -MF "$(DEPDIR)/Coinboard.Tpo" -c -o Coinboard.lo `test -f 'nodes/Coinboard.cpp' || echo '$(srcdir)/'`nodes/Coinboard.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Coinboard.Tpo" "$(DEPDIR)/Coinboard.Plo"; else rm -f "$(DEPDIR)/Coinboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/Coinboard.cpp' object='Coinboard.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Coinboard.Plo' tmpdepfile='$(DEPDIR)/Coinboard.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Coinboard.lo `test -f 'nodes/Coinboard.cpp' || echo '$(srcdir)/'`nodes/Coinboard.cpp

CoinEnvironment.o: nodes/CoinEnvironment.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CoinEnvironment.o -MD -MP -MF "$(DEPDIR)/CoinEnvironment.Tpo" -c -o CoinEnvironment.o `test -f 'nodes/CoinEnvironment.cpp' || echo '$(srcdir)/'`nodes/CoinEnvironment.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/CoinEnvironment.Tpo" "$(DEPDIR)/CoinEnvironment.Po"; else rm -f "$(DEPDIR)/CoinEnvironment.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/CoinEnvironment.cpp' object='CoinEnvironment.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/CoinEnvironment.Po' tmpdepfile='$(DEPDIR)/CoinEnvironment.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CoinEnvironment.o `test -f 'nodes/CoinEnvironment.cpp' || echo '$(srcdir)/'`nodes/CoinEnvironment.cpp

CoinEnvironment.obj: nodes/CoinEnvironment.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CoinEnvironment.obj -MD -MP -MF "$(DEPDIR)/CoinEnvironment.Tpo" -c -o CoinEnvironment.obj `if test -f 'nodes/CoinEnvironment.cpp'; then $(CYGPATH_W) 'nodes/CoinEnvironment.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/CoinEnvironment.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/CoinEnvironment.Tpo" "$(DEPDIR)/CoinEnvironment.Po"; else rm -f "$(DEPDIR)/CoinEnvironment.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/CoinEnvironment.cpp' object='CoinEnvironment.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/CoinEnvironment.Po' tmpdepfile='$(DEPDIR)/CoinEnvironment.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CoinEnvironment.obj `if test -f 'nodes/CoinEnvironment.cpp'; then $(CYGPATH_W) 'nodes/CoinEnvironment.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/CoinEnvironment.cpp'; fi`

CoinEnvironment.lo: nodes/CoinEnvironment.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CoinEnvironment.lo -MD -MP -MF "$(DEPDIR)/CoinEnvironment.Tpo" -c -o CoinEnvironment.lo `test -f 'nodes/CoinEnvironment.cpp' || echo '$(srcdir)/'`nodes/CoinEnvironment.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/CoinEnvironment.Tpo" "$(DEPDIR)/CoinEnvironment.Plo"; else rm -f "$(DEPDIR)/CoinEnvironment.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/CoinEnvironment.cpp' object='CoinEnvironment.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/CoinEnvironment.Plo' tmpdepfile='$(DEPDIR)/CoinEnvironment.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CoinEnvironment.lo `test -f 'nodes/CoinEnvironment.cpp' || echo '$(srcdir)/'`nodes/CoinEnvironment.cpp

InterleavedArraysShape.o: nodes/InterleavedArraysShape.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InterleavedArraysShape.o -MD -MP -MF "$(DEPDIR)/InterleavedArraysShape.Tpo" -c -o InterleavedArraysShape.o `test -f 'nodes/InterleavedArraysShape.cpp' || echo '$(srcdir)/'`nodes/InterleavedArraysShape.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/InterleavedArraysShape.Tpo" "$(DEPDIR)/InterleavedArraysShape.Po"; else rm -f "$(DEPDIR)/InterleavedArraysShape.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/InterleavedArraysShape.cpp' object='InterleavedArraysShape.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/InterleavedArraysShape.Po' tmpdepfile='$(DEPDIR)/InterleavedArraysShape.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InterleavedArraysShape.o `test -f 'nodes/InterleavedArraysShape.cpp' || echo '$(srcdir)/'`nodes/InterleavedArraysShape.cpp

InterleavedArraysShape.obj: nodes/InterleavedArraysShape.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InterleavedArraysShape.obj -MD -MP -MF "$(DEPDIR)/InterleavedArraysShape.Tpo" -c -o InterleavedArraysShape.obj `if test -f 'nodes/InterleavedArraysShape.cpp'; then $(CYGPATH_W) 'nodes/InterleavedArraysShape.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/InterleavedArraysShape.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/InterleavedArraysShape.Tpo" "$(DEPDIR)/InterleavedArraysShape.Po"; else rm -f "$(DEPDIR)/InterleavedArraysShape.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/InterleavedArraysShape.cpp' object='InterleavedArraysShape.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/InterleavedArraysShape.Po' tmpdepfile='$(DEPDIR)/InterleavedArraysShape.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InterleavedArraysShape.obj `if test -f 'nodes/InterleavedArraysShape.cpp'; then $(CYGPATH_W) 'nodes/InterleavedArraysShape.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/InterleavedArraysShape.cpp'; fi`

InterleavedArraysShape.lo: nodes/InterleavedArraysShape.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InterleavedArraysShape.lo -MD -MP -MF "$(DEPDIR)/InterleavedArraysShape.Tpo" -c -o InterleavedArraysShape.lo `test -f 'nodes/InterleavedArraysShape.cpp' || echo '$(srcdir)/'`nodes/InterleavedArraysShape.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/InterleavedArraysShape.Tpo" "$(DEPDIR)/InterleavedArraysShape.Plo"; else rm -f "$(DEPDIR)/InterleavedArraysShape.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/InterleavedArraysShape.cpp' object='InterleavedArraysShape.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/InterleavedArraysShape.Plo' tmpdepfile='$(DEPDIR)/InterleavedArraysShape.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InterleavedArraysShape.lo `test -f 'nodes/InterleavedArraysShape.cpp' || echo '$(srcdir)/'`nodes/InterleavedArraysShape.cpp

PickCallback.o: nodes/PickCallback.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PickCallback.o -MD -MP -MF "$(DEPDIR)/PickCallback.Tpo" -c -o PickCallback.o `test -f 'nodes/PickCallback.cpp' || echo '$(srcdir)/'`nodes/PickCallback.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/PickCallback.Tpo" "$(DEPDIR)/PickCallback.Po"; else rm -f "$(DEPDIR)/PickCallback.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/PickCallback.cpp' object='PickCallback.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/PickCallback.Po' tmpdepfile='$(DEPDIR)/PickCallback.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PickCallback.o `test -f 'nodes/PickCallback.cpp' || echo '$(srcdir)/'`nodes/PickCallback.cpp

PickCallback.obj: nodes/PickCallback.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PickCallback.obj -MD -MP -MF "$(DEPDIR)/PickCallback.Tpo" -c -o PickCallback.obj `if test -f 'nodes/PickCallback.cpp'; then $(CYGPATH_W) 'nodes/PickCallback.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/PickCallback.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/PickCallback.Tpo" "$(DEPDIR)/PickCallback.Po"; else rm -f "$(DEPDIR)/PickCallback.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/PickCallback.cpp' object='PickCallback.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/PickCallback.Po' tmpdepfile='$(DEPDIR)/PickCallback.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PickCallback.obj `if test -f 'nodes/PickCallback.cpp'; then $(CYGPATH_W) 'nodes/PickCallback.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/PickCallback.cpp'; fi`

PickCallback.lo: nodes/PickCallback.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PickCallback.lo -MD -MP -MF "$(DEPDIR)/PickCallback.Tpo" -c -o PickCallback.lo `test -f 'nodes/PickCallback.cpp' || echo '$(srcdir)/'`nodes/PickCallback.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/PickCallback.Tpo" "$(DEPDIR)/PickCallback.Plo"; else rm -f "$(DEPDIR)/PickCallback.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/PickCallback.cpp' object='PickCallback.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/PickCallback.Plo' tmpdepfile='$(DEPDIR)/PickCallback.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PickCallback.lo `test -f 'nodes/PickCallback.cpp' || echo '$(srcdir)/'`nodes/PickCallback.cpp

PickSwitch.o: nodes/PickSwitch.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PickSwitch.o -MD -MP -MF "$(DEPDIR)/PickSwitch.Tpo" -c -o PickSwitch.o `test -f 'nodes/PickSwitch.cpp' || echo '$(srcdir)/'`nodes/PickSwitch.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/PickSwitch.Tpo" "$(DEPDIR)/PickSwitch.Po"; else rm -f "$(DEPDIR)/PickSwitch.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/PickSwitch.cpp' object='PickSwitch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/PickSwitch.Po' tmpdepfile='$(DEPDIR)/PickSwitch.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PickSwitch.o `test -f 'nodes/PickSwitch.cpp' || echo '$(srcdir)/'`nodes/PickSwitch.cpp

PickSwitch.obj: nodes/PickSwitch.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PickSwitch.obj -MD -MP -MF "$(DEPDIR)/PickSwitch.Tpo" -c -o PickSwitch.obj `if test -f 'nodes/PickSwitch.cpp'; then $(CYGPATH_W) 'nodes/PickSwitch.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/PickSwitch.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/PickSwitch.Tpo" "$(DEPDIR)/PickSwitch.Po"; else rm -f "$(DEPDIR)/PickSwitch.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/PickSwitch.cpp' object='PickSwitch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/PickSwitch.Po' tmpdepfile='$(DEPDIR)/PickSwitch.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PickSwitch.obj `if test -f 'nodes/PickSwitch.cpp'; then $(CYGPATH_W) 'nodes/PickSwitch.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/PickSwitch.cpp'; fi`

PickSwitch.lo: nodes/PickSwitch.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PickSwitch.lo -MD -MP -MF "$(DEPDIR)/PickSwitch.Tpo" -c -o PickSwitch.lo `test -f 'nodes/PickSwitch.cpp' || echo '$(srcdir)/'`nodes/PickSwitch.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/PickSwitch.Tpo" "$(DEPDIR)/PickSwitch.Plo"; else rm -f "$(DEPDIR)/PickSwitch.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/PickSwitch.cpp' object='PickSwitch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/PickSwitch.Plo' tmpdepfile='$(DEPDIR)/PickSwitch.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PickSwitch.lo `test -f 'nodes/PickSwitch.cpp' || echo '$(srcdir)/'`nodes/PickSwitch.cpp

ShapeScale.o: nodes/ShapeScale.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ShapeScale.o -MD -MP -MF "$(DEPDIR)/ShapeScale.Tpo" -c -o ShapeScale.o `test -f 'nodes/ShapeScale.cpp' || echo '$(srcdir)/'`nodes/ShapeScale.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ShapeScale.Tpo" "$(DEPDIR)/ShapeScale.Po"; else rm -f "$(DEPDIR)/ShapeScale.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/ShapeScale.cpp' object='ShapeScale.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ShapeScale.Po' tmpdepfile='$(DEPDIR)/ShapeScale.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ShapeScale.o `test -f 'nodes/ShapeScale.cpp' || echo '$(srcdir)/'`nodes/ShapeScale.cpp

ShapeScale.obj: nodes/ShapeScale.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ShapeScale.obj -MD -MP -MF "$(DEPDIR)/ShapeScale.Tpo" -c -o ShapeScale.obj `if test -f 'nodes/ShapeScale.cpp'; then $(CYGPATH_W) 'nodes/ShapeScale.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/ShapeScale.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ShapeScale.Tpo" "$(DEPDIR)/ShapeScale.Po"; else rm -f "$(DEPDIR)/ShapeScale.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/ShapeScale.cpp' object='ShapeScale.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ShapeScale.Po' tmpdepfile='$(DEPDIR)/ShapeScale.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ShapeScale.obj `if test -f 'nodes/ShapeScale.cpp'; then $(CYGPATH_W) 'nodes/ShapeScale.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/ShapeScale.cpp'; fi`

ShapeScale.lo: nodes/ShapeScale.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ShapeScale.lo -MD -MP -MF "$(DEPDIR)/ShapeScale.Tpo" -c -o ShapeScale.lo `test -f 'nodes/ShapeScale.cpp' || echo '$(srcdir)/'`nodes/ShapeScale.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ShapeScale.Tpo" "$(DEPDIR)/ShapeScale.Plo"; else rm -f "$(DEPDIR)/ShapeScale.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/ShapeScale.cpp' object='ShapeScale.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ShapeScale.Plo' tmpdepfile='$(DEPDIR)/ShapeScale.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ShapeScale.lo `test -f 'nodes/ShapeScale.cpp' || echo '$(srcdir)/'`nodes/ShapeScale.cpp

SkyDome.o: nodes/SkyDome.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SkyDome.o -MD -MP -MF "$(DEPDIR)/SkyDome.Tpo" -c -o SkyDome.o `test -f 'nodes/SkyDome.cpp' || echo '$(srcdir)/'`nodes/SkyDome.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SkyDome.Tpo" "$(DEPDIR)/SkyDome.Po"; else rm -f "$(DEPDIR)/SkyDome.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SkyDome.cpp' object='SkyDome.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SkyDome.Po' tmpdepfile='$(DEPDIR)/SkyDome.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SkyDome.o `test -f 'nodes/SkyDome.cpp' || echo '$(srcdir)/'`nodes/SkyDome.cpp

SkyDome.obj: nodes/SkyDome.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SkyDome.obj -MD -MP -MF "$(DEPDIR)/SkyDome.Tpo" -c -o SkyDome.obj `if test -f 'nodes/SkyDome.cpp'; then $(CYGPATH_W) 'nodes/SkyDome.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SkyDome.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SkyDome.Tpo" "$(DEPDIR)/SkyDome.Po"; else rm -f "$(DEPDIR)/SkyDome.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SkyDome.cpp' object='SkyDome.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SkyDome.Po' tmpdepfile='$(DEPDIR)/SkyDome.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SkyDome.obj `if test -f 'nodes/SkyDome.cpp'; then $(CYGPATH_W) 'nodes/SkyDome.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SkyDome.cpp'; fi`

SkyDome.lo: nodes/SkyDome.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SkyDome.lo -MD -MP -MF "$(DEPDIR)/SkyDome.Tpo" -c -o SkyDome.lo `test -f 'nodes/SkyDome.cpp' || echo '$(srcdir)/'`nodes/SkyDome.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SkyDome.Tpo" "$(DEPDIR)/SkyDome.Plo"; else rm -f "$(DEPDIR)/SkyDome.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SkyDome.cpp' object='SkyDome.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SkyDome.Plo' tmpdepfile='$(DEPDIR)/SkyDome.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SkyDome.lo `test -f 'nodes/SkyDome.cpp' || echo '$(srcdir)/'`nodes/SkyDome.cpp

SmBillboardClipPlane.o: nodes/SmBillboardClipPlane.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmBillboardClipPlane.o -MD -MP -MF "$(DEPDIR)/SmBillboardClipPlane.Tpo" -c -o SmBillboardClipPlane.o `test -f 'nodes/SmBillboardClipPlane.cpp' || echo '$(srcdir)/'`nodes/SmBillboardClipPlane.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmBillboardClipPlane.Tpo" "$(DEPDIR)/SmBillboardClipPlane.Po"; else rm -f "$(DEPDIR)/SmBillboardClipPlane.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmBillboardClipPlane.cpp' object='SmBillboardClipPlane.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmBillboardClipPlane.Po' tmpdepfile='$(DEPDIR)/SmBillboardClipPlane.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmBillboardClipPlane.o `test -f 'nodes/SmBillboardClipPlane.cpp' || echo '$(srcdir)/'`nodes/SmBillboardClipPlane.cpp

SmBillboardClipPlane.obj: nodes/SmBillboardClipPlane.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmBillboardClipPlane.obj -MD -MP -MF "$(DEPDIR)/SmBillboardClipPlane.Tpo" -c -o SmBillboardClipPlane.obj `if test -f 'nodes/SmBillboardClipPlane.cpp'; then $(CYGPATH_W) 'nodes/SmBillboardClipPlane.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmBillboardClipPlane.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmBillboardClipPlane.Tpo" "$(DEPDIR)/SmBillboardClipPlane.Po"; else rm -f "$(DEPDIR)/SmBillboardClipPlane.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmBillboardClipPlane.cpp' object='SmBillboardClipPlane.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmBillboardClipPlane.Po' tmpdepfile='$(DEPDIR)/SmBillboardClipPlane.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmBillboardClipPlane.obj `if test -f 'nodes/SmBillboardClipPlane.cpp'; then $(CYGPATH_W) 'nodes/SmBillboardClipPlane.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmBillboardClipPlane.cpp'; fi`

SmBillboardClipPlane.lo: nodes/SmBillboardClipPlane.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmBillboardClipPlane.lo -MD -MP -MF "$(DEPDIR)/SmBillboardClipPlane.Tpo" -c -o SmBillboardClipPlane.lo `test -f 'nodes/SmBillboardClipPlane.cpp' || echo '$(srcdir)/'`nodes/SmBillboardClipPlane.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmBillboardClipPlane.Tpo" "$(DEPDIR)/SmBillboardClipPlane.Plo"; else rm -f "$(DEPDIR)/SmBillboardClipPlane.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmBillboardClipPlane.cpp' object='SmBillboardClipPlane.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmBillboardClipPlane.Plo' tmpdepfile='$(DEPDIR)/SmBillboardClipPlane.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmBillboardClipPlane.lo `test -f 'nodes/SmBillboardClipPlane.cpp' || echo '$(srcdir)/'`nodes/SmBillboardClipPlane.cpp

SmCoordinateSystem.o: nodes/SmCoordinateSystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmCoordinateSystem.o -MD -MP -MF "$(DEPDIR)/SmCoordinateSystem.Tpo" -c -o SmCoordinateSystem.o `test -f 'nodes/SmCoordinateSystem.cpp' || echo '$(srcdir)/'`nodes/SmCoordinateSystem.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmCoordinateSystem.Tpo" "$(DEPDIR)/SmCoordinateSystem.Po"; else rm -f "$(DEPDIR)/SmCoordinateSystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmCoordinateSystem.cpp' object='SmCoordinateSystem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmCoordinateSystem.Po' tmpdepfile='$(DEPDIR)/SmCoordinateSystem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmCoordinateSystem.o `test -f 'nodes/SmCoordinateSystem.cpp' || echo '$(srcdir)/'`nodes/SmCoordinateSystem.cpp

SmCoordinateSystem.obj: nodes/SmCoordinateSystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmCoordinateSystem.obj -MD -MP -MF "$(DEPDIR)/SmCoordinateSystem.Tpo" -c -o SmCoordinateSystem.obj `if test -f 'nodes/SmCoordinateSystem.cpp'; then $(CYGPATH_W) 'nodes/SmCoordinateSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmCoordinateSystem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmCoordinateSystem.Tpo" "$(DEPDIR)/SmCoordinateSystem.Po"; else rm -f "$(DEPDIR)/SmCoordinateSystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmCoordinateSystem.cpp' object='SmCoordinateSystem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmCoordinateSystem.Po' tmpdepfile='$(DEPDIR)/SmCoordinateSystem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmCoordinateSystem.obj `if test -f 'nodes/SmCoordinateSystem.cpp'; then $(CYGPATH_W) 'nodes/SmCoordinateSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmCoordinateSystem.cpp'; fi`

SmCoordinateSystem.lo: nodes/SmCoordinateSystem.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmCoordinateSystem.lo -MD -MP -MF "$(DEPDIR)/SmCoordinateSystem.Tpo" -c -o SmCoordinateSystem.lo `test -f 'nodes/SmCoordinateSystem.cpp' || echo '$(srcdir)/'`nodes/SmCoordinateSystem.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmCoordinateSystem.Tpo" "$(DEPDIR)/SmCoordinateSystem.Plo"; else rm -f "$(DEPDIR)/SmCoordinateSystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmCoordinateSystem.cpp' object='SmCoordinateSystem.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmCoordinateSystem.Plo' tmpdepfile='$(DEPDIR)/SmCoordinateSystem.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmCoordinateSystem.lo `test -f 'nodes/SmCoordinateSystem.cpp' || echo '$(srcdir)/'`nodes/SmCoordinateSystem.cpp

SmDepthBuffer.o: nodes/SmDepthBuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmDepthBuffer.o -MD -MP -MF "$(DEPDIR)/SmDepthBuffer.Tpo" -c -o SmDepthBuffer.o `test -f 'nodes/SmDepthBuffer.cpp' || echo '$(srcdir)/'`nodes/SmDepthBuffer.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmDepthBuffer.Tpo" "$(DEPDIR)/SmDepthBuffer.Po"; else rm -f "$(DEPDIR)/SmDepthBuffer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmDepthBuffer.cpp' object='SmDepthBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmDepthBuffer.Po' tmpdepfile='$(DEPDIR)/SmDepthBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmDepthBuffer.o `test -f 'nodes/SmDepthBuffer.cpp' || echo '$(srcdir)/'`nodes/SmDepthBuffer.cpp

SmDepthBuffer.obj: nodes/SmDepthBuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmDepthBuffer.obj -MD -MP -MF "$(DEPDIR)/SmDepthBuffer.Tpo" -c -o SmDepthBuffer.obj `if test -f 'nodes/SmDepthBuffer.cpp'; then $(CYGPATH_W) 'nodes/SmDepthBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmDepthBuffer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmDepthBuffer.Tpo" "$(DEPDIR)/SmDepthBuffer.Po"; else rm -f "$(DEPDIR)/SmDepthBuffer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmDepthBuffer.cpp' object='SmDepthBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmDepthBuffer.Po' tmpdepfile='$(DEPDIR)/SmDepthBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmDepthBuffer.obj `if test -f 'nodes/SmDepthBuffer.cpp'; then $(CYGPATH_W) 'nodes/SmDepthBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmDepthBuffer.cpp'; fi`

SmDepthBuffer.lo: nodes/SmDepthBuffer.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmDepthBuffer.lo -MD -MP -MF "$(DEPDIR)/SmDepthBuffer.Tpo" -c -o SmDepthBuffer.lo `test -f 'nodes/SmDepthBuffer.cpp' || echo '$(srcdir)/'`nodes/SmDepthBuffer.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmDepthBuffer.Tpo" "$(DEPDIR)/SmDepthBuffer.Plo"; else rm -f "$(DEPDIR)/SmDepthBuffer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmDepthBuffer.cpp' object='SmDepthBuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmDepthBuffer.Plo' tmpdepfile='$(DEPDIR)/SmDepthBuffer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmDepthBuffer.lo `test -f 'nodes/SmDepthBuffer.cpp' || echo '$(srcdir)/'`nodes/SmDepthBuffer.cpp

SmHeadlight.o: nodes/SmHeadlight.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmHeadlight.o -MD -MP -MF "$(DEPDIR)/SmHeadlight.Tpo" -c -o SmHeadlight.o `test -f 'nodes/SmHeadlight.cpp' || echo '$(srcdir)/'`nodes/SmHeadlight.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmHeadlight.Tpo" "$(DEPDIR)/SmHeadlight.Po"; else rm -f "$(DEPDIR)/SmHeadlight.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmHeadlight.cpp' object='SmHeadlight.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmHeadlight.Po' tmpdepfile='$(DEPDIR)/SmHeadlight.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmHeadlight.o `test -f 'nodes/SmHeadlight.cpp' || echo '$(srcdir)/'`nodes/SmHeadlight.cpp

SmHeadlight.obj: nodes/SmHeadlight.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmHeadlight.obj -MD -MP -MF "$(DEPDIR)/SmHeadlight.Tpo" -c -o SmHeadlight.obj `if test -f 'nodes/SmHeadlight.cpp'; then $(CYGPATH_W) 'nodes/SmHeadlight.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmHeadlight.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmHeadlight.Tpo" "$(DEPDIR)/SmHeadlight.Po"; else rm -f "$(DEPDIR)/SmHeadlight.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmHeadlight.cpp' object='SmHeadlight.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmHeadlight.Po' tmpdepfile='$(DEPDIR)/SmHeadlight.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmHeadlight.obj `if test -f 'nodes/SmHeadlight.cpp'; then $(CYGPATH_W) 'nodes/SmHeadlight.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmHeadlight.cpp'; fi`

SmHeadlight.lo: nodes/SmHeadlight.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmHeadlight.lo -MD -MP -MF "$(DEPDIR)/SmHeadlight.Tpo" -c -o SmHeadlight.lo `test -f 'nodes/SmHeadlight.cpp' || echo '$(srcdir)/'`nodes/SmHeadlight.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmHeadlight.Tpo" "$(DEPDIR)/SmHeadlight.Plo"; else rm -f "$(DEPDIR)/SmHeadlight.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmHeadlight.cpp' object='SmHeadlight.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmHeadlight.Plo' tmpdepfile='$(DEPDIR)/SmHeadlight.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmHeadlight.lo `test -f 'nodes/SmHeadlight.cpp' || echo '$(srcdir)/'`nodes/SmHeadlight.cpp

SmHQSphere.o: nodes/SmHQSphere.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmHQSphere.o -MD -MP -MF "$(DEPDIR)/SmHQSphere.Tpo" -c -o SmHQSphere.o `test -f 'nodes/SmHQSphere.cpp' || echo '$(srcdir)/'`nodes/SmHQSphere.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmHQSphere.Tpo" "$(DEPDIR)/SmHQSphere.Po"; else rm -f "$(DEPDIR)/SmHQSphere.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmHQSphere.cpp' object='SmHQSphere.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmHQSphere.Po' tmpdepfile='$(DEPDIR)/SmHQSphere.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmHQSphere.o `test -f 'nodes/SmHQSphere.cpp' || echo '$(srcdir)/'`nodes/SmHQSphere.cpp

SmHQSphere.obj: nodes/SmHQSphere.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmHQSphere.obj -MD -MP -MF "$(DEPDIR)/SmHQSphere.Tpo" -c -o SmHQSphere.obj `if test -f 'nodes/SmHQSphere.cpp'; then $(CYGPATH_W) 'nodes/SmHQSphere.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmHQSphere.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmHQSphere.Tpo" "$(DEPDIR)/SmHQSphere.Po"; else rm -f "$(DEPDIR)/SmHQSphere.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmHQSphere.cpp' object='SmHQSphere.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmHQSphere.Po' tmpdepfile='$(DEPDIR)/SmHQSphere.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmHQSphere.obj `if test -f 'nodes/SmHQSphere.cpp'; then $(CYGPATH_W) 'nodes/SmHQSphere.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmHQSphere.cpp'; fi`

SmHQSphere.lo: nodes/SmHQSphere.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmHQSphere.lo -MD -MP -MF "$(DEPDIR)/SmHQSphere.Tpo" -c -o SmHQSphere.lo `test -f 'nodes/SmHQSphere.cpp' || echo '$(srcdir)/'`nodes/SmHQSphere.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmHQSphere.Tpo" "$(DEPDIR)/SmHQSphere.Plo"; else rm -f "$(DEPDIR)/SmHQSphere.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmHQSphere.cpp' object='SmHQSphere.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmHQSphere.Plo' tmpdepfile='$(DEPDIR)/SmHQSphere.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmHQSphere.lo `test -f 'nodes/SmHQSphere.cpp' || echo '$(srcdir)/'`nodes/SmHQSphere.cpp

SmLazyFile.o: nodes/SmLazyFile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmLazyFile.o -MD -MP -MF "$(DEPDIR)/SmLazyFile.Tpo" -c -o SmLazyFile.o `test -f 'nodes/SmLazyFile.cpp' || echo '$(srcdir)/'`nodes/SmLazyFile.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmLazyFile.Tpo" "$(DEPDIR)/SmLazyFile.Po"; else rm -f "$(DEPDIR)/SmLazyFile.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmLazyFile.cpp' object='SmLazyFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmLazyFile.Po' tmpdepfile='$(DEPDIR)/SmLazyFile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmLazyFile.o `test -f 'nodes/SmLazyFile.cpp' || echo '$(srcdir)/'`nodes/SmLazyFile.cpp

SmLazyFile.obj: nodes/SmLazyFile.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmLazyFile.obj -MD -MP -MF "$(DEPDIR)/SmLazyFile.Tpo" -c -o SmLazyFile.obj `if test -f 'nodes/SmLazyFile.cpp'; then $(CYGPATH_W) 'nodes/SmLazyFile.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmLazyFile.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmLazyFile.Tpo" "$(DEPDIR)/SmLazyFile.Po"; else rm -f "$(DEPDIR)/SmLazyFile.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmLazyFile.cpp' object='SmLazyFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmLazyFile.Po' tmpdepfile='$(DEPDIR)/SmLazyFile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmLazyFile.obj `if test -f 'nodes/SmLazyFile.cpp'; then $(CYGPATH_W) 'nodes/SmLazyFile.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmLazyFile.cpp'; fi`

SmLazyFile.lo: nodes/SmLazyFile.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmLazyFile.lo -MD -MP -MF "$(DEPDIR)/SmLazyFile.Tpo" -c -o SmLazyFile.lo `test -f 'nodes/SmLazyFile.cpp' || echo '$(srcdir)/'`nodes/SmLazyFile.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmLazyFile.Tpo" "$(DEPDIR)/SmLazyFile.Plo"; else rm -f "$(DEPDIR)/SmLazyFile.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmLazyFile.cpp' object='SmLazyFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmLazyFile.Plo' tmpdepfile='$(DEPDIR)/SmLazyFile.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmLazyFile.lo `test -f 'nodes/SmLazyFile.cpp' || echo '$(srcdir)/'`nodes/SmLazyFile.cpp

SmMarkerSet.o: nodes/SmMarkerSet.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmMarkerSet.o -MD -MP -MF "$(DEPDIR)/SmMarkerSet.Tpo" -c -o SmMarkerSet.o `test -f 'nodes/SmMarkerSet.cpp' || echo '$(srcdir)/'`nodes/SmMarkerSet.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmMarkerSet.Tpo" "$(DEPDIR)/SmMarkerSet.Po"; else rm -f "$(DEPDIR)/SmMarkerSet.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmMarkerSet.cpp' object='SmMarkerSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmMarkerSet.Po' tmpdepfile='$(DEPDIR)/SmMarkerSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmMarkerSet.o `test -f 'nodes/SmMarkerSet.cpp' || echo '$(srcdir)/'`nodes/SmMarkerSet.cpp

SmMarkerSet.obj: nodes/SmMarkerSet.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmMarkerSet.obj -MD -MP -MF "$(DEPDIR)/SmMarkerSet.Tpo" -c -o SmMarkerSet.obj `if test -f 'nodes/SmMarkerSet.cpp'; then $(CYGPATH_W) 'nodes/SmMarkerSet.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmMarkerSet.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmMarkerSet.Tpo" "$(DEPDIR)/SmMarkerSet.Po"; else rm -f "$(DEPDIR)/SmMarkerSet.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmMarkerSet.cpp' object='SmMarkerSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmMarkerSet.Po' tmpdepfile='$(DEPDIR)/SmMarkerSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmMarkerSet.obj `if test -f 'nodes/SmMarkerSet.cpp'; then $(CYGPATH_W) 'nodes/SmMarkerSet.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmMarkerSet.cpp'; fi`

SmMarkerSet.lo: nodes/SmMarkerSet.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmMarkerSet.lo -MD -MP -MF "$(DEPDIR)/SmMarkerSet.Tpo" -c -o SmMarkerSet.lo `test -f 'nodes/SmMarkerSet.cpp' || echo '$(srcdir)/'`nodes/SmMarkerSet.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmMarkerSet.Tpo" "$(DEPDIR)/SmMarkerSet.Plo"; else rm -f "$(DEPDIR)/SmMarkerSet.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmMarkerSet.cpp' object='SmMarkerSet.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmMarkerSet.Plo' tmpdepfile='$(DEPDIR)/SmMarkerSet.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmMarkerSet.lo `test -f 'nodes/SmMarkerSet.cpp' || echo '$(srcdir)/'`nodes/SmMarkerSet.cpp

SmShadowText2.o: nodes/SmShadowText2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmShadowText2.o -MD -MP -MF "$(DEPDIR)/SmShadowText2.Tpo" -c -o SmShadowText2.o `test -f 'nodes/SmShadowText2.cpp' || echo '$(srcdir)/'`nodes/SmShadowText2.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmShadowText2.Tpo" "$(DEPDIR)/SmShadowText2.Po"; else rm -f "$(DEPDIR)/SmShadowText2.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmShadowText2.cpp' object='SmShadowText2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmShadowText2.Po' tmpdepfile='$(DEPDIR)/SmShadowText2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmShadowText2.o `test -f 'nodes/SmShadowText2.cpp' || echo '$(srcdir)/'`nodes/SmShadowText2.cpp

SmShadowText2.obj: nodes/SmShadowText2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmShadowText2.obj -MD -MP -MF "$(DEPDIR)/SmShadowText2.Tpo" -c -o SmShadowText2.obj `if test -f 'nodes/SmShadowText2.cpp'; then $(CYGPATH_W) 'nodes/SmShadowText2.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmShadowText2.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmShadowText2.Tpo" "$(DEPDIR)/SmShadowText2.Po"; else rm -f "$(DEPDIR)/SmShadowText2.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmShadowText2.cpp' object='SmShadowText2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmShadowText2.Po' tmpdepfile='$(DEPDIR)/SmShadowText2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmShadowText2.obj `if test -f 'nodes/SmShadowText2.cpp'; then $(CYGPATH_W) 'nodes/SmShadowText2.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmShadowText2.cpp'; fi`

SmShadowText2.lo: nodes/SmShadowText2.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmShadowText2.lo -MD -MP -MF "$(DEPDIR)/SmShadowText2.Tpo" -c -o SmShadowText2.lo `test -f 'nodes/SmShadowText2.cpp' || echo '$(srcdir)/'`nodes/SmShadowText2.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmShadowText2.Tpo" "$(DEPDIR)/SmShadowText2.Plo"; else rm -f "$(DEPDIR)/SmShadowText2.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmShadowText2.cpp' object='SmShadowText2.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmShadowText2.Plo' tmpdepfile='$(DEPDIR)/SmShadowText2.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmShadowText2.lo `test -f 'nodes/SmShadowText2.cpp' || echo '$(srcdir)/'`nodes/SmShadowText2.cpp

SmTextureFont.o: nodes/SmTextureFont.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTextureFont.o -MD -MP -MF "$(DEPDIR)/SmTextureFont.Tpo" -c -o SmTextureFont.o `test -f 'nodes/SmTextureFont.cpp' || echo '$(srcdir)/'`nodes/SmTextureFont.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTextureFont.Tpo" "$(DEPDIR)/SmTextureFont.Po"; else rm -f "$(DEPDIR)/SmTextureFont.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTextureFont.cpp' object='SmTextureFont.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTextureFont.Po' tmpdepfile='$(DEPDIR)/SmTextureFont.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTextureFont.o `test -f 'nodes/SmTextureFont.cpp' || echo '$(srcdir)/'`nodes/SmTextureFont.cpp

SmTextureFont.obj: nodes/SmTextureFont.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTextureFont.obj -MD -MP -MF "$(DEPDIR)/SmTextureFont.Tpo" -c -o SmTextureFont.obj `if test -f 'nodes/SmTextureFont.cpp'; then $(CYGPATH_W) 'nodes/SmTextureFont.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmTextureFont.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTextureFont.Tpo" "$(DEPDIR)/SmTextureFont.Po"; else rm -f "$(DEPDIR)/SmTextureFont.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTextureFont.cpp' object='SmTextureFont.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTextureFont.Po' tmpdepfile='$(DEPDIR)/SmTextureFont.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTextureFont.obj `if test -f 'nodes/SmTextureFont.cpp'; then $(CYGPATH_W) 'nodes/SmTextureFont.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmTextureFont.cpp'; fi`

SmTextureFont.lo: nodes/SmTextureFont.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTextureFont.lo -MD -MP -MF "$(DEPDIR)/SmTextureFont.Tpo" -c -o SmTextureFont.lo `test -f 'nodes/SmTextureFont.cpp' || echo '$(srcdir)/'`nodes/SmTextureFont.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTextureFont.Tpo" "$(DEPDIR)/SmTextureFont.Plo"; else rm -f "$(DEPDIR)/SmTextureFont.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTextureFont.cpp' object='SmTextureFont.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTextureFont.Plo' tmpdepfile='$(DEPDIR)/SmTextureFont.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTextureFont.lo `test -f 'nodes/SmTextureFont.cpp' || echo '$(srcdir)/'`nodes/SmTextureFont.cpp

SmTextureText2.o: nodes/SmTextureText2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTextureText2.o -MD -MP -MF "$(DEPDIR)/SmTextureText2.Tpo" -c -o SmTextureText2.o `test -f 'nodes/SmTextureText2.cpp' || echo '$(srcdir)/'`nodes/SmTextureText2.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTextureText2.Tpo" "$(DEPDIR)/SmTextureText2.Po"; else rm -f "$(DEPDIR)/SmTextureText2.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTextureText2.cpp' object='SmTextureText2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTextureText2.Po' tmpdepfile='$(DEPDIR)/SmTextureText2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTextureText2.o `test -f 'nodes/SmTextureText2.cpp' || echo '$(srcdir)/'`nodes/SmTextureText2.cpp

SmTextureText2.obj: nodes/SmTextureText2.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTextureText2.obj -MD -MP -MF "$(DEPDIR)/SmTextureText2.Tpo" -c -o SmTextureText2.obj `if test -f 'nodes/SmTextureText2.cpp'; then $(CYGPATH_W) 'nodes/SmTextureText2.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmTextureText2.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTextureText2.Tpo" "$(DEPDIR)/SmTextureText2.Po"; else rm -f "$(DEPDIR)/SmTextureText2.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTextureText2.cpp' object='SmTextureText2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTextureText2.Po' tmpdepfile='$(DEPDIR)/SmTextureText2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTextureText2.obj `if test -f 'nodes/SmTextureText2.cpp'; then $(CYGPATH_W) 'nodes/SmTextureText2.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmTextureText2.cpp'; fi`

SmTextureText2.lo: nodes/SmTextureText2.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTextureText2.lo -MD -MP -MF "$(DEPDIR)/SmTextureText2.Tpo" -c -o SmTextureText2.lo `test -f 'nodes/SmTextureText2.cpp' || echo '$(srcdir)/'`nodes/SmTextureText2.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTextureText2.Tpo" "$(DEPDIR)/SmTextureText2.Plo"; else rm -f "$(DEPDIR)/SmTextureText2.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTextureText2.cpp' object='SmTextureText2.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTextureText2.Plo' tmpdepfile='$(DEPDIR)/SmTextureText2.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTextureText2.lo `test -f 'nodes/SmTextureText2.cpp' || echo '$(srcdir)/'`nodes/SmTextureText2.cpp

SmTextureText2Collector.o: nodes/SmTextureText2Collector.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTextureText2Collector.o -MD -MP -MF "$(DEPDIR)/SmTextureText2Collector.Tpo" -c -o SmTextureText2Collector.o `test -f 'nodes/SmTextureText2Collector.cpp' || echo '$(srcdir)/'`nodes/SmTextureText2Collector.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTextureText2Collector.Tpo" "$(DEPDIR)/SmTextureText2Collector.Po"; else rm -f "$(DEPDIR)/SmTextureText2Collector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTextureText2Collector.cpp' object='SmTextureText2Collector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTextureText2Collector.Po' tmpdepfile='$(DEPDIR)/SmTextureText2Collector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTextureText2Collector.o `test -f 'nodes/SmTextureText2Collector.cpp' || echo '$(srcdir)/'`nodes/SmTextureText2Collector.cpp

SmTextureText2Collector.obj: nodes/SmTextureText2Collector.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTextureText2Collector.obj -MD -MP -MF "$(DEPDIR)/SmTextureText2Collector.Tpo" -c -o SmTextureText2Collector.obj `if test -f 'nodes/SmTextureText2Collector.cpp'; then $(CYGPATH_W) 'nodes/SmTextureText2Collector.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmTextureText2Collector.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTextureText2Collector.Tpo" "$(DEPDIR)/SmTextureText2Collector.Po"; else rm -f "$(DEPDIR)/SmTextureText2Collector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTextureText2Collector.cpp' object='SmTextureText2Collector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTextureText2Collector.Po' tmpdepfile='$(DEPDIR)/SmTextureText2Collector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTextureText2Collector.obj `if test -f 'nodes/SmTextureText2Collector.cpp'; then $(CYGPATH_W) 'nodes/SmTextureText2Collector.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmTextureText2Collector.cpp'; fi`

SmTextureText2Collector.lo: nodes/SmTextureText2Collector.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTextureText2Collector.lo -MD -MP -MF "$(DEPDIR)/SmTextureText2Collector.Tpo" -c -o SmTextureText2Collector.lo `test -f 'nodes/SmTextureText2Collector.cpp' || echo '$(srcdir)/'`nodes/SmTextureText2Collector.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTextureText2Collector.Tpo" "$(DEPDIR)/SmTextureText2Collector.Plo"; else rm -f "$(DEPDIR)/SmTextureText2Collector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTextureText2Collector.cpp' object='SmTextureText2Collector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTextureText2Collector.Plo' tmpdepfile='$(DEPDIR)/SmTextureText2Collector.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTextureText2Collector.lo `test -f 'nodes/SmTextureText2Collector.cpp' || echo '$(srcdir)/'`nodes/SmTextureText2Collector.cpp

SmTooltip.o: nodes/SmTooltip.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTooltip.o -MD -MP -MF "$(DEPDIR)/SmTooltip.Tpo" -c -o SmTooltip.o `test -f 'nodes/SmTooltip.cpp' || echo '$(srcdir)/'`nodes/SmTooltip.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTooltip.Tpo" "$(DEPDIR)/SmTooltip.Po"; else rm -f "$(DEPDIR)/SmTooltip.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTooltip.cpp' object='SmTooltip.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTooltip.Po' tmpdepfile='$(DEPDIR)/SmTooltip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTooltip.o `test -f 'nodes/SmTooltip.cpp' || echo '$(srcdir)/'`nodes/SmTooltip.cpp

SmTooltip.obj: nodes/SmTooltip.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTooltip.obj -MD -MP -MF "$(DEPDIR)/SmTooltip.Tpo" -c -o SmTooltip.obj `if test -f 'nodes/SmTooltip.cpp'; then $(CYGPATH_W) 'nodes/SmTooltip.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmTooltip.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTooltip.Tpo" "$(DEPDIR)/SmTooltip.Po"; else rm -f "$(DEPDIR)/SmTooltip.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTooltip.cpp' object='SmTooltip.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTooltip.Po' tmpdepfile='$(DEPDIR)/SmTooltip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTooltip.obj `if test -f 'nodes/SmTooltip.cpp'; then $(CYGPATH_W) 'nodes/SmTooltip.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmTooltip.cpp'; fi`

SmTooltip.lo: nodes/SmTooltip.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTooltip.lo -MD -MP -MF "$(DEPDIR)/SmTooltip.Tpo" -c -o SmTooltip.lo `test -f 'nodes/SmTooltip.cpp' || echo '$(srcdir)/'`nodes/SmTooltip.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTooltip.Tpo" "$(DEPDIR)/SmTooltip.Plo"; else rm -f "$(DEPDIR)/SmTooltip.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTooltip.cpp' object='SmTooltip.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTooltip.Plo' tmpdepfile='$(DEPDIR)/SmTooltip.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTooltip.lo `test -f 'nodes/SmTooltip.cpp' || echo '$(srcdir)/'`nodes/SmTooltip.cpp

SmTrack.o: nodes/SmTrack.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTrack.o -MD -MP -MF "$(DEPDIR)/SmTrack.Tpo" -c -o SmTrack.o `test -f 'nodes/SmTrack.cpp' || echo '$(srcdir)/'`nodes/SmTrack.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTrack.Tpo" "$(DEPDIR)/SmTrack.Po"; else rm -f "$(DEPDIR)/SmTrack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTrack.cpp' object='SmTrack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTrack.Po' tmpdepfile='$(DEPDIR)/SmTrack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTrack.o `test -f 'nodes/SmTrack.cpp' || echo '$(srcdir)/'`nodes/SmTrack.cpp

SmTrack.obj: nodes/SmTrack.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTrack.obj -MD -MP -MF "$(DEPDIR)/SmTrack.Tpo" -c -o SmTrack.obj `if test -f 'nodes/SmTrack.cpp'; then $(CYGPATH_W) 'nodes/SmTrack.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmTrack.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTrack.Tpo" "$(DEPDIR)/SmTrack.Po"; else rm -f "$(DEPDIR)/SmTrack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTrack.cpp' object='SmTrack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTrack.Po' tmpdepfile='$(DEPDIR)/SmTrack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTrack.obj `if test -f 'nodes/SmTrack.cpp'; then $(CYGPATH_W) 'nodes/SmTrack.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SmTrack.cpp'; fi`

SmTrack.lo: nodes/SmTrack.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmTrack.lo -MD -MP -MF "$(DEPDIR)/SmTrack.Tpo" -c -o SmTrack.lo `test -f 'nodes/SmTrack.cpp' || echo '$(srcdir)/'`nodes/SmTrack.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SmTrack.Tpo" "$(DEPDIR)/SmTrack.Plo"; else rm -f "$(DEPDIR)/SmTrack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SmTrack.cpp' object='SmTrack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SmTrack.Plo' tmpdepfile='$(DEPDIR)/SmTrack.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmTrack.lo `test -f 'nodes/SmTrack.cpp' || echo '$(srcdir)/'`nodes/SmTrack.cpp

SoLODExtrusion.o: nodes/SoLODExtrusion.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoLODExtrusion.o -MD -MP -MF "$(DEPDIR)/SoLODExtrusion.Tpo" -c -o SoLODExtrusion.o `test -f 'nodes/SoLODExtrusion.cpp' || echo '$(srcdir)/'`nodes/SoLODExtrusion.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoLODExtrusion.Tpo" "$(DEPDIR)/SoLODExtrusion.Po"; else rm -f "$(DEPDIR)/SoLODExtrusion.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SoLODExtrusion.cpp' object='SoLODExtrusion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoLODExtrusion.Po' tmpdepfile='$(DEPDIR)/SoLODExtrusion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoLODExtrusion.o `test -f 'nodes/SoLODExtrusion.cpp' || echo '$(srcdir)/'`nodes/SoLODExtrusion.cpp

SoLODExtrusion.obj: nodes/SoLODExtrusion.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoLODExtrusion.obj -MD -MP -MF "$(DEPDIR)/SoLODExtrusion.Tpo" -c -o SoLODExtrusion.obj `if test -f 'nodes/SoLODExtrusion.cpp'; then $(CYGPATH_W) 'nodes/SoLODExtrusion.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SoLODExtrusion.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoLODExtrusion.Tpo" "$(DEPDIR)/SoLODExtrusion.Po"; else rm -f "$(DEPDIR)/SoLODExtrusion.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SoLODExtrusion.cpp' object='SoLODExtrusion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoLODExtrusion.Po' tmpdepfile='$(DEPDIR)/SoLODExtrusion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoLODExtrusion.obj `if test -f 'nodes/SoLODExtrusion.cpp'; then $(CYGPATH_W) 'nodes/SoLODExtrusion.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SoLODExtrusion.cpp'; fi`

SoLODExtrusion.lo: nodes/SoLODExtrusion.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoLODExtrusion.lo -MD -MP -MF "$(DEPDIR)/SoLODExtrusion.Tpo" -c -o SoLODExtrusion.lo `test -f 'nodes/SoLODExtrusion.cpp' || echo '$(srcdir)/'`nodes/SoLODExtrusion.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoLODExtrusion.Tpo" "$(DEPDIR)/SoLODExtrusion.Plo"; else rm -f "$(DEPDIR)/SoLODExtrusion.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SoLODExtrusion.cpp' object='SoLODExtrusion.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoLODExtrusion.Plo' tmpdepfile='$(DEPDIR)/SoLODExtrusion.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoLODExtrusion.lo `test -f 'nodes/SoLODExtrusion.cpp' || echo '$(srcdir)/'`nodes/SoLODExtrusion.cpp

SoPointCloud.o: nodes/SoPointCloud.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoPointCloud.o -MD -MP -MF "$(DEPDIR)/SoPointCloud.Tpo" -c -o SoPointCloud.o `test -f 'nodes/SoPointCloud.cpp' || echo '$(srcdir)/'`nodes/SoPointCloud.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoPointCloud.Tpo" "$(DEPDIR)/SoPointCloud.Po"; else rm -f "$(DEPDIR)/SoPointCloud.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SoPointCloud.cpp' object='SoPointCloud.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoPointCloud.Po' tmpdepfile='$(DEPDIR)/SoPointCloud.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoPointCloud.o `test -f 'nodes/SoPointCloud.cpp' || echo '$(srcdir)/'`nodes/SoPointCloud.cpp

SoPointCloud.obj: nodes/SoPointCloud.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoPointCloud.obj -MD -MP -MF "$(DEPDIR)/SoPointCloud.Tpo" -c -o SoPointCloud.obj `if test -f 'nodes/SoPointCloud.cpp'; then $(CYGPATH_W) 'nodes/SoPointCloud.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SoPointCloud.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoPointCloud.Tpo" "$(DEPDIR)/SoPointCloud.Po"; else rm -f "$(DEPDIR)/SoPointCloud.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SoPointCloud.cpp' object='SoPointCloud.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoPointCloud.Po' tmpdepfile='$(DEPDIR)/SoPointCloud.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoPointCloud.obj `if test -f 'nodes/SoPointCloud.cpp'; then $(CYGPATH_W) 'nodes/SoPointCloud.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SoPointCloud.cpp'; fi`

SoPointCloud.lo: nodes/SoPointCloud.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoPointCloud.lo -MD -MP -MF "$(DEPDIR)/SoPointCloud.Tpo" -c -o SoPointCloud.lo `test -f 'nodes/SoPointCloud.cpp' || echo '$(srcdir)/'`nodes/SoPointCloud.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoPointCloud.Tpo" "$(DEPDIR)/SoPointCloud.Plo"; else rm -f "$(DEPDIR)/SoPointCloud.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SoPointCloud.cpp' object='SoPointCloud.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoPointCloud.Plo' tmpdepfile='$(DEPDIR)/SoPointCloud.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoPointCloud.lo `test -f 'nodes/SoPointCloud.cpp' || echo '$(srcdir)/'`nodes/SoPointCloud.cpp

SoTCBCurve.o: nodes/SoTCBCurve.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoTCBCurve.o -MD -MP -MF "$(DEPDIR)/SoTCBCurve.Tpo" -c -o SoTCBCurve.o `test -f 'nodes/SoTCBCurve.cpp' || echo '$(srcdir)/'`nodes/SoTCBCurve.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoTCBCurve.Tpo" "$(DEPDIR)/SoTCBCurve.Po"; else rm -f "$(DEPDIR)/SoTCBCurve.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SoTCBCurve.cpp' object='SoTCBCurve.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoTCBCurve.Po' tmpdepfile='$(DEPDIR)/SoTCBCurve.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoTCBCurve.o `test -f 'nodes/SoTCBCurve.cpp' || echo '$(srcdir)/'`nodes/SoTCBCurve.cpp

SoTCBCurve.obj: nodes/SoTCBCurve.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoTCBCurve.obj -MD -MP -MF "$(DEPDIR)/SoTCBCurve.Tpo" -c -o SoTCBCurve.obj `if test -f 'nodes/SoTCBCurve.cpp'; then $(CYGPATH_W) 'nodes/SoTCBCurve.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SoTCBCurve.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoTCBCurve.Tpo" "$(DEPDIR)/SoTCBCurve.Po"; else rm -f "$(DEPDIR)/SoTCBCurve.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SoTCBCurve.cpp' object='SoTCBCurve.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoTCBCurve.Po' tmpdepfile='$(DEPDIR)/SoTCBCurve.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoTCBCurve.obj `if test -f 'nodes/SoTCBCurve.cpp'; then $(CYGPATH_W) 'nodes/SoTCBCurve.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SoTCBCurve.cpp'; fi`

SoTCBCurve.lo: nodes/SoTCBCurve.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoTCBCurve.lo -MD -MP -MF "$(DEPDIR)/SoTCBCurve.Tpo" -c -o SoTCBCurve.lo `test -f 'nodes/SoTCBCurve.cpp' || echo '$(srcdir)/'`nodes/SoTCBCurve.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoTCBCurve.Tpo" "$(DEPDIR)/SoTCBCurve.Plo"; else rm -f "$(DEPDIR)/SoTCBCurve.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SoTCBCurve.cpp' object='SoTCBCurve.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoTCBCurve.Plo' tmpdepfile='$(DEPDIR)/SoTCBCurve.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoTCBCurve.lo `test -f 'nodes/SoTCBCurve.cpp' || echo '$(srcdir)/'`nodes/SoTCBCurve.cpp

SoText2Set.o: nodes/SoText2Set.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoText2Set.o -MD -MP -MF "$(DEPDIR)/SoText2Set.Tpo" -c -o SoText2Set.o `test -f 'nodes/SoText2Set.cpp' || echo '$(srcdir)/'`nodes/SoText2Set.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoText2Set.Tpo" "$(DEPDIR)/SoText2Set.Po"; else rm -f "$(DEPDIR)/SoText2Set.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SoText2Set.cpp' object='SoText2Set.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoText2Set.Po' tmpdepfile='$(DEPDIR)/SoText2Set.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoText2Set.o `test -f 'nodes/SoText2Set.cpp' || echo '$(srcdir)/'`nodes/SoText2Set.cpp

SoText2Set.obj: nodes/SoText2Set.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoText2Set.obj -MD -MP -MF "$(DEPDIR)/SoText2Set.Tpo" -c -o SoText2Set.obj `if test -f 'nodes/SoText2Set.cpp'; then $(CYGPATH_W) 'nodes/SoText2Set.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SoText2Set.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoText2Set.Tpo" "$(DEPDIR)/SoText2Set.Po"; else rm -f "$(DEPDIR)/SoText2Set.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SoText2Set.cpp' object='SoText2Set.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoText2Set.Po' tmpdepfile='$(DEPDIR)/SoText2Set.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoText2Set.obj `if test -f 'nodes/SoText2Set.cpp'; then $(CYGPATH_W) 'nodes/SoText2Set.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SoText2Set.cpp'; fi`

SoText2Set.lo: nodes/SoText2Set.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoText2Set.lo -MD -MP -MF "$(DEPDIR)/SoText2Set.Tpo" -c -o SoText2Set.lo `test -f 'nodes/SoText2Set.cpp' || echo '$(srcdir)/'`nodes/SoText2Set.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SoText2Set.Tpo" "$(DEPDIR)/SoText2Set.Plo"; else rm -f "$(DEPDIR)/SoText2Set.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SoText2Set.cpp' object='SoText2Set.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoText2Set.Plo' tmpdepfile='$(DEPDIR)/SoText2Set.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoText2Set.lo `test -f 'nodes/SoText2Set.cpp' || echo '$(srcdir)/'`nodes/SoText2Set.cpp

Switchboard.o: nodes/Switchboard.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Switchboard.o -MD -MP -MF "$(DEPDIR)/Switchboard.Tpo" -c -o Switchboard.o `test -f 'nodes/Switchboard.cpp' || echo '$(srcdir)/'`nodes/Switchboard.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Switchboard.Tpo" "$(DEPDIR)/Switchboard.Po"; else rm -f "$(DEPDIR)/Switchboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/Switchboard.cpp' object='Switchboard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Switchboard.Po' tmpdepfile='$(DEPDIR)/Switchboard.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Switchboard.o `test -f 'nodes/Switchboard.cpp' || echo '$(srcdir)/'`nodes/Switchboard.cpp

Switchboard.obj: nodes/Switchboard.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Switchboard.obj -MD -MP -MF "$(DEPDIR)/Switchboard.Tpo" -c -o Switchboard.obj `if test -f 'nodes/Switchboard.cpp'; then $(CYGPATH_W) 'nodes/Switchboard.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/Switchboard.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Switchboard.Tpo" "$(DEPDIR)/Switchboard.Po"; else rm -f "$(DEPDIR)/Switchboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/Switchboard.cpp' object='Switchboard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Switchboard.Po' tmpdepfile='$(DEPDIR)/Switchboard.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Switchboard.obj `if test -f 'nodes/Switchboard.cpp'; then $(CYGPATH_W) 'nodes/Switchboard.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/Switchboard.cpp'; fi`

Switchboard.lo: nodes/Switchboard.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Switchboard.lo -MD -MP -MF "$(DEPDIR)/Switchboard.Tpo" -c -o Switchboard.lo `test -f 'nodes/Switchboard.cpp' || echo '$(srcdir)/'`nodes/Switchboard.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Switchboard.Tpo" "$(DEPDIR)/Switchboard.Plo"; else rm -f "$(DEPDIR)/Switchboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/Switchboard.cpp' object='Switchboard.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Switchboard.Plo' tmpdepfile='$(DEPDIR)/Switchboard.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Switchboard.lo `test -f 'nodes/Switchboard.cpp' || echo '$(srcdir)/'`nodes/Switchboard.cpp

SwitchboardOperator.o: nodes/SwitchboardOperator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SwitchboardOperator.o -MD -MP -MF "$(DEPDIR)/SwitchboardOperator.Tpo" -c -o SwitchboardOperator.o `test -f 'nodes/SwitchboardOperator.cpp' || echo '$(srcdir)/'`nodes/SwitchboardOperator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SwitchboardOperator.Tpo" "$(DEPDIR)/SwitchboardOperator.Po"; else rm -f "$(DEPDIR)/SwitchboardOperator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SwitchboardOperator.cpp' object='SwitchboardOperator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SwitchboardOperator.Po' tmpdepfile='$(DEPDIR)/SwitchboardOperator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SwitchboardOperator.o `test -f 'nodes/SwitchboardOperator.cpp' || echo '$(srcdir)/'`nodes/SwitchboardOperator.cpp

SwitchboardOperator.obj: nodes/SwitchboardOperator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SwitchboardOperator.obj -MD -MP -MF "$(DEPDIR)/SwitchboardOperator.Tpo" -c -o SwitchboardOperator.obj `if test -f 'nodes/SwitchboardOperator.cpp'; then $(CYGPATH_W) 'nodes/SwitchboardOperator.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SwitchboardOperator.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SwitchboardOperator.Tpo" "$(DEPDIR)/SwitchboardOperator.Po"; else rm -f "$(DEPDIR)/SwitchboardOperator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SwitchboardOperator.cpp' object='SwitchboardOperator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SwitchboardOperator.Po' tmpdepfile='$(DEPDIR)/SwitchboardOperator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SwitchboardOperator.obj `if test -f 'nodes/SwitchboardOperator.cpp'; then $(CYGPATH_W) 'nodes/SwitchboardOperator.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/SwitchboardOperator.cpp'; fi`

SwitchboardOperator.lo: nodes/SwitchboardOperator.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SwitchboardOperator.lo -MD -MP -MF "$(DEPDIR)/SwitchboardOperator.Tpo" -c -o SwitchboardOperator.lo `test -f 'nodes/SwitchboardOperator.cpp' || echo '$(srcdir)/'`nodes/SwitchboardOperator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SwitchboardOperator.Tpo" "$(DEPDIR)/SwitchboardOperator.Plo"; else rm -f "$(DEPDIR)/SwitchboardOperator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/SwitchboardOperator.cpp' object='SwitchboardOperator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SwitchboardOperator.Plo' tmpdepfile='$(DEPDIR)/SwitchboardOperator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SwitchboardOperator.lo `test -f 'nodes/SwitchboardOperator.cpp' || echo '$(srcdir)/'`nodes/SwitchboardOperator.cpp

UTMCamera.o: nodes/UTMCamera.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UTMCamera.o -MD -MP -MF "$(DEPDIR)/UTMCamera.Tpo" -c -o UTMCamera.o `test -f 'nodes/UTMCamera.cpp' || echo '$(srcdir)/'`nodes/UTMCamera.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/UTMCamera.Tpo" "$(DEPDIR)/UTMCamera.Po"; else rm -f "$(DEPDIR)/UTMCamera.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/UTMCamera.cpp' object='UTMCamera.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UTMCamera.Po' tmpdepfile='$(DEPDIR)/UTMCamera.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UTMCamera.o `test -f 'nodes/UTMCamera.cpp' || echo '$(srcdir)/'`nodes/UTMCamera.cpp

UTMCamera.obj: nodes/UTMCamera.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UTMCamera.obj -MD -MP -MF "$(DEPDIR)/UTMCamera.Tpo" -c -o UTMCamera.obj `if test -f 'nodes/UTMCamera.cpp'; then $(CYGPATH_W) 'nodes/UTMCamera.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/UTMCamera.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/UTMCamera.Tpo" "$(DEPDIR)/UTMCamera.Po"; else rm -f "$(DEPDIR)/UTMCamera.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/UTMCamera.cpp' object='UTMCamera.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UTMCamera.Po' tmpdepfile='$(DEPDIR)/UTMCamera.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UTMCamera.obj `if test -f 'nodes/UTMCamera.cpp'; then $(CYGPATH_W) 'nodes/UTMCamera.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/UTMCamera.cpp'; fi`

UTMCamera.lo: nodes/UTMCamera.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UTMCamera.lo -MD -MP -MF "$(DEPDIR)/UTMCamera.Tpo" -c -o UTMCamera.lo `test -f 'nodes/UTMCamera.cpp' || echo '$(srcdir)/'`nodes/UTMCamera.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/UTMCamera.Tpo" "$(DEPDIR)/UTMCamera.Plo"; else rm -f "$(DEPDIR)/UTMCamera.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/UTMCamera.cpp' object='UTMCamera.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UTMCamera.Plo' tmpdepfile='$(DEPDIR)/UTMCamera.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UTMCamera.lo `test -f 'nodes/UTMCamera.cpp' || echo '$(srcdir)/'`nodes/UTMCamera.cpp

UTMCoordinate.o: nodes/UTMCoordinate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UTMCoordinate.o -MD -MP -MF "$(DEPDIR)/UTMCoordinate.Tpo" -c -o UTMCoordinate.o `test -f 'nodes/UTMCoordinate.cpp' || echo '$(srcdir)/'`nodes/UTMCoordinate.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/UTMCoordinate.Tpo" "$(DEPDIR)/UTMCoordinate.Po"; else rm -f "$(DEPDIR)/UTMCoordinate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/UTMCoordinate.cpp' object='UTMCoordinate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UTMCoordinate.Po' tmpdepfile='$(DEPDIR)/UTMCoordinate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UTMCoordinate.o `test -f 'nodes/UTMCoordinate.cpp' || echo '$(srcdir)/'`nodes/UTMCoordinate.cpp

UTMCoordinate.obj: nodes/UTMCoordinate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UTMCoordinate.obj -MD -MP -MF "$(DEPDIR)/UTMCoordinate.Tpo" -c -o UTMCoordinate.obj `if test -f 'nodes/UTMCoordinate.cpp'; then $(CYGPATH_W) 'nodes/UTMCoordinate.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/UTMCoordinate.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/UTMCoordinate.Tpo" "$(DEPDIR)/UTMCoordinate.Po"; else rm -f "$(DEPDIR)/UTMCoordinate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/UTMCoordinate.cpp' object='UTMCoordinate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UTMCoordinate.Po' tmpdepfile='$(DEPDIR)/UTMCoordinate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UTMCoordinate.obj `if test -f 'nodes/UTMCoordinate.cpp'; then $(CYGPATH_W) 'nodes/UTMCoordinate.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/UTMCoordinate.cpp'; fi`

UTMCoordinate.lo: nodes/UTMCoordinate.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UTMCoordinate.lo -MD -MP -MF "$(DEPDIR)/UTMCoordinate.Tpo" -c -o UTMCoordinate.lo `test -f 'nodes/UTMCoordinate.cpp' || echo '$(srcdir)/'`nodes/UTMCoordinate.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/UTMCoordinate.Tpo" "$(DEPDIR)/UTMCoordinate.Plo"; else rm -f "$(DEPDIR)/UTMCoordinate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/UTMCoordinate.cpp' object='UTMCoordinate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UTMCoordinate.Plo' tmpdepfile='$(DEPDIR)/UTMCoordinate.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UTMCoordinate.lo `test -f 'nodes/UTMCoordinate.cpp' || echo '$(srcdir)/'`nodes/UTMCoordinate.cpp

UTMPosition.o: nodes/UTMPosition.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UTMPosition.o -MD -MP -MF "$(DEPDIR)/UTMPosition.Tpo" -c -o UTMPosition.o `test -f 'nodes/UTMPosition.cpp' || echo '$(srcdir)/'`nodes/UTMPosition.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/UTMPosition.Tpo" "$(DEPDIR)/UTMPosition.Po"; else rm -f "$(DEPDIR)/UTMPosition.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/UTMPosition.cpp' object='UTMPosition.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UTMPosition.Po' tmpdepfile='$(DEPDIR)/UTMPosition.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UTMPosition.o `test -f 'nodes/UTMPosition.cpp' || echo '$(srcdir)/'`nodes/UTMPosition.cpp

UTMPosition.obj: nodes/UTMPosition.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UTMPosition.obj -MD -MP -MF "$(DEPDIR)/UTMPosition.Tpo" -c -o UTMPosition.obj `if test -f 'nodes/UTMPosition.cpp'; then $(CYGPATH_W) 'nodes/UTMPosition.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/UTMPosition.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/UTMPosition.Tpo" "$(DEPDIR)/UTMPosition.Po"; else rm -f "$(DEPDIR)/UTMPosition.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/UTMPosition.cpp' object='UTMPosition.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UTMPosition.Po' tmpdepfile='$(DEPDIR)/UTMPosition.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UTMPosition.obj `if test -f 'nodes/UTMPosition.cpp'; then $(CYGPATH_W) 'nodes/UTMPosition.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/UTMPosition.cpp'; fi`

UTMPosition.lo: nodes/UTMPosition.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UTMPosition.lo -MD -MP -MF "$(DEPDIR)/UTMPosition.Tpo" -c -o UTMPosition.lo `test -f 'nodes/UTMPosition.cpp' || echo '$(srcdir)/'`nodes/UTMPosition.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/UTMPosition.Tpo" "$(DEPDIR)/UTMPosition.Plo"; else rm -f "$(DEPDIR)/UTMPosition.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/UTMPosition.cpp' object='UTMPosition.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UTMPosition.Plo' tmpdepfile='$(DEPDIR)/UTMPosition.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UTMPosition.lo `test -f 'nodes/UTMPosition.cpp' || echo '$(srcdir)/'`nodes/UTMPosition.cpp

VertexArrayShape.o: nodes/VertexArrayShape.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VertexArrayShape.o -MD -MP -MF "$(DEPDIR)/VertexArrayShape.Tpo" -c -o VertexArrayShape.o `test -f 'nodes/VertexArrayShape.cpp' || echo '$(srcdir)/'`nodes/VertexArrayShape.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/VertexArrayShape.Tpo" "$(DEPDIR)/VertexArrayShape.Po"; else rm -f "$(DEPDIR)/VertexArrayShape.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/VertexArrayShape.cpp' object='VertexArrayShape.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/VertexArrayShape.Po' tmpdepfile='$(DEPDIR)/VertexArrayShape.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VertexArrayShape.o `test -f 'nodes/VertexArrayShape.cpp' || echo '$(srcdir)/'`nodes/VertexArrayShape.cpp

VertexArrayShape.obj: nodes/VertexArrayShape.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VertexArrayShape.obj -MD -MP -MF "$(DEPDIR)/VertexArrayShape.Tpo" -c -o VertexArrayShape.obj `if test -f 'nodes/VertexArrayShape.cpp'; then $(CYGPATH_W) 'nodes/VertexArrayShape.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/VertexArrayShape.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/VertexArrayShape.Tpo" "$(DEPDIR)/VertexArrayShape.Po"; else rm -f "$(DEPDIR)/VertexArrayShape.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/VertexArrayShape.cpp' object='VertexArrayShape.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/VertexArrayShape.Po' tmpdepfile='$(DEPDIR)/VertexArrayShape.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VertexArrayShape.obj `if test -f 'nodes/VertexArrayShape.cpp'; then $(CYGPATH_W) 'nodes/VertexArrayShape.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/VertexArrayShape.cpp'; fi`

VertexArrayShape.lo: nodes/VertexArrayShape.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VertexArrayShape.lo -MD -MP -MF "$(DEPDIR)/VertexArrayShape.Tpo" -c -o VertexArrayShape.lo `test -f 'nodes/VertexArrayShape.cpp' || echo '$(srcdir)/'`nodes/VertexArrayShape.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/VertexArrayShape.Tpo" "$(DEPDIR)/VertexArrayShape.Plo"; else rm -f "$(DEPDIR)/VertexArrayShape.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/VertexArrayShape.cpp' object='VertexArrayShape.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/VertexArrayShape.Plo' tmpdepfile='$(DEPDIR)/VertexArrayShape.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VertexArrayShape.lo `test -f 'nodes/VertexArrayShape.cpp' || echo '$(srcdir)/'`nodes/VertexArrayShape.cpp

ViewpointWrapper.o: nodes/ViewpointWrapper.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ViewpointWrapper.o -MD -MP -MF "$(DEPDIR)/ViewpointWrapper.Tpo" -c -o ViewpointWrapper.o `test -f 'nodes/ViewpointWrapper.cpp' || echo '$(srcdir)/'`nodes/ViewpointWrapper.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ViewpointWrapper.Tpo" "$(DEPDIR)/ViewpointWrapper.Po"; else rm -f "$(DEPDIR)/ViewpointWrapper.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/ViewpointWrapper.cpp' object='ViewpointWrapper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ViewpointWrapper.Po' tmpdepfile='$(DEPDIR)/ViewpointWrapper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ViewpointWrapper.o `test -f 'nodes/ViewpointWrapper.cpp' || echo '$(srcdir)/'`nodes/ViewpointWrapper.cpp

ViewpointWrapper.obj: nodes/ViewpointWrapper.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ViewpointWrapper.obj -MD -MP -MF "$(DEPDIR)/ViewpointWrapper.Tpo" -c -o ViewpointWrapper.obj `if test -f 'nodes/ViewpointWrapper.cpp'; then $(CYGPATH_W) 'nodes/ViewpointWrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/ViewpointWrapper.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ViewpointWrapper.Tpo" "$(DEPDIR)/ViewpointWrapper.Po"; else rm -f "$(DEPDIR)/ViewpointWrapper.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/ViewpointWrapper.cpp' object='ViewpointWrapper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ViewpointWrapper.Po' tmpdepfile='$(DEPDIR)/ViewpointWrapper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ViewpointWrapper.obj `if test -f 'nodes/ViewpointWrapper.cpp'; then $(CYGPATH_W) 'nodes/ViewpointWrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/ViewpointWrapper.cpp'; fi`

ViewpointWrapper.lo: nodes/ViewpointWrapper.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ViewpointWrapper.lo -MD -MP -MF "$(DEPDIR)/ViewpointWrapper.Tpo" -c -o ViewpointWrapper.lo `test -f 'nodes/ViewpointWrapper.cpp' || echo '$(srcdir)/'`nodes/ViewpointWrapper.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ViewpointWrapper.Tpo" "$(DEPDIR)/ViewpointWrapper.Plo"; else rm -f "$(DEPDIR)/ViewpointWrapper.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/ViewpointWrapper.cpp' object='ViewpointWrapper.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ViewpointWrapper.Plo' tmpdepfile='$(DEPDIR)/ViewpointWrapper.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ViewpointWrapper.lo `test -f 'nodes/ViewpointWrapper.cpp' || echo '$(srcdir)/'`nodes/ViewpointWrapper.cpp

ViewportRegion.o: nodes/ViewportRegion.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ViewportRegion.o -MD -MP -MF "$(DEPDIR)/ViewportRegion.Tpo" -c -o ViewportRegion.o `test -f 'nodes/ViewportRegion.cpp' || echo '$(srcdir)/'`nodes/ViewportRegion.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ViewportRegion.Tpo" "$(DEPDIR)/ViewportRegion.Po"; else rm -f "$(DEPDIR)/ViewportRegion.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/ViewportRegion.cpp' object='ViewportRegion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ViewportRegion.Po' tmpdepfile='$(DEPDIR)/ViewportRegion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ViewportRegion.o `test -f 'nodes/ViewportRegion.cpp' || echo '$(srcdir)/'`nodes/ViewportRegion.cpp

ViewportRegion.obj: nodes/ViewportRegion.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ViewportRegion.obj -MD -MP -MF "$(DEPDIR)/ViewportRegion.Tpo" -c -o ViewportRegion.obj `if test -f 'nodes/ViewportRegion.cpp'; then $(CYGPATH_W) 'nodes/ViewportRegion.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/ViewportRegion.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ViewportRegion.Tpo" "$(DEPDIR)/ViewportRegion.Po"; else rm -f "$(DEPDIR)/ViewportRegion.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/ViewportRegion.cpp' object='ViewportRegion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ViewportRegion.Po' tmpdepfile='$(DEPDIR)/ViewportRegion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ViewportRegion.obj `if test -f 'nodes/ViewportRegion.cpp'; then $(CYGPATH_W) 'nodes/ViewportRegion.cpp'; else $(CYGPATH_W) '$(srcdir)/nodes/ViewportRegion.cpp'; fi`

ViewportRegion.lo: nodes/ViewportRegion.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ViewportRegion.lo -MD -MP -MF "$(DEPDIR)/ViewportRegion.Tpo" -c -o ViewportRegion.lo `test -f 'nodes/ViewportRegion.cpp' || echo '$(srcdir)/'`nodes/ViewportRegion.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ViewportRegion.Tpo" "$(DEPDIR)/ViewportRegion.Plo"; else rm -f "$(DEPDIR)/ViewportRegion.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='nodes/ViewportRegion.cpp' object='ViewportRegion.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ViewportRegion.Plo' tmpdepfile='$(DEPDIR)/ViewportRegion.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ViewportRegion.lo `test -f 'nodes/ViewportRegion.cpp' || echo '$(srcdir)/'`nodes/ViewportRegion.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

uninstall-libSmallChangeincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libSmallChangeinc_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(libSmallChangeincdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libSmallChangeincdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/actions $(distdir)/draggers $(distdir)/elements $(distdir)/engines $(distdir)/eventhandlers $(distdir)/misc $(distdir)/nodekits $(distdir)/nodes
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || mkdir "$(distdir)/$$subdir" \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="../$(top_distdir)" \
	        distdir="../$(distdir)/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libSmallChangeincdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLIBRARIES clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-data-local install-libSmallChangeincHEADERS

install-exec-am: install-exec-local install-libLIBRARIES \
	install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libLIBRARIES \
	uninstall-libLTLIBRARIES uninstall-libSmallChangeincHEADERS \
	uninstall-local

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libLIBRARIES clean-libLTLIBRARIES \
	clean-libtool clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-exec \
	install-exec-am install-exec-local install-info \
	install-info-am install-libLIBRARIES install-libLTLIBRARIES \
	install-libSmallChangeincHEADERS install-man install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-info-am uninstall-libLIBRARIES \
	uninstall-libLTLIBRARIES uninstall-libSmallChangeincHEADERS \
	uninstall-local


SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@.lib: Makefile \
  $(SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_OBJECTS) \
  $(SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_DEPENDENCIES)
	@basename="SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@"; \
	rm -f "$$basename.dll" "$$basename.lib"; \
	echo "Linking $$basename.lib..."; \
	echo $(CC) $(LDFLAGS) $(LIBFLAGS) \
	  $(SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_OBJECTS) \
	  $(SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_LIBADD) $(LIBS); \
	$(CC) $(LDFLAGS) $(LIBFLAGS) \
	  $(SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_OBJECTS) \
	  $(SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@_lib_LIBADD) $(LIBS);

# **************************************************************************

@BUILD_WITH_MSVC_TRUE@install-exec-local: SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@.lib
@BUILD_WITH_MSVC_TRUE@	@basename="SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@"; \
@BUILD_WITH_MSVC_TRUE@	for ext in dll pdb; do \
@BUILD_WITH_MSVC_TRUE@	  file="$$basename.$$ext"; \
@BUILD_WITH_MSVC_TRUE@	  if test -s "$$file"; then \
@BUILD_WITH_MSVC_TRUE@	    $(mkinstalldirs) "$(DESTDIR)$(bindir)"; \
@BUILD_WITH_MSVC_TRUE@	    echo $(INSTALL_PROGRAM) "$$file" "$(DESTDIR)$(bindir)/$$file"; \
@BUILD_WITH_MSVC_TRUE@	    $(INSTALL_PROGRAM) "$$file" "$(DESTDIR)$(bindir)/$$file" || exit 1; \
@BUILD_WITH_MSVC_TRUE@	  fi \
@BUILD_WITH_MSVC_TRUE@	done
@BUILD_WITH_MSVC_FALSE@install-exec-local:

@MAC_FRAMEWORK_TRUE@install-data-local:
@MAC_FRAMEWORK_TRUE@	@$(NORMAL_INSTALL)
@MAC_FRAMEWORK_TRUE@	@echo "Setting up Mac OS X framework"
@MAC_FRAMEWORK_TRUE@	@$(mkinstalldirs) $(DESTDIR)$(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)
@MAC_FRAMEWORK_TRUE@	@ln -sf $(MAC_FRAMEWORK_VERSION) $(DESTDIR)$(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/Current
@MAC_FRAMEWORK_TRUE@	@ln -sf Versions/Current/Headers $(DESTDIR)$(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Headers
@MAC_FRAMEWORK_TRUE@	@ln -sf Versions/Current/Libraries $(DESTDIR)$(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Libraries
@MAC_FRAMEWORK_TRUE@	@ln -sf Versions/Current/Resources $(DESTDIR)$(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Resources
@MAC_FRAMEWORK_TRUE@	cd $(DESTDIR)$(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/Current && ln -sf Libraries/libSmallChange.dylib $(MAC_FRAMEWORK_NAME) && cd -; \
@MAC_FRAMEWORK_TRUE@	cd $(DESTDIR)$(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework && ln -sf Versions/Current/$(MAC_FRAMEWORK_NAME) $(MAC_FRAMEWORK_NAME) && install_name_tool -id $(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/$(MAC_FRAMEWORK_NAME) $(MAC_FRAMEWORK_NAME) && cd -;
@MAC_FRAMEWORK_FALSE@install-data-local:
@MAC_FRAMEWORK_FALSE@	@basename="SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@"; \
@MAC_FRAMEWORK_FALSE@	for ext in lib; do \
@MAC_FRAMEWORK_FALSE@	  file="$$basename.$$ext"; \
@MAC_FRAMEWORK_FALSE@	  if test -s "$$file"; then \
@MAC_FRAMEWORK_FALSE@	    $(mkinstalldirs) "$(DESTDIR)$(libdir)"; \
@MAC_FRAMEWORK_FALSE@	    echo $(INSTALL_PROGRAM) "$$file" "$(DESTDIR)$(libdir)/$$file"; \
@MAC_FRAMEWORK_FALSE@	    $(INSTALL_PROGRAM) "$$file" "$(DESTDIR)$(libdir)/$$file" || exit 1; \
@MAC_FRAMEWORK_FALSE@	  fi \
@MAC_FRAMEWORK_FALSE@	done

uninstall-local:
	@basename="SmallChange@SMALLCHANGE_MAJOR_VERSION@@SUFFIX@"; \
	for file in \
	  "$(DESTDIR)$(bindir)/$$basename.dll" \
	  "$(DESTDIR)$(bindir)/$$basename.pdb" \
	  "$(DESTDIR)$(libdir)/$$basename.lib"; do \
	  if test -f "$$file"; then \
	    echo " rm -f" "$$file"; \
	    rm -f "$$file"; \
	  fi \
	done; \
	incbasedir="$(DESTDIR)$(includedir)/SmallChange"; \
	for dir in \
	  "$$incbasedir/elements" \
	  "$$incbasedir/nodekits" \
	  "$$incbasedir/nodes" \
	  "$$incbasedir/eventhandlers" \
	  "$$incbasedir"; do \
	  if test -d "$$dir"; then \
	    echo " rmdir" "$$dir"; \
	    rmdir "$$dir"; \
	  fi \
	done

install-libSmallChangeincHEADERS: $(libSmallChangeinc_HEADERS)
	@$(NORMAL_INSTALL)
	@if test x"$(libSmallChangeinc_HEADERS)" = x""; then :; else \
	  echo " $(mkinstalldirs) $(DESTDIR)$(libSmallChangeincdir)"; \
	  $(mkinstalldirs) $(DESTDIR)$(libSmallChangeincdir); \
	  if test x"$(MAC_FRAMEWORK)" = x"true"; then \
	    $(mkinstalldirs) $(DESTDIR)$(libSmallChangeincdir)/actions; \
	    $(mkinstalldirs) $(DESTDIR)$(libSmallChangeincdir)/draggers; \
	    $(mkinstalldirs) $(DESTDIR)$(libSmallChangeincdir)/elements; \
	    $(mkinstalldirs) $(DESTDIR)$(libSmallChangeincdir)/engines; \
	    $(mkinstalldirs) $(DESTDIR)$(libSmallChangeincdir)/eventhandlers; \
	    $(mkinstalldirs) $(DESTDIR)$(libSmallChangeincdir)/misc; \
	    $(mkinstalldirs) $(DESTDIR)$(libSmallChangeincdir)/nodekits; \
	    $(mkinstalldirs) $(DESTDIR)$(libSmallChangeincdir)/nodes; \
	  fi \
	fi
	@list='$(libSmallChangeinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test x"$(MAC_FRAMEWORK)" = x"true"; then f=$$p; else f="`echo $$p | sed -e 's|^.*/||'`"; fi; \
	  src="$$d$$p"; dst="$(DESTDIR)$(libSmallChangeincdir)/$$f"; \
	  if cmp -s "$$src" "$$dst"; then :; else \
	    echo " $(INSTALL_HEADER) $$src $$dst"; \
	    $(INSTALL_HEADER) "$$src" "$$dst" || exit 1; \
	  fi \
	done
	@list='$(ObsoletedHeaders)'; for f in $$list; do \
	  file="$(DESTDIR)$(libSmallChangeincdir)/$$f"; \
	  if test -x "$$file"; then \
	    echo " rm -f $$file"; \
	    rm -f "$$file"; \
	  fi \
	done; \
	:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
